(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    195609,       3509]
NotebookOptionsPosition[    194010,       3476]
NotebookOutlinePosition[    194353,       3491]
CellTagsIndexPosition[    194310,       3488]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Gaussian Elimination and the reduced echelon form ...
* coefficient matrix contains only the eq\[CloseCurlyQuote]s constants
* the augmented matrix contains the  eq\[CloseCurlyQuote]s constants and what \
they are equal to.

the idea of Gaussian elimination: the row echelon reduction of an augmented \
matrix creates a new system of eqs equivalent to the original system of eqs

Gaussian elimination -> augmented matrix in echelon form
Gaussian Gordan -> augmented matrix in reduced echelon form

no solution -> the system is inconsistent\
\>", "Text",
 CellChangeTimes->{{3.7573288928254747`*^9, 3.7573288939414635`*^9}, {
  3.7573292491023664`*^9, 3.7573292919288087`*^9}, {3.7573293292509823`*^9, 
  3.7573293859802475`*^9}, {3.7573294797983093`*^9, 3.7573295484975586`*^9}, {
  3.75732958817942*^9, 3.7573296352764845`*^9}, {3.757329897295618*^9, 
  3.757329897750402*^9}, {3.7573309120394564`*^9, 3.7573309225204225`*^9}, {
  3.7573310370460973`*^9, 
  3.7573310385930176`*^9}},ExpressionUUID->"c3ff82e1-d5a7-4451-9a68-\
774991d71dec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xMin", " ", "=", 
   RowBox[{"-", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMax", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "-", 
       RowBox[{"3", "y"}], "+", "z"}], "\[Equal]", "4"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], "+", 
       RowBox[{"2", "y"}], "-", 
       RowBox[{"5", "z"}]}], "\[Equal]", "3"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"5", "x"}], "-", 
       RowBox[{"13", "y"}], "+", 
       RowBox[{"13", "z"}]}], "\[Equal]", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.757331072930581*^9, 3.7573311421265*^9}, {
  3.757331222289121*^9, 3.7573312578809233`*^9}, {3.757331289430502*^9, 
  3.757331361750102*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"ea7882e6-ce70-42c4-84f3-e3d5f4b88843"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
q28GfM+MJ1IXxOqzsXG6UykHrtn7xBB80uDb47uL1eOC/O+dc0L2idXXYv2u
yxNexB5pDyX42T4fG9PXNnDfuUD+H3J5wwuL7hF85JOgtAFi9cTY+IicYdzm
1qpM4pcYq2j02VKsThcbN1k+XUnvt1s5wX8v01vqIlZ3i42DqPzt45GUncXF
Qewy/uV3sBT7DkVB8sILsbpboH9+UlnytFjdLch58cDEpKEnmjk/G/jHHDU+
rFeTy8VZChR2F5TJ0Dggvkdj43egP9N2edC1Y8X/+f0R6HfkTNT/KlZHi40T
XQn77Lm9lsa56ot1a/LE6nGx8Yu0/ufuKefmcfGLCUN2tkyxovSriuvCx4nV
1wK9g00HA8UlbRx/yP/AQua9cV4RF4+QtMnt6mhN42iX51n63j/Jf/cEeotO
Ok8e1JUS/nVOzU93itXXAv+ujfL954vV4yJxirVJ/5q8aR0ANt6UabHjpF9c
NhdXGvD+plL2cuov2rTL45SpWF0swifyd49Pl+n3hmycZcUe9cbHy6j/6vaF
q8vjE5o5f5G0pOcOL7H6XWx86m2o0emgmTQf4M5vWe/09fR7K9Z+kh7at3WT
5uNieS3dhvRdUcjF1x7dz7lZGJ/PxUEqjkQ6nJyRRfAplkoHBojV3WLjQVoT
q/Mq76fRuFJZWvoEsTpU4ON4rPes6+v+cese1o0+lpvCcu4mcfGpm69kPx65
+4eL48xzevbF51gyF4f6UP310jiX3wRPrulmsdacr5sBPUz7XJGvElnJ5T+3
SN17q3OmiovjY90DnuDslh8i9p4I8Jz+PS93qK/4z+96HqfeXbq6H81L9/Nb
NnhBEf9dDImTTiyc/aVvFZcXvUMqytZ4Oc2Xnmja3HG9fzuXRw0+py26mj9b
VsnlM9Tn3Kpc0Uy/l5xYdljSTeydCzZ/Y9X3YvceH34QvGVe/JkmsbpM4HNz
rVP/2a113Pez6z/88v0oVn+JzYt4+viSXkmpgMtz2L1bY4ftltcEv5Lyd9eE
kErufIv+Xhp3dY2yJc2XfnxWquj8nTbuuxjy3u/v5ZueWdJ841kD5X5F+7Rw
37OAv99Uj4uZyTRfOkJpRXW/kW0cPfh7ZhnfPJhSw+VLf1J+Mu3EPZpHfTn7
TvD7De3/mTdeG6Wrufgu/f4oVscwUWoD/90f5EzaUaFfcreay6fqdM88PCYo
jsunCn45cJ/GVxrfGXOjo2OZWJ1P0M/t0zP/u1gdJDY+e9ao28NZkjQOYjVp
57LvYu9BsPlaV0fNrTIKSeHytZYZdLp3PSSdxj2jHAxk2xq4fRztHq79+Oh0
1l8un8d6064vOZJpBH8oM1ti6pfG//wefND3lthA6ULuO242Xwj0IR8Gy290
zSe4goNRPwlBE7duo1+mx058cpbK5fIxmh2f1450yebyXjqEjwqpvHeT4JGt
FQ0WYvXHSL6N1/w8Z7F6Smyez/zbC465Zjzn8nycXIaf0qz6QOilF/Ua9kSs
Xi7oB0UO93ITq78EeWS+LNmmeozWbWPzcN5G/Hxg8j6Ey/s682/CkH7CecLm
j/1Jd7tk3x7P5e2UbIt17psRS3Db0fNPZInVbWPznWr0C/W/HvzG5SmtW2J7
zdH5J6GP0FRcoylW7xf0eY/7RcourOfqJ0TdmHX3rlg9K/DZ9Lmr0Vax+sDg
4zJRzW+2WJ0o1BvEvvcjJWmxRmuiYFG3jTqyUjQvA/xRrxK43aPUuY519N0l
7KuD7q3dcdV1tiBOy0nlbMdSLh6Cun/g41iX8LuDZK4gXqdB17Od7vOw8zfb
vg8+JUHzQ2HPqIsIfJVliNP1dvouFdp9EHx52PiOSYId7y+1LJah5yP2/SyS
F2PjdvulVBCpTwhcZdLzpm/SMQLZ9aOVfnWgeSKsPrH/x4Rtc37bWiBoGdRq
HCyWR8m+AwL8SqfsixVttD45+jVfyrRHjdi7mMDH3lcedE66VvCo49OBK6wm
E3q2zh5wG4vrnVZK0fqKwA0nLCicIlVIxhfyyLk02BxuyRGMW+hnJN1Cz4ns
eyuwuxK1bTHxijGCR5uG3njZmdYRgd2iPh5wf13p+T96BAmmKX55Nlo5ical
mfcOgLtdUb2ULJcpWK31YW/8+WWEnn0nAvZuWLnu1JilKwQjJBxvO2kGcXkB
7LqyXupoffbwIIF74dcuAQvMCD37fgfa1VCd7eM8dwlpF/iBx6bNM7skCVRd
VHpZ9g0iOOxNy2Pd0J5t9N7MvsMFvKPz19Y90qUC3dgTI8b9o+PIvpMFO+w3
bJq6idC+K5Oepv+Ry+TyI1g/gUOlj22LbKnAt8FKUPR4LuHD1skH/uyZxvLQ
joVk3Mk9xvbNFPcO9H1e2Mn7ZPNba3OiBe23DN8bCtc74LCHq3q99TKE6xhw
tk4g8LLaPk4Da2m9PuDOB2UeeNRnCLzDvFcZtVG7xfpwdnfiAEtJmt/H1lEH
fVxSv5TXwbReH+jdm1eN31k4XrBm1tDhg6VquTgt6uKCz7iH+8aXdBom6N66
cusqySYuzvzsklbBP7F22XcugE8b07PdVapRsMt5XNPqOBWC43t56B/4Ovc1
tQWS9cQegO8r9imaL0n9UsCHxcR0UpVuIvYM3NM4P/2l2LvzJN9Bu0uhhvBa
VpfSeidYsprg7Ltg4OPnqxHfXbi//qgN33WynvJn623CPnv2LMt6YlnNzaN9
B5w0v0dSeszHssg3Aa+v0zqcwBVyTkp56lAc+2TaHqU19ywrCR/gs+c8aQiO
pDj2/2zvHTtihffZnqfPbleUjSE45h30Bj52z6/tc5au5M4pJd7JQ+rE+gU8
ZJObnZk0xcHnxKowu2wd+i4V2jVse3CwSii/21NV1c/VlA/7/hT05tBZ9laW
Du8XdDXwMdstVcvhbL1W4ClHGjNfXa/h5vu/yxFjLonxx/j+0Juo9Op6HWfP
+QsU11zUqeP2tUVvomxfWfJ+0ycv5234GcnvX5WLYmb7C+0Z+id6UA503ysc
R3Z/0ToUuP6yVDW3bu9e4TTLWmg/sFvov9M0O+0offoeH/S/77S2cfH/3pcX
7degn7VT5Zf7pnKCg/7Vu4ScJ+GlBCf1nPYvSAjXLxG8Tuq59qcc9eex72EB
f7Fy2U1JWfo+GuHTL67p9Cb6ziPa3d9Y4mdtUEH0DHrDz19L2gzofk3w9cbK
ITb03RPgO/Y+HX7ichnRG8nPerA4eM63UoKj3dlK9e0jhHzMrlS/6ilF/a/s
e20Yr24mjcvH6tP34IAvcrlRUSEWR0K7H39a/u0vI7x3pS1827BlDq1fwrxD
h3Y3T68ZInWDv5eoFsSN6RpVSdoFH18d/a6LvYuInOATOi/j70LhuAMn/oYi
m29bhOda8AF95cMHPp2F494pZ7bFNFn6/QHG107n2M9uUvQ7A/ZdPND7Bzhe
H61fwq2ruZcOS/UUzkf23Cj1dOmSeu0abj033yShVymc1+z5tiF9SkJPof2z
52Qjr/bbFpbV3Ln3tlfewgTJau7c6KzmIZipQ+t+Aw9XOm+qJVy32fP5lh7d
zHtaVnPn5LKEayV5EdXc+dPr0tD+URurufuFSn2XoQ3aVdx95ICtpM33a1Xc
vUbxucpkFUnKn9QPuxvxJjOikjt3rZf/ZGcl1DN7vro90+3rQWG/ygfnqM8o
jv7P8zbkj923ov5oJNU/xj0jNGLTJ+E5HHoDLls3qM8qS4pjvTq/bcGlWcJ9
AXyAe/4VqGkK1z30F7i2g3ZiZ0tq58AXpjaZNEtWcueE/XoZw20tqfzk+1rp
xvn/DIT3FOWURV5jab1Y7n0oEe51eNrho99L6XtPIrybzoi5Y+VoHBh+UH3/
a6rmtuWEntQDthraYeiVMiIn/JEhxmOe1RgUCMKvPS/aNSyG4LgnQn7wuX3x
u0/ut1LOD3q0oM+Z4CtFpF3gH1W+DHf9TuO68F+Gfft5/OJ4eh4Gbt41QmOt
bTFpF3xeRhzPGCpHz8mk/lOTz7NhwnbRL8hpETbZ/opwvSDvyaIur2Bvv682
xfT9WRF+SUn918nLRQQHn0mGg7taCMcr6MbPl6960PrN7P2C1ENSn2Wc/62Q
8IH85wY9HC6wySc46FvW3ujkIUvf54Kfz9fZWzv0Cn2PDHjm04m/jn3P5eLh
R0Lmz6mzzSd84Kc8oSRT4D6+QOBTum9CYydrgmN8wQe4xXi7wI9ieiZ87P7p
r7bN5/yyCVdeP1P7kUvaBd4UHTPfX7gfgw/wucsnzjkxPkdwSKvfHPNtQTR+
zryPiX65eVgplhvkCHY+L9PopZNE892Yd9lIXdWN+Xv6CtsFDvlfnh9gMkKo
T/AHXvTla0XBN0oPeV7Gqk83s80m9MB/D7/WrH4li74HKrKfn5OiNs8Vjjt5
fxbzusJfp6EjfX8T9rNj+zCF4UI7BD3spCbWuOv8b/TdXuB5x7tGlHbMJfTg
c1P1ZUWJcJ8Ff1LPxtXMbrVwXoMeuPdPk55DhXYYkNhxv2ZXmq8EewAftPv+
3v09py/nCeSy9Z19uhSSfoEeckKexEXLzzwLp34P4FeOfltnIdTDhhLTW/Y9
af0k9h1hkjf0RuNymTd9pxj0zTLvvT/qU3qSVytw0f+qT98pBn7rgFTHU5vy
CU7mXW609otw+n4r7Ofd4QStzzbZBCd1SlYYXi76Rt/zBa7tvkZ/vyzFwSd1
gtoA98vUTmBv3rXNt11l6fiCj/Sg05a3dqQLLIpnf/w9kNbnYN/lBP6rn80q
o1+phA/a7W0b9m6BUE7QkzjDQDuL7I5UTsgj+OERa2JA9Unw0cfUBtvQd9WB
5y14ZFjhnSVQyBp+rb0XrR/MviuEc2B6RVBzTy/6jg/w3gOtLyeG0neLcE4r
2iV5vE6XvqcD/I2bwp+3VvnEz4D9fZ6yq2GDbgnhA/y44Yjkt1bFBMd5Ut1q
3JmE0ELCB3hLxy2hKl5FBEe7ur7V/todCgXHjuTMPNSB4uy7P+CzLG5e+GmZ
QuK3wTlnmFPHy3W6FYQ/8A2Pnmi/sSoXxAYsP9pBeA8DjnMs6Mn9JXFd3jJr
+v4R2t3//rjsWqHeyDs7IjkLpYwHOHnS911AH1gw6l5/oT6Bg36wVum7iaE0
Hol286s2PDXVzRE4F+q7DZJro3EhvF8mahd4/xib3RdkcgWaW/65hMtQ/bB6
I+N49XD5IU+qf5yvrt6vuJIXWkrGEXiswxHPL1KlhA/w5UPkLVYL7UH5zkvP
cFlKj/0a/ii0O8s3or9TGH1Xjtwj0mql33qVERx8+tkc3nNRr0Iwq0DeQVZ4
7gOO8cK4k/HSSwzy0Csg7YJ+pdeQrsuF97JVByKnz+xI61ay73RAb317BaUE
d6Bygj5zQ/KzLsL1FjjG8dCPI8UV1vQ9ODKO3dNO/BDaM3Dwn9ba3N9Tj+oH
fPxmf9Z+JZwX79RdmvOl6ul4Me+pAa+bpfrOSKaU4Ojv+p3yY1SF+gSOdp01
fN6ZCOUEjnaLHTb82h1G5ST3i5pRMyYK9c76MyWqQxv2C+8prL+0ZEDnS5u1
KY77xc9eRRestlRy/snsrX/mewnvL7BD4OoKa7T2C/XH+kudQmeNMvk//HtX
D8cFPBK2W2w0THZoexXnr2P9nM0zx63vIZQH9gxcc1bPqbuEdqWV4j9rnWQL
Fy9g/a6d9DIz5wrlH9HbbkyWVCPn3wZ/6HPvhV/2WvF0fgF/IalqdsqzjODg
M+bs2XdmupQP+c7Y+kK+lnAdwzpA+NzL3DVZspTgsJPGK5NHToyn+RmknrfU
07ty0oWEntRZb608OEK4noMe+GUNr96Fl4oIPfQw3qdH8kcd+g4c8M6NvsrX
LcvJeEHOtTUzvUI3VgoGWFU+nd6xjfPbgz/623xJz6X6UhnhD/p1+heOftah
742B/nfJ2s4X4uj8xbnIvulZ8wjhuWWc42sjeVla945dB3Bu0e4zonaF8ByY
7DQj1l6e5oNgHSbvB+E9kB+v3i0RnqPIO0EivEOjqUlX4fkHONr1HelXV2ZN
3wPCuetbilbXE5uyCT3a1TPKWTNYn75fCfqK9WMtlnnT9zTB/0/qhOTXXvRd
SMhz5OnkgYIOucSeQd9FIX2PQxjFSf2qA0pqp/RyCB+0q+ER19wtPJPQk/z3
GTcCAjpkEnrI/+tUhkSpdTahB964+83RQK8s0i+cu84OvihtefYv4QM8/nzU
NBfFJMIHuP3l2+PHbEsg+gSuEj43Kmt0CsFxTnPySi/buj1dsNbp4/p7nWk+
CPsuKskj3hs8Xv5nKuGD85jagQXJL8Pp+6rkHQm/46fnC8+BbofjNqQp0Xqx
7HumwCsUdPZN2JZOcLQ7snRll0eaKaS/JF/b2Gf2SPe/BAef8rgBveMjU8l6
Aj3r3lk9wDEsk6wnwLf88U8f0IG+jwl7+DVlmbF6B3puhD0kGJytXCIcR/DB
uLeN3d9wMyKVzF/gi8Y7eOmOSiF8gFu7nJCS3ZpO6CFPcmOKe/zmdDKvgSu5
xyfY/EglOPiEe36KCjz1l76PLJJT8viUe7296DuYwKcEZBn+DaV6QH+fvjHI
r9Cl5yvy/V/exMxAq2xat13E553NN7kTMjQvjbwTdTU09IBnFuGP8SpWqg1u
3pJA9ADcLrDBy0QhieAYx0ndNi3boUHfhQT+eseLUxWn/xJ62PlEz4NjYiLj
6TukItzNcP0dO4040i/wUUoeXDxcPongkGd+ZaLStYh4+h6nCL9qtT3XYFQc
rVMp4rP+mPHCH5sTBB1Ud9961YXyZ9+phDyt1x4mVZ+OJXyAz+yU3bObfAwX
j4i0Hv/p7Iwozo/d94jcjffTwrn4Qu+EiGUnFB5zfnKJa7/MP+kacHGNtfph
RVtPveP8nLtb7R7877tINl7z/PrBITO0sjn/p87PvpN++GRy8YJr8qu9Agal
cPEC3+3eoUFtiVxcRrP3t6/aagmcP99k2Et/Y9U4zt9u7S5Vd0+47bL+/CDl
xK+P26I5P/BGJ50uQ/1LOP95/ZERsi/HFXP+5A5lcpLJfhWc//xqTUuj1bhy
Lr6WauzVcHNaGRdnnDV9Qkhvy1QubqUaePri8Ol/ubjM8+CGL/dnxHPxrL/R
GS8+TI8VhJw5XtP4Ko/wgb29OnJ87bc3tO4I4uYnXj2fHPIkj4w7mxcBPPzD
1Td2J79z8ayBfzZ73zwezPnzrxSvHDP7XB7nnx/Qv35WVFsO58+ftG60aotH
Eef//+oRaeDSVsDFHR6YTlC361LCxUGkci31P3Yp4OKhFiclHWaPrBS8Ty0Y
L+9wjbvnsnHMPas/7su1qOLilYJ1gbWPfSoF7bsW2j35d5XgbNyWvDcyrXSb
2shqLr4z70fnviO6VHBxk8xoqW6vPMq4uImV5J2R49tKuLhA5V6XyefPZXFx
gfJl0x5ptmVw8YW1dh4zOyjncPHTJZ2Xqfwbl8/FKRKmVmoe9skVLNw/yKj7
U1oHhbw7ycSJBg27rlxyu1SQuumd++h7tK4bGw+F/g++Chuo51MoGP/62ObH
L+j3r2xeGXBjE599Yww9OX/7dBNvNenLnzn/+e7ME+k63f25+OkQ+VJ3+RN/
uPjp/F7xB1WP/+bipy9qVc1WRfzi4vjbK7x3OR5P4/INvFsOWbi7JQsmWVfl
7L+QQPhg3hn16Pz+9rob9P0i0fkn/m3r3V5JNwg95i8bP+318OW6todJXJzl
/VyXZVO6RAqSsi6O3LHqOsHRrtmTz7vXJ1wn+zWbl0Xe5Xj/WnPhsq9c/KWT
1TLtzUphXDzIuM2sZ6TqGy7e9Nu6+umsifcFR+wLPy5ZfoOr08nGZRoL0leY
GrgJSoeNmJXjk8DV77w6y91zzFX6fTwrP/DYrzJOFx/FcHkmlyyLu2tPzxPs
fDVvxUqnBJqnzPjzgffxOqnxzj+Hy0P4JGs+YId/AZen0ffW6PqEZaWCmDku
ElvKr3H+HzYfxic6UmldcDGXP6MvPDoUTivi8lsqK3sMPjg9SzBBskFX2YXW
3WHz5TC/Zk+/094tuJzLnymcuclexiqDyze4s/7juStWiYLCY6Y6YacSCM7a
IfSzV8NMRm15oeDE6/7ff9hep3mpovsjmyfTura+38PgfC6+H//OpdvW5bmC
GYPenhuZc53mX4vGhc2rWV2sOqoqOJvLB9Ca/Vw1cHkm54+dvNHAarDuV8HD
ef5atrubuDxA1h94Qq/L4Ie5gZx/70rOoH7p4yIFbzMstm/dRf17mF+svzfr
3cixritcBVcCJeutHCgOuVk/8Ghd2/Dfqc85P/OwG186yDt+4/wPA4Jnzahb
/Vlg/ezuop2PKU7eq2X8HpnjPMrsgu8JzjQ6VG56Sv0eJJ+N8XtoKSVsNqwI
5fyf1t7hKs5XYzh/6Sqd0/m7PsRxfrPxJidXpJVlCpQ+HY47NoX6pdl7H/aL
DY3N5n3W5XB+sLq2CtP7qVmc3ywlfN2cS2W5nH+sSdZLLcS5mPPXHZmgM2Fu
WaFg9ZV8M88J1F8Hu2X9eB23xi6JXlvA+buu2YUZr07N4/xmbx6vNNsamS0o
vrVTdc8W6mdj4xSk7ss9S4vM+bmcv+vAOI8doxZkCpI6BeXabaM4uY8zfqfJ
KXU7qyZmCRq/aWw+eY/6nUDP+s0G75D5ueVyGudHSr95/9yYZ78E0yxinu19
SHE23xL4vd56EanvUzg/3ssDdv8KryRxfr/Ek6uK2i7/EfxwUH68YwelZ+9H
kHNUrFGLo2OyoF+PNvkjD6hfC/Ssv0tf11nDdUUi53870ke9S4VJBucnzCnx
6q2w97fATUsQurAz/Z6JPYeAT/b88UdjFlcKPP1ls3fI07qb0A/rP09KWKwa
/OkH5/dWrxokUf4hhPP/O66o+Pi1NZ7zq3v3rvWPP/Ba4DTjwb4NirS+Jvs+
NfB43aXh/pk3uby+Ds0J1i3qtYLkDq8fzzt8lfSLzRsk9aK6+9oJLGq4fJhu
vXzKjvlUc/knf8bu/DcnqYrLX1LV2bxHqXcV5/98Nbh4yspD2Vzc6oDCwuTw
D+mCrhcr2gs70HgH7JnNB2b9lsBXeAnGKh3K5+IpfSxGXpnemsrFR4aFWH9b
lPqXixdoaIw70KX6g+CubJG++RQaLyDrJxPfSU77kJOdGisIyui9aM80Gqdg
3/sm6+3wu/WrPyZwcY2fR8uHpe/9KXCZqqJhLFnIrQMT3TNlunTI5eZpRPXc
pUfF6mVCPzKKjxVtSwXc/WXSz7OFarJJ3PqsIhPoMV8uiODgc29EbeK9DvQ7
cqxvOlFVfofF4g7go7F8xO3eBdR+8J7a6MWjLeTrEjk7LOhS2Dz+O7VDvOOm
skHD+WELPY9B/kffPH/0qcvg+NyfP+Lv4jZ67wD9x/x3NfPbSjg9aK6ZUF4o
Reut4vwmc2RN3PNO9F0U9HfcMcvq2V3rid8G65LfsRLLXkrUDww9JJ+S3rRU
kfobgY9zs/9TIEf9jeC/9tSB2iPK1D8G/iel4vp0fEm/wwafvB7VXnlbErg4
Qr/wWW80LRO4uEyvyq2bVB/mcePrmybzeuLtPC7u88Dy1p5bu+n3fKDXHqXj
7T6J7uOQn83nhzy/7zRXasjROrjo19q9VxPs1yRwcaslLjmdfcW+Swb/63bW
Z7bPoPMU62Hewihl56l0frHf7ZJ8+EXeirL1FAf/ifvGnb89fAoZP+LnWZ64
e7vYuxLAJ86db1En9n4B+ByT8a640kTzwID/kFpZHp9N88+AG4RpaCyqofco
kv95IG7khSaat4F27/dZdLVALK4D+oz0VUb9mqicwG8vtO8h20zzVMDnxC7v
/MZ6mv8EveWN06iya6H5WGSdTF7h1L+O5l1hHBXXqGtofTKmeVci+tUfvH6P
aqd5UeSc09N4bY5YHgnwy4oZs1eJ5X8Qf91w7x+nm2l+G/iHLPbZH/RwBuED
+hFDI5cattF8GvJ9jV6k4ds26t8k37mUad7umEXvXeQ7i6j7KvZi36UCFzh1
NHvwj/rFyHqyStN6VDG914H+VOpPh8hQ6kcg38ffe5VlXk39g+Bz0FR19JdW
bSI3+Z7r1EElE3Ud0i8SjzYcb72zrYHm04jwA6EXHf+10vgN8C3117frttH9
jJzDNcw2no2h+ZSgd33c/8iX1ipufAO6vFxdG0G/Fybfg+YHRdRdo3Em9O/k
ZpN/MmLvHv6/uq47nuvv+7/tJKM9pUWRKFlpT320UNmR2aBUGioNWlqUQlTS
pCRaiopUKAqVELKy9x5vb+/3z/fx6LzO6+E8fn+9Hs77Ove87r2ve8943nOg
/8VbYjyms+o3QftDW7y6xOyxjiHQZVdOGT+YVceQuf86Vn7+TFZ75r6GRozL
D0EzWQ8xLyoulAS3ku/LLiBdodkO41WMP2FVz5lqjWbyvYgG/77QY9dCvpdV
ylUnMwUYTwX5pUtV8z+x6hKC/B7TG5pKWXUMYX0pr4kf1SaEde6AvmFihUWF
Fu4PQA8xyjKy0kY8FtBDy1PVVjhh/i7m3nyhzaeZyYiTA3lOLJ+8o9sR8/9A
+7TDnUoaAVhPENpr1KfFyLHqBsK4vb08+f4+Vp1BRv6fcSmZjjXMezHrJNlz
1eO+foEO/H/NqbmVn1SHeR3/tY//OH7kVVb9QeYecKHOvd/CdWQ/dHL4Y+IX
3ErWuWnUvYJHrHgzrJMi3SFPMwTNZJ9ffGH5xF92LeS8WJxw902kRis5L3bo
+/s9Sm0h+/zTdAOF0xqtZD+3GmZsdZrVHvq9E/Dq6oPgZnKuPZWtKkgXNJN9
3ilf7tUTuxZy3t20qd4QrNFM9ueLg0qbY4NbyT68+2bg3IzUFrL/OI6KV0zU
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
wbfsDS+02wnus6Yo7/F67Xaix/4fZAWebg==
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJwt1Vls1UUUBvABbriWyg0SA0FFQV8IIFIKQRZRQmQJSwVsy9qWFiiyE9kR
aNkpO4IgICKbKC6gxiURo8bEFyLGgDEgAbfoA0YBQYFE/U2Ghy/fN9+cOf9z
Zzm3deWMYdPrhxCOQgOozAthayaEF/FZfIX3NT4Hl+lT+CLUqxfCD3htNoTv
8Mvif8L1+T/iZvkhjDFXlgvhvPE1a7/Bv8G/9AW8Ea+H3dChcQj75HhP/C/m
7pDnV/yo8Wb+xMhyZvlbcH9rmsJd8LC5/mIb8NvRT9AH7gyh1PgT8yPwB7yT
9Pt4sPFb9JD8lH8e71XxS9R7gN7le+35femD/DZ0J/oVugtdTre0ti3dg97P
H2S8Q85y3JlfxT/ML6TH0YfoTnQZfZ+YYjghvgQPxM2hGZwXt8r33xY7UD1d
xS81Hkr3ppfRl8Qspo/gwfzudA2/P11IL6GH0D3pWrqVvK2hJYwx7sNfgZ8W
049eTpfQQ+mVdBNxD8GD4FiCEkNbuOh7JWKaMvKgG68RvgfHO+RoQiF0hY5Q
CsUwGu6F++P+xLOG9nH/YVg8Yzwcj/XtIrwat+ApKTSMd5IYz1/HL6PH0mvo
R8wVQDuo4Ffy6+Lvivli7vht44J4T+MeGj8FRbBO/O94NS7yG47HNXgj1PFm
2f+bfu9O647RhfxZ/En047n0Pqbh7vA8PRl3g630M/i6jZsmvpruaO2MbLrD
//BnZ1PMDXoOPYW+Rk+mJ9C1+Ih6nsN/85/Npvw1+CP+UnyTPz+baliIB/PH
4seMX1DDVDwBf8tflk13Mu5fJS7Ipf2rwFf8xhX2p6caO+bS3pfjtcZrrJuZ
S3c47us4PB6fl3NlvF/G2/NS/VX4e/6KbOohe+kF9DzYHlKtf6l5NJ4h/lbj
NB/rvKqGzWro45uX+cP5o/m9YAe/L38574w8q/Bp3g36DK4wd4qeiGdDH7oJ
bpGf9qP89rnMF1vAayb/S+p7J/YJ2MMfkJ/OcTndg14Al2LNuEfcE34vurm1
e619N9ZMl2bTHj5grjyb9mcU7mXtSNyGXx3vLv9u8XusPU7/18g95I+k/+QP
o0fRX/jOBWu/xNXWnqNn4Ulwmq7Cf4gfJL5U/AlxX/E/x63Mjcum821NV9FV
9Kfmzor5LPZya4v5Y2JPiu8q1gnn7P9A85n81N825KV7eDb2F37D+Pt41ZnU
i6+pf4A8JWKmxLeSSWsmyTUeJt/uybHHxHOcGO+4mPXGV63tZ1x8+95uy6T7
ut+aA7APdsEe2BlSAzoq5jW1HDI8DAfhuvFGfm+1LZJnN70jL/WQziH9zjK6
e+z/2dSrYy+M+zY3vi2ogVvqKTI/Ipf+O2J/jecyk7dIzi3GbdXwM/2mb/az
5kmYB1PFzIn/Y2I65FLvjHs7nT+Xvyn2MWtP0gvz039K7LXxrGO/7RLSHaov
5piY1+VfGt9NvHtQF98T1MY+K+ZDMUfFVMhRk0l9Z7G5hbAI5spVx98W3yrU
ZlI/2hDPLb6dTHqP6zPp3W7ibYm9MG6z/B/z35D/f80p+KE=
            "]], 
           Polygon3DBox[CompressedData["
1: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
N19a604Bb1lGTBgbA3J+NOaMvTNScGvjQ65kvt+ijBgxVqbmfCtHlitvDW5S
xp65d3LBd7IeUVv8izEXPJD1bZiCc/ZWeJTBNddhXFsNzi53l+83Ze6Xamgp
a7a1e69K8DV520l1oXHUOldybc8yOLpcXQ2iFmmT6+/YFLXuixz/Q3M8G+PG
+mG5HlmfrO2Hg1vlfGC+6pfzmfnK3G0Ob5fj3V6Z9UJfW5jzhZxb7m0/Re2o
hlQPms/kChun4NLWJ7XhIPAGOb+pJXqA1yojn6kFtwKvUYYmU5tdAO5ahgZQ
a6g51Aa/Zz6sj+gr1iz5tvzZWtaT79yZIj70Pzm9PN8zcGPVP2ohNZPaSY0g
f5fHqx08U5+1Wo4PNam6Rf2iVlWTqavUV2q1+fl9W+f9OIfRpEFwFLmKz9NX
1A9yfTWF79Qy74/1Wf/rCq7P/qZOc42r5nhon/3dd7ceqAWsydbmahmaVa1a
n4fP6pZiTr4s//UdfBc5gL7ub/rb1hRry2aM6+SblfBVNVKfSv6NFDXorazX
3YvNU2ibN/J66vL6jFlj1xhoVEbMGruegWfhGvrm/O/ajAFjwZ5mXT4v81Oj
HO/7lNETsxe2zO9WYq3GiLEiv7e3oKZUWxqj9hfcwwW5X3UD9l0p6o89vmvB
t6boj8mVLsv7KWdas4x+hX0L+xfLaqE/1aHqveW10G/qOPsR65e5/1oEN3CN
Z2FflGLtaiK1kT0Veyv2+NXf+pC+JJc7M8eznO6PWuQyc5pc4RzmJ2OPT9Hf
NnaN5REpeuHty4h1Y97ab6yZ6+yBHIa9XhmxbYzLTdQMagc5qdz001yrVvDx
iXW/FvGmj+qrv9ZCv6vj1ev2GOw1yCHlktYne6vTsl7yPP3fS7/cn3C/1Uy3
cO3EStRftY6aUm1pD8X3n8TcneCd6iP+5+Z8Zy43F09nTKiE5lR7WnOtvf4P
YAx4ZN6PX2qRe4xJY9Mc2hl7pewvctsO2b/kuPqv9WRP7AP47UW16EfYl1Cv
r2gauc6cJ1eyfqrte3J/P+7foT7y89o5n1nL5Z5/MT4qgvPJ/U5mdCmD07WI
LU9rl8Gx7T/Zh5J7y6HkUr2sGWXkFHOLHMzcK+eSe01mdCiDA+6NvTrjGuaH
8H5DUvQs9q1ETrV/I2c017pG1yrHNBerAczt5ni1x5hK/Laackglcpa5y2fe
UI2a4P9P5LTWCmuM3FEOaO2Rw8pl/Z/MvGpocvmgPWX5hWfq2dqLs7b5/x97
IfYM7R2eVkQv1fgxjuzR2+uZmaL3Ys40d8qZrTXmYHOxmlhtPLQu9tr/AR3N
+g+ui73yfzrjKlHj7SfIiX/O/RS5shxaLqEmVYupydSq1mTX47qs1Wou+0/2
odRi9g/sTdmjtFdpjPq/KP9vZez6Hb97Ntd2LKP/aG/tasbuZbyf/wuwhlpL
F2c+MCNja6D9OXtxS3I+8Nkncm18Jfi2fST30L2U88p97Tnae7RnY+9GjiZX
U8OZ7ybz3fH10ZO0NynnlfuqcdW6amq1tdxbLdQIh/26iP9p2atTE6uNO9QH
PzKnNc91yN6pPSJ7RfqUvqXP6DvGo9ymqTFWCY0o3/BMPBt7UPai1FxqLzW6
2t5+qNpdTag2UaOoFe2h2EtRs6vd7VnZu7IGW4vb1Qe/sCZYG9rXB/8wJowN
tf/8fOb2ALavD37lnrv3agv7D4153sIiNIBawJ6ZvTM1g9rBntk/vbMytKaa
Uy0gJ5FPyNHlT+YreyjDfT++839KvdUX
            "]], 
           Polygon3DBox[CompressedData["
1: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
fwE5anlJ
            "]], 
           
           Polygon3DBox[{{3680, 2440, 1117, 78, 44, 3571}, {3691, 2453, 1164, 
            139, 145, 3577}, {3692, 2454, 1172, 152, 156, 3579}, {3693, 2457, 
            1170, 155, 140, 3578}, {3676, 2437, 1105, 43, 49, 3570}, {3679, 
            2439, 1103, 48, 55, 2841}}]}, 
          Annotation[#, "Charting`Private`Tag$6393#1"]& ]]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJwt1XlsVkUUxuEpUuvXTUGpLJEKUjQahRoIZVEQCogkRIoYgiGgUValCFWp
WBaNssgikLgWolASlKUlFVKoWkARxQSIokJYqmBCqHUhkSCi6DO5/nHyO9+Z
97xz7tzbaafHSkumtwghrBFXiU7pIUxPC6EzdswO4SuLN2Un+UF5PtaKSpr6
rBA+EW/L9+OK3BAmXRPCBXkdTQOPhTkh3BtJ0x/PtQwhU96Em2kP8NyCO+jP
qB/Ru4xP70xeej9S/5SmHWZgjsgU+zJCGEs/KRXCZT3nec+g/0e9Xv0KzuI7
lbYM56lViAViKf8i/hPpfzZHjloznuDxEP0P+DXPp7GEpoy28GrnYq9xah/T
j8E8vsfk1+Gt+nqKruI2USA6iTbWTtJcjzVmuk++Ew/pL4rPgf/63aAeaMaL
4eoT8JS10fJGfIemM00lrhcF8awyknN71fpYc570e7H6KXzOzD3NXGrmudab
0hLdh/TT8EH6O3CKehf80vPukR/ADfrvlE/U25dHvRn64RLnNsBcZ2ha8mmt
NptPnfrN9ivOTd5dfIYW2EptJe/ufrehfY1PZxzC+34xLL4nXn/TzOJz0b41
an9itciTr47vk1cxr6F4t1o/0VfsMsOvemfqrc9OvOfJ59iv1F7P4ib9vWg3
x7Pxe5X6Euygb4J6R/zC2uPyyZ53tT0mZyY+i+WFtI1m/Mv30Y3mMq5Qe4PP
csy0b759K+hH8tpJU4K1enrgAPV0mnY05fF7U++ttwnXWG8vX4u74l72HYJ5
fo/h0xb3mm2UfDfutFZAMxj72DtPb1/cxr8VbS/+y62NVfuF/yvWF4ll4rT1
fKzCR6wPlI+L36TeK55pRE7yzR+y11E8KS7JT+Bhe5fJpzifDvT79LbPTr6l
jeoNNNfK56uncI4Z9tPew3OPtW00e/GYOCf/FufRnKYZQvMb/yr137HSWhf5
m/gMzRaaHjSt+a7jn4t11pbG9x/PUHSXb8UK+mP0xfTjnVOOM38yldxRw9OT
vWrks+mrcTv9IesD8SVxIZX8XcRv6Q+a4/EM1TN4jVH/nsdIMzTju9ZG0BzG
F2ma9D5A87L8Uiq5NzZZm0rzAW4Uj8rfx+dpdtP0oXlBflDeXz6R9yTxhNih
flR9EC4QZ+XDaD7XX8vnM7zRnLto22J3M81RL4x3hnmDZ5+m54wzXan+E87l
06g2mM95/UNbJH+nC0UqM7lDbvFNXKTviuW8zsoXpyfvLjKew0zau/g/xWuR
2vG05K78Mc7Es5V5tmYnd3w3+u3yUuuj5Nl8v6HPjXez2pG05D56WKxIS97T
UGu38xmG1Xpz4z2QlXhmyVdlJfV4ZxfyLDdPL/PMMM9Mz1KVSvadJd+YSjRV
ekbr3YCvO4v28rfwBj5r4/8V/M7a/DgLfUd7N9Pk4zpcL94Tg+JdjMX/35nx
/0B87/F/YqzFsy23b4N9i+KzqxXG94n/AbAD9yI=
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1nAfcjeUfxs9zOO973nPecxAiNCQhMyRUdlJpKNHQohQRRTIqDe0tDVIi
siJpGFntQevf1N4bpSUj/+vrd/X5eD7vfZ37ftb9PM9vXNfvVrf/sBMuTKdS
qc8qplL6l0oyqdShSSrVUtsO/fBYaSrVQe0y/b6kLJX6Kp9K1dIODwhfWEil
hmRTqf7CvwgfmUulFmt8F43PCj+t8U8KdxUuEX5KOK+/PYS7a8up/bGO94fa
E9Q+Rcd7WuOPFi4XXqrxF+v4A3T8c7QNV/tcbX3U/kL9XXS+wcJnCp+h7QK1
j0/H9Zyt7Tht32nc6frbT9u3aj+h43fT8TNqP6njn6N9TlbfD8Jddby/dT0/
qt1N7WeKqVQFbXuov6a2v/JxvtN93M4as0jH66TjpYUX63h/aMwpPtdQ3c9v
wr2EPxA+X/hxje+o8RW5lrKYP+6NexyqdkWd7yC1n1H/MI1frfFHeT5WaPx8
4TbCO/VsHhc+XPs00Pj9tXVX+zb1V1f/RvXPUH8P/ZZX3wLtX0fXe4v6K6t/
g/qnq/9o9TdV/+Pq30v9PYWbCD8mvLfwDF3/iUngM3Q93wsvV7u++pZxrRq/
Vf3z9Vst/XaicEvtv0a4kfCmfDwTnsWvar/D8+datb2r9jEa30Lt1Wo31Pi3
9fcI4cO1/U/tjdqni9pr1T5X539Nfw8TPlTbW2r/rP62ar+p9kD1J7qmnsLv
CZ9XiPvm/ss9p411vrTaT6u9n873pvZ/X9c/RLiXxldR/wfGWzQ/lYTfEz5f
+HfeX+FXhC8U/ls4K/yq8FnCvwm/puM9K9xbuKeOV67+t4UHCm9W/wnCrdMx
hw10/tc1/jX1nyl8nMa/oedziXAT4Vc1/liNb6jxdbUNFl5Snko9or59tO9S
3etGjZ+m8YP02x/q76bx9TR2tnBdjflBxz9A+FHhs3X8Our/TuNvEs7mYv6b
q/9J4X2FTxHuJPy68MFcn45/QRLz30b4Fx2voP77hc/R8fbV3+Fcv7a6aj+i
/t5q76P2Ieqfp/1bCVcSfkbX94JwH+G9hV8QnqvxZwvvj93R+Pq898y/tnqZ
OP9Fbr+o8S8J9xduJPyS8HTtf4KP30b73yVcFN6k97uV8ByNby28HVum8Q8L
Nxb+S3ie8ELhdsIF7b9M+D7tv5/wH+pvqf1vV3814V+F56t/lnAz4X+EHxV+
QLiKv6e5wntkYi6Yk4Zqr/X9VlX7efW/KjxQuI7wc2Ux3wdrPp8XbqX5/TEf
7QPVXq7n21f9HdT/sn5rqd+aYSOElwg3Ff5W4+sLPyfcvxDvV5nwvcJNcvEd
8j228pgXMvHt8A29qPZP2r99Or4hvqU7fL/Yj4d1fa8In+vrfdbz3V64yPuh
8+3G9yh8oLbK3KPG9/X9rmK+NP4k4WrC7TR+onBeeLOOf5DwJI2v4fmdxfwL
7+n+2cJn6B5yJanU1bq+a3VvN2u7S+0a+u1s7IXGX5qEze4u3En9e6l/unA1
4Yf0d890fPN3MCfqr6D2RLWrqv9B/a2SDhuPT2uo/h063gy1q6u/rvDvwtf5
ezlAeJvww8I1hD/S/fwifI39F/ajne0z9iEn/LrwOer/VfgNjV8vPNT2pjQb
3/8w4b/UX0P4Q/dvE35L428T7qntIbV3U38vv69b/L3vlw6bsIeup6vwvsKz
jLHPlYSnCu8mXEnb3Wrfo62y2l/rmHXU30XjbtL7tkJ4po7fH9us6+us3/dR
/0zhmhp/qHDVdNw/83NfJmxr3u9cI/Wn1L6TeVV/S7+Pk3y+A4Uznv9iLq6D
65mSCZvChn0pTUdfQeP/p+s5z/azsd//2zmv9m8g/K/6bxHOCTf186W/kIvr
2a7+W/EDwp/l4/puE+6n+yux/T7b9rNM+A3ba+w9Nqyuv2lsGzaqAb48CdvV
Qbi58Fh8pHAP4aOEZwuvFr5Sc7pF7+gi4TX4MvXviW8SXih8hHBP4QeEnxFe
rO1yta/Q9rjaL2h7Qu0ntT2fj3eMd+23JGKnEwvx7vAO4Ut6C18q/K3wu3x7
wpcIfyX8nnBf4et514Q/FN4u/L6u7y3da2fiL/32sfA7wl2FlwvfwvxpW6b2
Tfqtq769VZrD3eWL9snGtXBNac3vftk4NueoKPyB9vnbmHPvkY1r4Zp26Bw1
hb8QHiG8XXhf4c3C1wpX0P5X8d1gz7VdrfY7Ot7DSdwj91rb/my08L9lYYOx
3dhwbPPnGr9T7cM07kY9i3XEIH6f8LeX6e+GJOaLY76i/tW+PuZuT/v/ccIp
XU8t4S+FRwonwq2ES9LxDlfy+867m9PWWu1PdbwtGt9C7SU6fyXN3S3qu0lb
Ue0hut4b3T5T+1fV39t5P7VVU/sS7UeAvlHHP0r9H+NX02GzP8rEO7FUx1+S
xLvykrZlavdS35GF6Hta21Mec4SO10j7zlN/bR3vOY1/TL8v0Pas2n9pzhaq
/Sg+UO05GneE2ocnEVP8qd/mqn0c71hZxHzEfo/6eNtK413lnd2u9on6fYXa
y7WdkIlr5Dq4Rq51A/6amJ3YVfMzUH9PFf5aYzvk4i/4aMd0wx0v/6x2D/X/
mY/Yfph+v13799PfrsJvcN25sK+vOD7bqOv9RuP3Vv9XwkM0PxXU/4j6jxT+
Wf0VhV8QPlX4F+EPmXeNP1Lbp9gEvjG1P1F7sPbfqntcrPHHC3+n8Yn2XyN8
kvAPwqcRt/DtajslEzZgkccfrf1fFH7G5yNe5BnwLLAZ2I60vrEbiF/1Llyq
/rz+Xit8vX/bTPzjd2FQIfwY/qyyc5aDba9309aOd1fjq6l9iNo36PhtsjEe
P7i75uvfQvhL/ObphfCZSTp8BL910Pjaak+z/2xg+zrZ/gX/yPd2m+0t/jax
78VeEy+vs3/ZpPn5JB/5A98I3wrfyRYfr4p9Fd8X78gU++dttufY+4uEB6rv
XL8DZ+j3l3m3tPVT+wr9Nlp929Xuo/FjhC8S/h3/JjxaeLjwZuZfeKzwCHI9
7APxha7p0yTwRZqP69R/VTpiEmITvs+hwpvUf2wuzjdK+B/hE4S3av9hwlmN
H6X9J6h/nHAifJr6L9AcXGp8kvB4++u52v9E7J/w5cIV1N83F/6ffOU39Z8s
nNL7Mdj3cwm+Qf1jfL7T1X+18HjhEuFTcvF+P++52VAWNg97OiMJW8jv9PPO
MpfY50+wBb6/6sKfC//p+dmeD/v0h+dnRz7Ov014RCH6mc8twhcLj9D+gzzf
zP8yXf9Jwp8JX1CI+b9Y+G/h43PxfhP/rnf/pZ7vDX5ePL8hwjs838wZc4d9
6632leq/TP0pz+9OHW+s8L/qH4n9V/8lxIee38v9/HZ6/zF+P3ievYQ/57mk
45vjmpPyyF+f8PyTTxK//YqtEj4jG/kuee+h2v8s/bZC7ZWZyMd6Ov8m/6qX
i7yUWJVv8KlM5KzwAeT45LL7ecyBwsdr32WZiO2J8ZdmIp9v5ushnyPmJz8g
hyQX4H26Qu2M7vfUXHx//yRxTVzbEvMNCzORP+4sxPE5z+GyF8c5X1wlfID6
ezmffVa4sfD+2u7KRLxHfttb/W3Scb8tcsFH7Ovx5Cff5YNvWCzcTcfvqP5s
Oo7BschxyHW4t+a5iI+JF/jejs4FzwLfQowKJ3N+Nvig79XulIv8jnwllQm+
ZIFwW+F/FSMsKgs+ply4Qib4m7mlkcvAfS0Unl0aXNgh+NDS+J1+ch64smm6
/s7en3yGGJ1YfRl5STHmE98J1wWf9YzwMUnkOOQ6D2h8c7W36rittX9R79PD
PHtsttrVtM1U+0Ltu1rHqyr8qPB8bdXLYwxjh6l/jfpn6f7nCjfX8x1HfqPj
H+z7Jz8uaPxD6Tgmxx6u/Z5Wu63Gj8nFdXK9+Hy4ugXOn+Hv4MueMJ8HHwi/
19n+gPmGD4OXg5/raR85QP191f5S7cNywd+dbIx/P0/4NOFvhDvmIs/gWZ5i
Hw2vCJ8HhwSHRgzAsfs4RnhT1zNK1/OT/f235tfg4z4qi3iir49PvEBM3VD9
DZKItZdqu17tDrx/heAra2JfKwbfCUeF7z/K3zAx8CT135VEbHyS8/d1zFsu
4mfmblfcpOdxofq7peP6ujte5P0mP+1qfuxY4fczwQ+S73cUflX4EPW3z0UM
st44q2d2L/ZBz+sy8kfhScK1hMcWImYkViZmJpasUB6xQhW1R9s+j7a9xB8R
vzOe/c7S8atofI105L/XqH+c+kfa/+BPxum3iiVhPzh/fcfrtYXPUf8N2Yhd
awr3F/5N8/mQ+nvoeF9oPjeXRm5EjvQl/InGT9X4VsS6Gv8wcbLw4cJXCU/J
xvt+oPBI+Evhu32/A3IRH03w+cboem5U/53Cu5sfgDOgv8z+mvm4xph4ihiK
+Oq6dMRWE+wvG6h9of0x/uIA4WH4a211SmL+h2Dr1D9N/fWFhwrf4figrvBg
4fLy6Od4V8MnqX+y8H7ef5C2eiWBGc/3+aCPd6XGT/b33EJ4RC7wdOFmwhfn
4vnDh+wlfDm5HRyJcMH5BM+d50/MWFntDaWRa5Jzfq35Pzsb7zbvWHv7S+KT
hho7XDiv40/BvgpfoePfq/7Zwk2EL8qFvZrh+bmqEM/zceE2vG/Ybr1vN/p8
5Lq/m6/sLvxNWcTr3fz9wDcSoxCrlNo/4V+J17aq/3rt36EkcidyqE4lcb9g
fr9c4+fB0ScR/8MXd9bvq/E32rqoPTsbmN+v0PhHspHLktOOzwWnfHESnCNc
c2v99komvseDcsFJw13j0+GqibuJBYgJyM3g09qlg68jHk8Vgx+BJ+mudp9s
8KsvZYLPOy0bXBzngl89VbhzOs7JuU+2PWA8/GBNzcdy4Xa8t4Ww98uED+N7
zEVOvsr4OvX/Yj0GveFTzffPwjcIdxT+RPgn4cnCXYQ/Lgubhm3DJmIbv1P/
fWrfq+17tWvp+C96vuACpvl5tya+1fl/0Jh7NPZubT+WRjxK/Mrz7Kf+PbX/
WuFuwjdq/zuz8X5xP2Phg4QfEN7f7w/Hf0z4IL5X4UP1dwXxhLZD1F6pa7zT
9gTuBf+42PZkQiHsyVLhg+3fKpcHvwdfdC18pPrvV397+8s5ws/5+q4UXpuP
fOVc4l+Nn+n5bu/rRa9CyzqS/Lk0OJyp5Mt+3/FHE42Zf+bkbs8387/B9pHv
4TM/H57HEbaXcEhzhI/x/X2t/jucr2I/P/Xz7OHv+Svhm4Q72f9hf2d5f763
rc7fyU9/FH7QehB89utlwQcR28DrdimGj8RXtiSeUt9bGj80Cf7+lbJ4J3g3
Ovv9gR+Yn4T+Qf4LhwCXcGwm+IK/heeZPyBffki4URJ8/Drho7LBZxJ/7kn8
qv7jk9Cn0KPm6HrOwt9gr3gewicL7y7cVriG/p5O7qKtZiY4O7g7eHn4Z/zJ
LB1/nrb71X65NLg4ODn4beIsYqOm9jeV9L7MER6q31cVQ29DX4FfRU97zXx3
9Uzw+fDdpyVxTVzbrc4vyGcG2H+R35A/4S9LdPyJ6eCz8d9lwlemw8fia/Ff
V9uf9ff54OP3yoSeQD6KP9tN/QNzcT7igb2Fz8VeafwYjW+q8a+Vxf0ONF5b
FpzlaOFmmeAy8c/wIfBdmVzwefDf8HElueDgfhbemAQ3l8lGrj0+E3wY/Nw3
xn10vL2yMZ794Ad36virkuDP4P/gKL8WHpUJPg8OE7734kxwm/DvfyahD8MH
wlm+KTwgE3ziJh3vwST4W/gE+Ny1SehpG83nvuXx8O98z8T/6L/w2/DL8L3w
81vVX0/4hyT4fvjLatng74dngp/cXfizJPhK+Hn4wG98/fCP8Jvwg/CRO8uC
c/1ReGwm+MRHdL1NyCeEP1D/B8ITjN8Xvjsf8Wcp8aHet8P09zrmX1vbTHDG
LdQ+OBNccnv9vZrcXVu7THC516jdJhOc7oc+Pvht4Y+sL6Kf/a8suF70E/RG
ON8XS+Pb4VzvlgU/9pyvH/5zQjF0Cjjnp/SuXpEJ7hQO9XK174NP0/u3QNvU
bHBecH9wgHBhO0oD8zv82su6nym2H/Bhn5TGvXIv76k/bT6tbyb4Oew3/qBl
ScSnxCPkM40cHz0kvND9+CP0u6pJ6IEzbO/qJcERwxWjh1cS3mI9b4qup6kx
+uFMP6+/rf9NEd4D+6jtVrWn234doG2G8f5q/2l9cTL6nDF64iTh3Z1ftMD/
Wa//XfgRjX/H+uK2ivF9oh+iNTSwvUU/PMXfK98z7wP2ixySXPLBbPi/J8kx
iJU1vrb6amm7B9+sMXupXQefno+88SnHa/jXaaVxL9wTtnmqxuyj9lS1R+rZ
L9QxX3V8fqXne5HwE+QM2dBPuf9d++Qjvprt+JX4hPhrjXBHx2vowejF6IPo
hcQXL6n/BW21iWVKQ9+tov6V6GPlka+Stz6r65nr962J4zfs5z3psNnYbuLX
m30+4iXiI+KB7o5f5mXjfN2dbxBXEF+s0/a6tod1D6cmofFgH7kmrm0BdrYY
MSix5WrHoPM8P69om5+NeI375Zq59jnOb9o6/lzpehe00+W2x2hJ47Qtyoe+
SX57QCbqAcjPeL/hcOFy0aB4P/CJ+MZ1paGdo7+jr6+3PTjI3/tsjTnH/g77
cXc29DP0QfKbHYWo/4HbQA9ab729lu3Hk/k41pu8N8WI1+ArGjtfIN+Z7u+R
/OVBvx+tnd/hR3k2zZ2/wMdd5v2vcjxIPEZORG5EfMbzJOci97rP/rup84+7
HC82dL42yfnk/s7HnspHvRFcBnoWc8rcthDuaHsz1s8Xe4dm3y8JH07MsEDj
R/r7Q/ujDoHcgByBWoV1jof2y0R9wnyNHyTcWPgw13OMSKK+gXqF8WpfmYS+
h873KPxpEhojWuOK0tB3F2WiHucd++9WmYjPyG+ox+AcnOvz0tDm0Oi+UPtL
bTcnEQMSC2JHsaf4EHzFe6XhK4jniLcW63kdqvaH8EDF6Kc+4kDbX/wA/oCY
Cl+EPxlg/4P/mmn9/lD7LzRttGs4ULjQmx2/wJeflwsbj/aBZoLtp46IWhg4
RLjEb3S825OIcYl1iWHhcjr5ftAU0BbQcNF20QDQAtAg0CKwWcSrcDzYMjQH
tAc4VbRjNHx8Oz6eWhg0YI6HZoFWiM3GVmOzqRW51fUdeydh++EI4frg/Kj9
uktbLokaOWrl8CH4DnwItSL4DHwHPghfNFlbwf4De4xdxVbW1XZ/afgAfMEu
+1waNRD8Rhu+cJGe10G8N9gFPa/TCqG1Mx9o28TsxO7kInyfbbOhBaHxoPWg
+2A7qpPDZOMdI7Ymxubdo8aLWi84WbjZIzWmcTo0Q7RDYhxiG2IcYh9icsZT
I0asTkwMTw1fTayMhjPZz4fnRUyFFowmTKxFTIh2TA0FseL+2r5P4vnQT8x5
QyY0ZWLRvbX9lERMyXhiEmJVYlZiFWKuMZnQmInFiGEHZ4JzIrYlhiSWJaYl
tiRmJRYlJiWWhfNG54QDhbuFM4Y7hUOl9g6OFq52oH6/pBg2EdvIN8G3gV3E
PmJzicXw0fhqYmxicWw4thybgG3Ap2NbsDHkVtgMbMcg/T6uGN8o32oD+2Ns
MraZHI1cDRuGLXuX77oYNoBvHxuAbeC75tvkG6XWBh+Dr4HDhuuGw4XL5f2l
dhMbha2iJotaK2withEfSGyIDcWWwnHCdWIDsAXEpMS22BO4cnwIvgR/QW6M
DcYW897y/rbxfGLTsG3EZMRmcMxwzXDMcM1wGOTu+Gx8Nz4X3/saPqE8fDq+
HR+LryWmIrYihiaW5hvjWyNmIxbC5+Pr8fnEGnD8cPpw/HD91Ij9x/tTO0bN
KrE4x4MbhrPYxTukg8ughvLnihFDEktS0/ljxdAU0BbgIOAu4TDhJuDsic0W
G8NBwG0Q0xLbwhHC7eFD8aVwXtRGojHBhRHDEstS40atJzEwsS4xAbEBdYHU
ApFDk0ujKS3294zWhCaE1oTmhFaEhkcuSk6K9obmRq5Kzoo2hp6GVgYHCheK
xgZ3DIeM1okmhjaGZoZ2hkaIFogmiDZKTTBaPZo9ta7UMKDdDXU/nDzcPBoA
2j6azib3o/WhEaIVosGhxZHjoR1To0TuR00QtRzUdFBrSQ0mXA2cDVoznD7c
/mcae3kxciJyIXIicq+evh40RLREYiRyI2Ke9X7/29qHEiuQU1JLQM0QuSaa
A9w+HCZcJpoG2gaaA9oDOTlcMJwwuXrF8qj3oO5jZTFydLRH5pvcHR+Z83i4
5PNzwa3DsVMbg4a90/PN/MMhw0WjCcAtEzPB1cKpEUt19PxyPWgxaJDoGHC+
cL9oFGgV1A5T73yYrx+NhtpoNDS0HTQetH80UbTVRn7end2P5kZtNJoG2sZe
3p8a7R98PLQfNJJ1ni+0ke6eP2JcYl006dMzUYOBVk3OB9dFPEAuSM5IrQQ1
E+SS5OTk4uTk5Ork5MQf1NiRq8M5wTXBOcFFwYHBtcG5wY3BmcFNw1HDpcFJ
UPtDDRBcBRwV8Qo1G3BX1GVQnzHPeLv5LWpmqH2hRg4NixoTauqoqaC2gpp5
apCowcAn44upzajt+USzppaG+hTmjjpG6vGosaDWghoKaimov6d+jjo66pmo
waMWj5oIaiOo2aBOg3oNavuoF6Z2GA2YWlFqgqgN+lfXelUxOEa4QzhEuEc4
PLhJOEq4PWoMqTWkppHaRjgSuBk4GriTyto+SmL+me+q2j5OokaAWgFq6uBm
4GioVYYzYDz7wSUU9ffdJGqk+X6puaP2DkztNTWU1FLiL6i9RldFX+3k+AsO
s4/jSbhNOFG44DsdP3IP3AucNFw2/Cv8NhoeXDU1yfhEfCG1ynCwXTOhkcDN
/qrt/iSuH3sDhwuXjsYItwvHCZcKpwr3mdI1rkwinuD9ucD6DjkNuQwxHLHc
8tLQgmkT65GT8xs1Seie6J+sJfivBqqPvx/WFKB5U/NE7VMP29dTbW+wt2im
rDk4S7hZLjR0tHP095HYlHTUYFCLsSUftTPnafsnHxhbjC5LPRV1yNQjo3Gi
dXIMtHzqBTg2NVDovGiy1N4PKESdDvU61HahcaCFoImgfbAmgDoE6hGobaeG
gN9oU1tA/TO1c9SAUmtOjQB1pdSXUjtAjTM1DdQkUJuAJoo2g16CfoX/oPaC
/KOG7TNaEJoQWjEaALk3OTjaADUg1IaQg5KLPuHn28Xx0GLnHx3tzx/3+8j3
QG0B60SoPYZD+9jxC9wiHCPaOTUG1J63Nl6u9/8CnWuUzn1HMdZ8sFalv/1j
V9tLap7QilmPwtoOakBYG8KaEGpC0JTQlrC/1D2gmaPFsyaHOmbqwFi7Migb
a2Owz9RGsEbmrHSsYRls+4xmT01bf/tbaokG+/14yvEY1088RP0b+hQ61a56
vUKsvThd+JZicNrEE3z/9R1PUPszwvEF8QJa3kX2573tz4gxiDXQ/NCWK7pe
iXlivtCg0aKp4aFWCo0SrZKaHbTpkY5Xcprf+9S+Te2Jup5t+Xjfee/vLIYG
hRaFxkj9FRpp0ZoiWiIcO1w7GjJa9k08p3RgtGU0Zbj6icZo5tVLogZ2H8dH
/zheIZ4Y4HiK+AruHw2d2qxhvh80P9ZWsMYFLRDOFG0CjgOuAw0CrgOMdgHH
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
4QPh5+HE4YtY81Zm/pD6g/8DgM3ZJQ==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt13/Uz+Udx/HP9z73x33fdN8qqcyvVKttzliRo6Ik6VRbYWdmYanN70bJ
hvwqW0uFhIZKzY+4l5HDJHGjhDZLMT9KUrN2QnJyLEWlPd7n+v7xOt/r/fy8
rvf7+nw+13V9rm+zu4Z2G1KSZdkcymloeZb1AnpTH7pX3K3Sr4vvFbKsnvih
qiz7R50se13cG+9BfxfvogPYKPEj9K54O+3D7hGfrEh9l2D3YT/AtmCjse/K
+0Eh1ZiI16qdZXWwNuIrqC92jLcutl28kwZhOV8f7BZjvZ0+wW7Cuhjz5/zH
y7KsmvdvZ6il7nLt7jy30DrxTvovNk78GL3EV4uelKthrSwbINd042sp3wL5
pslXh38pz3p9FxXHMThPNW7nq9CnoTH9p5DyjcMukKsZ9XOtRr6efgviEep8
pW8vcXl4xSV4X/E0vpsr0/OtkSuTc0JVeh/xLGuL38J3GEd37AG+ueL59C+s
B1YmT2O+Q4X0Pi7DqvWd4j6qsBfVvJfnh2ouUPvPNJN/G+8e14fIeYL/D+ru
wd7GBuQp7x+xNdgc7HqsE62Qb3xlem4XyvM/19ZgnbB35flQ3UnYy/qN5Gmj
7ko159Of+AfxtcPv1L4OO87XO+5T7k3UHuspnkf1tc+hpTFu8RB9O+h7jXaO
HdD3G2yPmrvVbqf/8uL4LlR3Ks+j5en9ruTdy7eD74p4l+K7+drL92ueJrwf
Yf2wtlh37MqYb9iZctWlKnoEO8tvf75deZqXd/BOVuNabJv8O9QZ6Rks07ct
th7biP0MW4BdHfNF37vFQ+mvWCM5Dmp/XFxf38ZcxM8QHyrNssOlaU7+E9uK
DczT/P+9utOxutgnPEdK0zuPeXXY9YK8rxbS+u2AtdbvQfFYWo7dhH3M97Xx
rcA2Y52xA9hh7KlCWkdXYRuwzdidWDXWvjKt77ewQdhirDW2BFuI/Qibg41V
82iMjw4X1+INfB/wHeF7ppDm1VHtZ7WfLs63/RVpzJdrj8EmhE++h7BJ2Gnx
k+5vg2cwH/+FuH6envcobDZ2EdYqT+9lDNZAnde8s+u8w460VrzRtSY8fWLu
01bj6CxvNbaILuK/QTyAr2GevH353uDbhF0sHigeTG9iZ5s/s7EvxadifytP
+0bsP3H/TcUPG8tzxtdY/JNYL/qNwPrLdy7f+fRLfBM+hn+4MQymL/Eusf9h
q7VfplV0MbaWt4s+t1EVtlqu5dg14trFebQCK6lKczb21a5yHjOOebSed63r
NTQy9jBjrpS3BV9LWoWN9ft9fZrTKTW6ul6KD8E7ax/CvpDrJA3D7qGeMe7i
fhXfjZjjl5Sn/eWAmh3EP6Yp9G/xQPWb5+m5/gZ7G9uFXSYeLb6f9mElckzV
fry45x+KfUyNVt7rM2rOcH29GpPjnfBUFtfIXL5+dEr7K2qBP8+T868rpL04
vnuf8kyQ71L5xss3Ia4XvxWxHuOZTtdvGNbYPKrheZO2URPxDPc81fX5Fenb
Er7WcsySeyZV8F0ezyH2ITVWixfEeuXbWpHG1lKN/rRFnomuPVGS9rX6/H1q
p/0+1nzc22ye+/Sd57eZ+IJ4zjRXvDPWY56eYfP4hoj3x9wQX0sTsffL0vrY
KP8aujr2O/lH0fnaU7DHKed52r011eesWOP6DVd3hPENdH0AfRZ7o/E9y9eK
52tjXOaefsc3OL4Vrr9D78c8lW8v3+d8j+bp+xrrYy3WCSvP014xDpsZeyV2
vDR95+J+O6rbSM0CPRdrR/99Fem+Ho53FHO/LO1rcS6I+fKReLy+NfI9L74x
T3tesINYG7nWYd+T67GqtB578PWkXnRe7A18v9L+Tp72xvv5TsvbVdyNXnHt
m7K018W3M/a1z8rSfcT11eJVtJJ+Kj7HfezX3kvDxKcq0jknzh5xHqoqT/v9
UXWvj7mWp2/VJOwN7DWen+dp349zRLVai2glleEr8U18i/luzdO+/yDfKmwa
1iFP3/CxVelb3FaNq2Ie0Ot52jdu1N6ufWXt9M0b7beluVEd33eaFvuxfDPl
m0Un1X6A79VYg/qdGfMizk3iu3ir9KlFB/GOck3FZotnxRqK7yw2jtpqv4Rt
oEU8R2I/8dvKtY2x9otnpPHam2O90O44+8Wz4mvAtzD2SnPtKaye61+Upm/V
b42vEb5E7oX0F/4Z2GK/W+LeaTO9IG7K96LfpbS1uM5v0741zjax38b3Qq0B
xrI7vnMl6ZnFHpvxttBeFnOJ5wk1zvN7LrXX/9s4M8eZyrN5QXtJnN/oRFla
gw08g8n6T4wzpFzDsdNxVqDusf/L9546xwppf4gzUJzN7uC7xPVL6ZV47zyn
4vwjz6fim+O56/shdjZWj9oZx0TsHexE8cwe/xHiLPp/BUCp4w==
            "]]}, Annotation[#, "Charting`Private`Tag$6393#2"]& ]]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJwt1GtM1mUYBvCntJQ3JWcnSATNUzTBWcxm6+SHWjlNUZu1PlTO1ViZrq2S
1LJibrUyWqiJTskTRuZpZNOyFAWERJTwRLpJuEoRpXIu7GC/Z28frl3XfT3X
c9/P//n/33fgtJmTXro6hFAE3WBiagg5PULY3yuE2SkhtFwbQlsihLt4Q7qH
kIe/ENwGX0Ia3AIjYE3vEFbKfq9HO91BH6VX0yvoevpIzxCyZY/iHXiQnrfB
AGv3m7cBv2Z2Ll1OD5OZC5kwWK4/9IOLDn0F/oI5skOd67QZe8yqxk32dtCd
9DG6kt5CN9KF8n3k29Vn+GfxEf5iupiupt+nx3r2nc4y3OwbIQ+eUF9l/wqZ
0XST5/iELpH/wN699O/O1AmXYS2/jL+fv5IupffRD+vxr34P4WGeJ8AV9aPq
HvQj+Dv1TvgadtlbZe8he/eoN8FWKOMv49fxa+ha+gc6A+7WowIXOec99Of0
CL1vhzvgdV6WezhpT6Y6CzKgTZ8TvMPyE2WyZU6pF+tzg/WleLrZz8IzsAVu
5Zfj63EfSIUSuaG8+/7/lnLoFve13r0+T1fgx61NpsfjhZBi38c4w8yb4/vG
HfaMkzmLZ+AX4YU41zk3OtcB50yR6+Il8DF+M7+ZP8bc3rzD6nw6l26lC80Y
qf5MJt2ctPgNQnq8I/56nKvOgeHwlZ6V9h3kzzHnVXgZzjvTY7gd99X7At0d
z8LzoBDyzXoST8DdrHXS1+DB6tO+kUF4kr738hrj92Xe3zKXoV+8W0iHbGvf
mLNI9ml6frx/vI/XpM9mPEVdwJ+M69TN/Eo8TX2d5/o0/qbo7bwqejqdyl9F
d3kfNfGe8V7PexzXWm/jLYdS+Id3Mp4NJ+x7g07Bz8n1xWv0KaCz6LX0Qn0W
JJKzMnll8v3xbFwEr8R3KT+At05mPt3Cewt/ZO978TfNP8c7Az9DldnFuB7n
Wxvp3hrkJ9BD6GX0KGj0jLW8PLqBrqHr9PzFvjpeBT2DvpNu168VTsEG/hL+
7ujj6vie8Vx1M/0mXiJTwPuWPsQ7CI0wRn2iZ/L3+ECv5Pcef+8H5C/K1/M2
0evoKnoXfte+3fimeDeQC0tlShLJM7d5hz9BK/yh31PWL+FymVUyDfE/Rz2V
/xv+Ua4Fjsf/R/WD8d7wO/htWAAfmjcaF+NSfRYlknf1pz2XoAsu2DNW5le8
XWZH/C6cOc27Kon/+/g/WcLmFA==
            "]], 
           Polygon3DBox[CompressedData["
1:eJw123W8tFX1BfDrnZe5M8Mzg5R0l5SgqIiipCJIo6jYhfozCDGwFQWku0Ek
RUQRxKBEQEC6QZDuFlBUFP2t77uPf5zPPXvOk+c5Z++11t53qY/usPXnp6em
pi7tTU3Nyt9Zw6mpf+eHj/Snpn45mpqaif31jJ0T+6zYT+bv+bEvTHsq/bvT
fp3+T9MeTv8Pg6mpOdL/bfq/yvFTOf+/ud7HYp8dexD7Gxn/dexzYl+Sv4fG
PjLt8vRXzfgf0n8i/Ssz/mi/nu1naTelf7vncv20e9wjbQ3H5x5npH+n32Kf
kXZj+r9POzj9fdMu8nxph6d/RNpl6T+We6wxMzXVy8tvlHs/GfvNsVeO/e7Y
X+zqXe/PsZePp6aWH9b9PccfcuwOXd3rHM+f/rVpK+Xcr+e4WydTUysM63k8
12U5/tMZPy721bF/l+s9mt/Wyv1WzDnvGtYzm8tft3PuS7sg/d+lPZD++3P+
Zukf5zvk/F26Gjsv7Yqu3umg9Pfq1bs+kuu/fqbmeKFc/+HYK8deKvd7Z+w/
5pyL27f747i+wd6x9+vVt/lsxg9I/xU59pS8z0M5/zU5/8f5ben89rUc87L0
p9oaWSy/HZv+0WmLp79A2iHpX+o9cu59aa/K+ZP8dt2gruv6F3ufjF3Tr291
cJsjz3xoexbnfyTP8622vs7N8/4+9uHWYMZ+mOfr5/hde7XGrLWHc8zqud+y
ed/jfMsc+72MfSXtrPTnyzlnpn9L+hfn2E/kmN1jz5VzT8jYh2N/O/bcsU+M
/bHYu/XqGMfOm99/0NbWeaNaA9bCHdZtrndB/u4Q+6tp56e/bVe238/L+I5d
fe/ZazX2HMM69szYv8j1PtnV9d3npEnN7/Gxr3V8xuef1F64y3rM+T/L33uy
F+6arj22ac7fKOPnpv/bjN+e47+Ra2yYOXkq9i/z+0vTted/kf72XX1/6+CC
jF/Xr299dtpt6f9fxo9Kf9Fc4+Rc6+X5+932bufmeeaLvb/12ubjlcNay/zE
5aOa851if75X3+IzXa1X6/bC3G/eSX17+/bt6S8wqf3PD1yZ8fGwvp9zf5vr
XZG/J8Q+Ke2P/Vpv1u4+aQum/6f8tlT6y6T9Of0v5reF0l/YHh7UnrK37217
bcVh7SV7bqVhzav5tedXy5y9Ns/bpf/q9LfKsz2ZZ1o//Q3Stom9Vc5ZOmtt
mbSt039v2oLpL53xZ/K874g9iL1k7Lti35JnWM5eif3n2Jtl/B/Wbuw7Yy8z
U+/mHZdKf9OMz5vzF0r/jowf2ZXt959ZH/l9FLtLW7Q9l+dbN2291uf7+EC/
WQtLzqpn9Kybpy02q/a4vf7a/J01q/wjP8lHvTL9NWfKd/Fz/N0rm//ib94w
Uz7N+Db5bYlZ5XP4ni1jLzqrfjO24XBqduDhc/ne98ReJfaqadsNy0fxVStl
/C8Zfzrz/db035b2zkkd41jv9tyofDbf/RbrO/bC+Ttf7PnTFuEHZmpOzaVv
8rUcv8isemfvvkXawt4nY/fk/L/k+19r/ab9O/1/WS/pn5x2Vfqvz/EPtrHr
cvzj1qm1lvbP9BfOM96T/ov2or2X73Vb7L+6bt7la7Fvif1c7GtiP8sP8+Vp
z6S/4KSu57rvSP/m/P05f5j2WL+avSE2GrNmrV1r+Y+j2jOPtuM2yfmrZPzy
jP/d/TL+urzn8rNqznwD8e6ijP/N++Tc5/P3Vv6pnfP6jM+T/qo5dstcb5lc
79RezZm5WyW/n9arb+ab2wP2gr1zf+73hZx/bq/2yNXpPzSu7+G7bD6peXet
X+SYW/vV+OYVZmrsFWlzZnyctkD6m+T6Q983/T+Nal1YH2Lemq1Zm6vNqrH1
cs9Fc+3l0t9iUvN/Teync4/r8ywrxH4yvnBtz57xDXL9f2X8TbEfH1Us4Qv5
RHvkgezfNdP/AT+U8f3MUa9+21eMz/gz09X/Ucb3yd83ZOx1aXtbSxl/bfrz
pV2f/ka5/yj9z2TstDzPAfn7pthvTNufz88xf5uuc0/M9b6Vv8uaz7Svp/9N
GKpX32gncTHHP57jd0//hzn+3tirZWwBMSP9+wb1LHtk/PiM/zf2Z3uFpX4+
qmMcu0vsY2J/yXxMF6aD7XppX+pV7Dgz48sOa31ai5eOyiefGPtHvfLVYuwt
7btuPCnfC1/BlHzwl3P+Wb26hmstPCxfBctcmOstNSxf6Fq/s77z95TYBzYM
If7AD9e0+AhDwFvHtt9gFt9OXLu44bfTY9/Q4u/8w7qWvX1Rxv+T9/9Mr+bE
3MBbv0//oYxfkePvhGFifyn20Tn+ntirx/62+/L3Of7tsY+KfUaOPzJ/3xZ7
vbTD0n9oUN9W/5Qc/8igxg6NfXLsTXL+hr3COD/N+Y8Nyj4m9qkZPz5/32Lu
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
0Cu+gB/RTGAe+qPcw3hSawMvOqHtF1h167RnBvX+89DX6C3j0rz+mrEXeqWF
LTOptfthPjLjh3Wljxm7J/YhseemB87U/Pmm8zTbt967q71k7d+Hy+e3LmMv
5rf1hoXJ39r8D6x+VVd6K9315tx7m9ifjv1vWIAvHRUGhdFoLe/N+M7pT6d/
3KS0ArHT+rMO9+/KF9I5H8z9d+tKH6Uh0ZJgupdafL1jXDHyVth8pmLnsl1h
NZjtzozv15WexLfehZ/mvv3Yc6RtnP4eXekr9vatGe/nuOdj/y1tJv0fdDW3
+reNS1eiL8GTyzeNkbZqP9gXB+X4mXbtM/KsB8SeK/Yk7cD09+rq2iPzPS7+
bz5P6Bd/3rZxjzXaGliuK72f7n/WuLAmrkNjwFXnnpTeTnc/e1xchV7ztV5p
/x/oqm/Ozf2rzUeLF+c2vYF/Pq9f3AqnxC2/4xmHxYVoI5/rVS4ON5UvXKH5
0M1yvW2s/1znqDzLhl09u2N/NS7Oh/u9K+259F/VVT7Cs52T8S1ivzdjf83Y
0XIBXd3b88hn4M5yPTv2ag5Wy3gv/d/wjxn/R877cOyPpP1zUPrAh9I/qV/6
hPu/u83vT5oeYPzUfmF5nPN97fj/6QPbt3H6Am4K69MAaA2Ox1Xfw98Mar6+
2Z4HN5fXwX3lgH7aLy4sfyKnJCf08knlpvh0vp1OgZv6hj/vV/zFJTzDvwaF
Sfhzfh32sl6fiv2ymeI//Ar/clWLIfRgGFFckVuxJ+1NsfH2ce0Ze9JetJfk
lGAaWEauCYaBZeSCLhmXngcjeQ65NBgIFpKbvWxcHAFmhBVxBxhHTDi/YR8+
U1yDDflSPtJ7wI58Jw0CBoZ9aRP4rTwBnR//FePEunUaN8YZn246IS4pxog1
n8jzPDAuHyGmiWV8hxwsTAqLys3KeeFkuJhcmJwUjAqbylXhRDAybIwr8YFi
mNjFN/KpNB7aDl8rByxH8sbGPW9omjmuTB/CN+VF5Dnw7Yebz+frd278WR6G
poTrinEwN6wt9uFIuNKncr3DxsWRcKWPxj5kXHtOXBAf7EU+1z6z3/jiN3W1
V2HgNzZ9QE6FLiH2wcQ35vgl2jif/LKMf6H5CxqZdWg92hv4hryDNWatia80
Dd/Et7GH7Qv7w96msePQuDPtHZ+R95enkPsQQ60N61dshfFwWlwW9jt0UmsJ
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

            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkD8vQ2EUxh8utyX3No2RLi1JY7CJVSpiMWhrIEYfoCUSqUiMYkAi0UE7
1JcgMXRB/Ek0nYhUB0Is/nwAA35vTocn957fec77PudNLhfzhW5Jg6gXncek
7X5pwZc+aaQDqY7u+X9As/DdUKrCEj1Stk96xj/H3CvfsYg04PFFJXp7+H75
n+H/kX6b2ScUx7cBm0YpZq/QIf0C5wf4xwPLchaV3rl3Hr7P3CVq+XZ2i94k
vgYaIssm7I0zcszdwVKwHOwFlu0wl8/lTMPXqK/hZepV33JPwMqwHdgS7Ju7
R2EXsHrUascPyHETswxu1y1YLbQ9GrA4bAV2FNp+XWT5gQUR29/d28QXgxXx
VTrnVbi3RJ30bDeX1e17Qn3qWe5bfG1mv8iySO84tHcNOTtDf6rz7s5XZX4d
T4LZDKyJ/jx7+w96eTzDsLxvb+zeeoT6H0A7SmI=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwV01lsjlkAxvETS9VSO3NBqF1riREyaFWCiJ3WMnRCotY0QuxiGUtSaokY
Ei1VS8zEhTURIcjYgrHVZwltxpZGMC7MEBFEjN+5+Oc953+e85z3fEurvLk5
c6qEEHoiCRfqhLDeYCMW1QyhPDmELG4Z7lUN4SHKUYFfud9rhbBNNtn8uaIs
zxf2dLE2jZ+OBXoucJ24zpjC5WE+/yefzu2oG8Jvumbx17gz6MgX8dv5fD5J
d8IZqfw+/jR/Ino9yZjML8ZfctfRhbshM0y2D9+Sy/Tcaf5Af4bxNVToeIzT
1g9hbuzAU+4lLnEXsZC7gjvcIyzR3xbzuKW4KXMLf+Oj9URKCLP5/eYH0Fs2
4X1GxLvyKdVCqI3qSMJWbhA22FuISu+YwE/cVZRzz5CmJx1N9fyjr0+NEFaY
j0OanvGeA+RXy67BQvO7enpxa+O9vEsZuvFl9g/Xk8sviXdEFb4q6vMlfDv9
7bGcGxnvzO/GEXuL9Q+wpx+GyN7nqsn+a/4O7+OaPXesZfJpGG0+Bnu5s/Ln
dWyW24JNaGRtl/7/vPNY82wMxjD5dXhj/BoZcploIdss9nElKMUeNI898k18
Jo3xA1Kd/8L3Usy3MK40Pmr/cNki7jZ+5Lsim8vBHu6IzFDjBjo66k7HNv6z
d8wznoDJmIpP3GH3OuheM8z7Yxa+8KX2pOtOWGujbxR2c+fj3bgCPJd7gv5c
qXO/GufbnxM/g/iMvzXU1lPh/Tcbv+ULPS/jkI5jWKw7oJ6O1vxoLhvzuJM6
q/PT4//d3gLU4VMwlfsFx2UP45vs//iZSyDLuQOxUnYi9nF7dZ1y57PxN6dr
FabwJfwHe3PNx2E8RvIFeGV8H9119EVL2QNoYFzI14u/QTTkyuQznNkPE7hc
dOBn8hvjd4Gm3DnvMJifyC/gUuMZzq9hbRKXjz+4SvTkeqCZ/HdH06Oe
            "]]}, 
          Annotation[#, 
           "Charting`Private`Tag$6393#3"]& ]]}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0s9Lk3EcwPGvtRw0UfoTPDnsGNbJROik4CEhFOyyUWLW/AF2CUY4GkPy
4l9QhOjcWhM81JpiWSSINyW0BEGioFNFQVHW66HDh9fn/XzHw5eHtabGLmca
Qghz5rRpNu9jIfzmHst8xGw8hJJ9yTzUD0zR/pzPeNf5Chf1Uz7hOjfMS/PC
DCRCWGPFWY39epkLuso+XeG8fswrepU1vc1Sk3fbN+1vTFnX9Zb9VXQ3XdWv
o3uZoi7puj3nXV/4Tn/jPf2V+/oXC/ond/QP5vV3Hug/vK8bfKhD/VfP6GN+
0ic9n9UneKRPMWYao/abG84+MMOP0bt9q12m9FtO8TNvs5ODzi/yjO5igk2m
2z5tJpyf0zl7B/M8zwKHTNp5q75qb+ckzzLDUTPsPKlv2m+Za9Fz977uedo+
Et1Vj3Gc47wT6TxrT5pLuo09bOEF9sb//4f+ATRMU38=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0ktIlFEYBuDPwBQUHBJNURoUAmndoryABAUuNGhoVUklGCFlutbKIDdl
bVIihXDATU6JeCHTTV5QxCQi3ERYm2hTuBKkjc9Pi5fn/c45/P/MnKm52X3p
bl5ETMhwQUSl4RXTHC2KqE001zDLU3zNOk7bv8+H8kAG5HR+xIz1R3q9Psgm
XuNxXmUd77GWyctzznfzpLmXn9l4JGKVDfzGDHd5mQvFEd/1Fv0rL/ALz3OH
bWyVPc+9yBtypzCig708sH5L75Qe83V2sZ23uW+/Qk/JGfNZOab/sF7OenMZ
s5zhOGdZ5nNNctT8hmN8y2rrm8yZ1znJDU4xbW9b/yRbsiSNRyMWuZLM9s+Z
P+rNfMoSpuSxXsRBDkmlnu/8c71U30vuxO/xl/38wz5mOZ7cm77jO63r7foa
r3CJGc5xXt7LinOz/Ofu33GfU1y2Ps0D80v+4gh/8wUX7A9x1/yEP/ksuWPr
bcmzza1c5Ac5oY/Yq8r7/388BEExWpw=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0r1L1HEcB/CvD92dZJdCVlB4NThcs0OHT5u4mWmRLtl1ojXoYOBWOkQO
QqeIYAa5OGT/gFspLTWERnJZU1RE9ICcV3jS0OuHw5vX5/39/u73eOezY5dH
K0IIi5KpDeFcVQjjUlETwjX9jnlCjupZ/b75gST1nD5trjdP8rrex91ECL28
ot/mP/0W+/QBlvR+9uhZlvUbzMmg7Os3uRILYYirHOaB9RE+1Tu5yBbmmeEX
++1c1i/xCbt5JO6e2OE+izyhV1eH0MwmXrWeZka/KAuOeem38zxtb4bP9Yd8
w2U2Wl+KriFnzI/5OZqTzqt/Mv+IjtNb9e/mn5LS2/RN85bc9Q52+F7umd+x
6Brb/MuPnLL+gX/0F9Fz8qusmzfklf1v+mp0Tj7jmry2XtIL0ff0XL9Yyd+c
sVdmjb7HGEvR/bPBu3hk/yTP6rU8xWOctZ5knRyXvB5jl2eKc06/4DwF3yLN
Vj3Ft4nD/9d/srdQKQ==
         "]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
        GrayLevel[0.2], 
        Line3DBox[{1092, 1090, 3287, 1091, 2436, 3629, 1096, 1097, 3289, 1085,
          3285, 1084, 2433, 3626, 1083, 1112, 3294, 1113, 3633, 2440, 1117, 
         3370, 1252, 3373, 1254, 3372, 1238, 3364, 1237, 1236}], 
        Line3DBox[{1098, 1095, 2435, 3628, 1094, 1080, 3283, 1072, 3281, 1073,
          2441, 3634, 1118, 1115, 3297, 1104, 3630, 2437, 1105, 3291, 1099, 
         1100, 3358, 3357, 1230, 3361, 1232, 1242}], 
        Line3DBox[{1134, 1135, 3303, 1122, 2442, 3635, 1121, 1128, 3301, 1129,
          3311, 1153, 2450, 3641, 1144, 1138, 3305, 1139, 3639, 2447, 1142, 
         3353, 1228, 3352, 1229, 3356, 1227, 2462, 3351, 1217, 1216, 3344, 
         1219, 3369, 1246, 3366, 1247, 1256}], 
        Line3DBox[{1136, 1124, 2443, 3636, 1123, 1125, 3299, 1126, 3300, 1127,
          2448, 3640, 1143, 1145, 3306, 1140, 3638, 2446, 1141, 3308, 1149, 
         1150, 3355, 3354, 1226, 2461, 3350, 1218, 1213, 3342, 1214, 3343, 
         1215, 3367, 1249, 1248}], 
        Line3DBox[{1184, 1182, 2456, 3322, 1165, 1158, 3313, 1160, 3316, 1173,
          3339, 1210}], 
        Line3DBox[{1189, 3324, 1188, 3326, 1194, 3337, 1206, 1207, 2459, 
         1211}], 
        Line3DBox[{1191, 3325, 1190, 3327, 1193, 1192}], 
        Line3DBox[{1195, 3328, 1196, 3336, 1204, 3333, 1167, 1166, 3318, 1172,
          2454, 3645, 1171, 3320, 1176, 1175, 3646, 2455, 1179, 3365, 1239, 
         1244}], 
        Line3DBox[{1198, 3329, 1197, 1199}], 
        Line3DBox[{1200, 3330, 1201, 3335, 1205, 3334, 1169, 1168, 3315, 1170,
          2457, 3647, 1178, 3319, 1177, 1180, 3648, 2463, 1240, 1241}], 
        Line3DBox[{1208, 3338, 1209, 3340, 1174, 3317, 1161, 1159, 3643, 2452,
          1162, 3323, 1183, 1185}], 
        Line3DBox[{1212, 3341, 1203, 3331, 1202, 3332, 1157, 1156, 3314, 1164,
          2453, 3644, 1163, 3321, 1181, 1186, 2458, 1187}], 
        Line3DBox[{1243, 1231, 3359, 3360, 1108, 3292, 1102, 1101, 3290, 1103,
          2439, 3632, 1116, 3298, 1087, 1074, 3624, 2430, 1075, 3282, 1076, 
         3284, 1078, 1077, 2431, 1079}], 
        Line3DBox[{1245, 1234, 3362, 1233, 3363, 1235, 3371, 1253, 1255, 3374,
          2464, 3649, 1114, 3295, 1111, 1110, 3296, 1082, 2432, 3625, 1081, 
         3286, 1086, 1088, 3627, 2434, 1089, 3288, 1093, 3307, 1148, 1146, 
         2449, 1147}], 
        Line3DBox[{1251, 1250, 3368, 1222, 3346, 1221, 3345, 1220, 1223, 3348,
          2460, 1225, 3347, 1224, 3349, 1106, 1107, 3293, 2438, 3631, 1109, 
         3312, 1154, 1155, 3642, 2451, 1152, 3309, 1151, 3310, 1120, 1119, 
         3637, 2445, 1137, 3304, 1133, 3302, 1132, 1130, 2444, 1131}], 
        Line3DBox[{1303, 1304, 1302, 3384, 2495, 1301, 2498, 1308, 2497, 1309,
          3394, 1335, 2519, 1339, 2518, 1340, 2520, 3651, 1287, 2485, 1286, 
         2484, 1285, 3405, 1378, 2543, 1377, 2548, 1385, 2549, 3408, 1387, 
         1386, 2565, 1403, 2560, 1402, 3413, 1397, 2557, 1396, 2561, 1407, 
         3414, 1408}], 
        Line3DBox[{1314, 1313, 3387, 1312, 2500, 1311, 2504, 1319, 3388, 1318,
          2502, 1321, 2514, 1333, 2511, 3650, 1298, 1296, 2490, 2491, 1295, 
         3382, 1280, 2481, 1279, 2551, 1390, 2550, 1391, 3411, 1394, 2554, 
         1380, 2544, 1379, 3415, 1415, 2564, 1414, 2568, 1418, 2569, 3418, 
         1419, 1406, 1405}], 
        Line3DBox[{1317, 1315, 2501, 1316, 1323, 3389, 2503, 1322, 2505, 1324,
          2515, 3395, 1291, 1290, 2488, 1292, 2492, 2493, 1297, 3383, 1294, 
         2489, 1293, 2552, 1388, 3409, 1389, 2555, 1395, 2556, 1392, 2553, 
         3410, 1393, 1416, 2566, 1413, 2563, 1412, 3417, 1411, 2562, 1410, 
         1409}], 
        Line3DBox[{1320, 1305, 3385, 1300, 2494, 1299, 2499, 1310, 1307, 3386,
          2496, 1306, 2513, 1334, 2512, 3393, 1281, 1277, 2478, 2479, 1276, 
         2480, 1278, 3406, 1381, 2545, 1376, 2542, 1375, 3407, 1383, 2546, 
         1382, 2547, 1384, 2567, 3416, 1417, 1401, 2559, 1400, 2558, 1398, 
         3412, 1399, 1404}], 
        Line3DBox[{1338, 1337, 2517, 1329, 1328, 3391, 2510, 1331, 2509, 1273,
          2476, 1272, 3379, 1263, 2466, 1262, 2467, 2468, 3375, 1258, 1257, 
         2483, 1284, 2525, 1349, 3399, 1356, 2531, 1352, 2528, 1351, 2530, 
         3398, 1355, 1366, 2537, 1365, 2536, 1364, 3404, 1370, 2540, 1369, 
         1371}], 
        Line3DBox[{1341, 1336, 2516, 1327, 3390, 1326, 2506, 1325, 2507, 1275,
          1274, 3380, 2477, 1271, 2475, 1264, 2469, 3376, 1265, 2487, 1289, 
         2486, 1288, 2527, 3397, 1348, 1347, 2526, 1350, 2532, 1357, 3400, 
         1354, 2529, 1353, 2539, 1367, 2538, 3402, 1368, 1373, 2541, 1372, 
         1374}], 
        Line3DBox[{1363, 1362, 1361, 3401, 2535, 1358, 2533, 1359, 2534, 1360,
          3403, 1345, 2523, 1346, 2524, 1343, 1342, 3396, 2521, 1344, 2522, 
         1282, 2482, 1283, 3381, 1266, 2471, 2470, 1267, 2472, 3377, 1260, 
         1259, 2465, 1261, 2473, 1268, 3378, 1269, 2474, 1270, 2508, 1330, 
         3392, 1332}], 
        Line3DBox[{1476, 1477, 1487, 3430, 2616, 1485, 2615, 1484, 2629, 3439,
          1467, 1453, 2588, 1445, 2585, 1446, 2592, 3652, 1458, 2595, 1460, 
         2594, 1459, 3445, 1523, 2637, 1522, 2636, 1517, 2634, 1518, 3442, 
         1528, 2640, 1527, 2659, 1562, 3450, 1559, 2657, 1558, 2658, 1560, 
         3449, 1561}], 
        Line3DBox[{1488, 1482, 2614, 1483, 3429, 1486, 2631, 1514, 2630, 1513,
          2628, 3655, 1448, 1447, 2593, 1454, 2589, 3422, 1455, 2591, 1457, 
         2590, 1456, 2648, 1521, 3440, 1520, 2635, 1519, 2638, 1524, 3441, 
         1526, 2639, 1525, 2660, 1563, 2664, 3455, 1570, 1557, 2656, 1556, 
         1555}], 
        Line3DBox[{1490, 1489, 2617, 3431, 1493, 1507, 2622, 1505, 2621, 3436,
          1506, 1444, 2584, 1439, 2579, 1426, 2574, 3420, 1422, 2571, 1421, 
         2570, 1420, 3461, 1589, 2679, 1590, 2680, 1574, 2669, 1573, 3456, 
         1577, 2675, 1584, 2684, 1597, 3462, 1591, 2681, 1592, 2686, 1601, 
         1602}], 
        Line3DBox[{1492, 1491, 2620, 3434, 1500, 1504, 2626, 1512, 2627, 1441,
          2580, 3421, 1440, 1424, 2572, 1423, 2573, 3419, 1425, 2577, 1433, 
         2578, 1436, 2671, 1578, 3457, 1579, 2672, 1576, 2670, 1575, 3458, 
         1582, 2674, 1583, 2683, 1594, 2682, 1593, 3464, 1599, 2685, 1598, 
         1600}], 
        Line3DBox[{1494, 3432, 1495, 1516, 2633, 1515, 2632, 1508, 2623, 3437,
          1509, 1510, 2625, 1511, 2624, 3438, 1437, 1438, 2582, 2583, 1443, 
         2581, 1442, 3459, 1586, 2678, 1588, 2677, 1587, 3460, 1585, 2676, 
         1581, 2673, 1580, 2687, 1603, 3466, 1606, 2689, 1605, 2688, 1604, 
         3465, 1595, 1596}], 
        Line3DBox[{1499, 1498, 3433, 1479, 2610, 1478, 2611, 1475, 2609, 3654,
          1432, 1431, 2604, 1473, 2603, 3426, 1474, 1472, 2601, 2602, 1470, 
         2600, 1471, 3463, 1530, 2641, 1529, 2642, 1533, 3446, 1544, 2653, 
         1539, 2647, 1538, 2661, 1567, 3453, 1566, 2663, 1546, 2654, 1545, 
         3447, 1548, 1547}], 
        Line3DBox[{1501, 1496, 2618, 1480, 2612, 3427, 1434, 1429, 2575, 1427,
          2598, 3423, 1461, 1462, 2596, 1463, 2605, 2606, 1468, 3424, 1451, 
         2586, 1449, 2643, 1534, 3444, 1536, 2645, 1537, 2651, 1542, 2649, 
         1540, 3451, 1564, 2667, 1571, 2665, 1568, 3454, 1549, 2655, 1550, 
         1551}], 
        Line3DBox[{1503, 1502, 3435, 1497, 2619, 1481, 2613, 3428, 1435, 1430,
          2576, 1428, 2599, 1466, 2597, 3653, 1465, 1464, 2607, 2608, 1469, 
         3425, 1452, 2587, 1450, 2644, 1535, 2646, 1532, 3443, 1531, 2652, 
         1543, 2650, 1541, 3452, 1565, 2668, 1572, 2666, 1569, 2662, 1554, 
         3448, 1553, 1552}], 
        Line3DBox[{1680, 1679, 2724, 1682, 3498, 1645, 2707, 1642, 3479, 1641,
          2705, 1640, 3478, 2704, 1616, 1617, 3492, 2719, 1670, 1669, 3491, 
         2718, 1664, 1665, 3495, 2722, 1673, 1672, 3493, 2720, 1671, 1674, 
         3544, 2772, 1803, 3545, 1802, 1801}], 
        Line3DBox[{1689, 1686, 2726, 1681, 3497, 1643, 2706, 1644, 3480, 1639,
          2703, 1638, 3477, 2702, 1613, 1614, 3469, 2693, 1622, 1668, 3490, 
         2717, 1666, 1667, 3494, 2721, 1677, 1678, 3496, 2723, 1675, 1676, 
         3553, 2779, 1800, 3543, 1799, 1798}], 
        Line3DBox[{1695, 1612, 2691, 1611, 3468, 1610, 2696, 1626, 3473, 2698,
          1618, 1619, 3470, 2694, 1623, 1624, 3488, 2715, 1654, 1648, 3481, 
         2708, 1646, 1647, 3482, 2709, 1649, 1662, 3487, 2714, 1656, 1657, 
         3541, 1793}], 
        Line3DBox[{1696, 1615, 2692, 1609, 3467, 1607, 2690, 1608, 3471, 2695,
          1625, 1627, 3472, 2697, 1620, 1621, 3489, 2716, 1652, 1653, 3484, 
         2711, 1655, 1651, 3483, 2710, 1650, 1661, 3486, 2713, 1660, 1663, 
         3542, 1794}], 
        Line3DBox[{1701, 1699, 2731, 1700, 3502, 1697, 2730, 1698, 3504, 1692,
          2727, 1691, 3501, 1690, 2729, 1694, 3516, 2746, 1724, 1725, 3515, 
         2745, 1726, 1714, 3507, 2736, 1713, 1716, 3509, 2738, 1717, 1659, 
         3485, 2712, 1658, 3550, 1816, 2777, 1813, 3549, 1814, 1815}], 
        Line3DBox[{1705, 1685, 2725, 1684, 3499, 1683, 2728, 1693, 3514, 1721,
          2742, 1720, 3512, 2741, 1719, 1710, 3506, 2735, 1709, 1718, 3510, 
         2739, 1635, 1630, 3474, 2699, 1628, 1629, 3475, 2700, 1631, 1632, 
         3552, 2778, 1817, 3551, 1818, 1819}], 
        Line3DBox[{1706, 1704, 2732, 1703, 3503, 1702, 2733, 1688, 3500, 1687,
          2743, 1723, 3513, 1722, 2744, 1715, 3508, 2737, 1712, 1708, 3505, 
         2734, 1707, 1711, 3511, 2740, 1633, 1634, 3476, 2701, 1636, 1637, 
         3555, 2780, 1822, 3554, 1823, 2781, 1824, 3556, 1821, 1820}], 
        Line3DBox[{1727, 2747, 1728, 1729, 3656, 2748, 1730, 1738, 3661, 2768,
          1789, 1786, 3660, 2766, 1785, 1770, 3659, 2762, 1771, 1774, 3536, 
         1782}], 
        Line3DBox[{1732, 2749, 1731, 1735, 3517, 2750, 1733, 1734, 3518, 2751,
          1736, 1737, 3538, 2767, 1788, 1776, 3531, 2763, 1775, 1777, 3532, 
         2764, 1772, 1773, 3535, 1781}], 
        Line3DBox[{1742, 2753, 1741, 1740, 3519, 2752, 1739, 1787, 3539, 2769,
          1791, 1792, 3540, 2770, 1790, 1784, 3537, 2765, 1783, 1779, 3533, 
         1778}], 
        Line3DBox[{1745, 3521, 1746, 1755, 2758, 3525, 1757, 1839, 2786, 3558,
          1840, 1842, 2789, 3559, 1836, 1835, 2790, 3560, 1845, 1853, 2796, 
         3562, 1809, 1806, 2774, 3546, 1807, 2775, 1811, 1812}], 
        Line3DBox[{1765, 3528, 1763, 1761, 2761, 3658, 1769, 1748, 2756, 3657,
          1750, 1832, 2783, 3662, 1828, 1826, 2799, 3667, 1859, 1857, 2802, 
         3668, 1862, 1847, 2792, 1849}], 
        Line3DBox[{1767, 3529, 1766, 1758, 2759, 3526, 1759, 1752, 2757, 3523,
          1751, 1743, 2754, 3520, 1744, 1834, 2800, 3565, 1860, 1854, 2797, 
         3563, 1855, 1851, 2794, 3561, 1850, 2793, 1843, 1844}], 
        Line3DBox[{1780, 3534, 1756, 1753, 3524, 1754, 2787, 1837, 3664, 2785,
          1838, 1841, 3665, 2788, 1830, 1829, 3663, 2784, 1833, 1852, 3666, 
         2795, 1808, 3547, 1804, 2773, 1805, 3548, 2776, 1810, 1796, 2771, 
         1795, 1797}], 
        Line3DBox[{1848, 2791, 1846, 1861, 3566, 2801, 1856, 1858, 3564, 2798,
          1825, 1827, 3557, 2782, 1831, 1749, 3522, 2755, 1747, 1768, 3530, 
         2760, 1760, 1762, 3527, 1764}]}, {
        GrayLevel[0.2], 
        Line3DBox[{1867, 2431, 1866, 1876, 2435, 3674, 1874, 2396, 2436, 3675,
          1875, 1873, 2434, 3673, 1872, 2399, 2448, 3686, 1903, 2401, 2450, 
         3689, 1908, 2400, 2451, 3690, 1907, 1906, 3688, 1905}], 
        Line3DBox[{1881, 1882, 3677, 1880, 2398, 3759, 2438, 1883, 3695, 1902,
          2447, 1901, 3687, 1900, 2446, 1884, 3678, 1869, 2432, 1868, 3671, 
         2433, 1870, 3672, 1871, 2441, 2395, 3669, 1863, 2430, 1864, 3670, 
         1865, 2455, 1915, 3696, 1928, 2463, 1929, 1917, 2458, 1918}], 
        Line3DBox[{1894, 2444, 1893, 1896, 3684, 1895}], 
        Line3DBox[{1904, 2449, 1897, 1890, 2443, 3682, 1889, 1888, 2442, 3681,
          1887, 1899, 2445, 3685, 1898, 1892, 3683, 1891}], 
        Line3DBox[{1920, 1919, 2459, 1921, 1916, 2456, 3760, 1910, 2452, 1909,
          3691, 2453, 1911, 1912, 3693, 2457, 2402, 1913, 3692, 2454, 1914, 
         1885, 3679, 2439, 2397, 1877, 3676, 2437, 1878, 1879, 3680, 2440, 
         1886, 3697, 1930, 2464, 3764, 1931, 1927, 2461, 3762, 2404, 1925, 
         2462, 3763, 2403, 1924, 2460, 3761, 2405, 1922, 3694, 1923, 1926}], 
        Line3DBox[{1941, 1942, 1945, 3699, 2472, 1934, 2466, 1935, 2475, 1956,
          2518, 2007, 2512, 2006, 2511, 3765, 1985, 1974, 2488, 1975, 2593, 
         2116, 2585, 2115, 2603, 2129, 2597, 3769, 2128, 2596, 2091, 2572, 
         2092, 2579, 2110, 2624, 2152, 2153}], 
        Line3DBox[{1946, 1933, 2465, 1932, 2476, 1957, 2406, 3701, 2477, 1958,
          2519, 2008, 2513, 2009, 2514, 2010, 2515, 2011, 2628, 3771, 2118, 
         2117, 2588, 2120, 2604, 2130, 2599, 2598, 2111, 2580, 2112, 3722, 
         2114, 2584, 2113, 2625, 2154, 2155}], 
        Line3DBox[{1947, 1948, 3700, 1949, 2473, 1950, 2509, 2003, 2507, 1991,
          2497, 1992, 2408, 3706, 2496, 1990, 2502, 1998, 2505, 2001, 2630, 
         2158, 2629, 2133, 2609, 3770, 2100, 2098, 2576, 2575, 2099, 2627, 
         2148, 2621, 2147, 2623, 2151, 3727, 2159, 2161}], 
        Line3DBox[{1951, 1952, 2508, 2005, 2517, 2012, 2516, 1989, 2407, 3705,
          2495, 1987, 2494, 1988, 2500, 1996, 2501, 1997, 2614, 2139, 2141, 
         3724, 2616, 2134, 2610, 2135, 2619, 2618, 2145, 2620, 2142, 2617, 
         3725, 2143, 2144, 2633, 2156, 2157}], 
        Line3DBox[{1954, 1953, 2474, 1955, 2004, 3708, 2510, 2002, 2506, 1993,
          2498, 1994, 2499, 1995, 2504, 2000, 2409, 3707, 2503, 1999, 2631, 
         2140, 2615, 2137, 2611, 2136, 2613, 2612, 2138, 3726, 2146, 2626, 
         2149, 2622, 2150, 2632, 2160, 2162}], 
        Line3DBox[{1976, 3703, 1977, 1968, 2482, 1969, 2483, 1970, 2486, 1971,
          2484, 1965, 2480, 3702, 1964, 1963, 2481, 1966, 2489, 1980, 2590, 
         2123, 2594, 2125, 2600, 3723, 2121, 2119, 2587, 2586, 2101, 2578, 
         2087, 2570, 2088, 2581, 2108, 3720, 2107, 2106}], 
        Line3DBox[{1978, 1943, 2470, 1937, 2467, 1936, 2469, 1940, 2520, 3766,
          1973, 1959, 2478, 1961, 2490, 1981, 2492, 1983, 2589, 2122, 2592, 
         3768, 2410, 2126, 2601, 2131, 2607, 2605, 2094, 2573, 2093, 2574, 
         2097, 3721, 2109, 2582, 2102, 2104}], 
        Line3DBox[{2015, 2016, 2521, 3709, 2014, 2013, 2531, 2029, 2526, 2030,
          2548, 2054, 2542, 2055, 2550, 3716, 2064, 2070, 2555, 2071, 2635, 
         2167, 2636, 2168, 2642, 2174, 2646, 3772, 2411, 2645, 2176, 2672, 
         2198, 2680, 2205, 2677, 2206, 2209}], 
        Line3DBox[{2017, 2018, 2522, 2021, 2525, 2028, 2527, 3710, 2032, 2031,
          2543, 2056, 2545, 2059, 2551, 2065, 2552, 2066, 2648, 3729, 2164, 
         2163, 2637, 2169, 2641, 2173, 2644, 2643, 2175, 2671, 2197, 3776, 
         2415, 2679, 2207, 2678, 2208, 2210}], 
        Line3DBox[{2022, 2023, 2523, 2026, 2530, 3711, 2020, 2019, 2529, 2034,
          2565, 2063, 2547, 2057, 2544, 2058, 2553, 3717, 2067, 2069, 2639, 
         2170, 2640, 2172, 2647, 2177, 2650, 2649, 2178, 3774, 2413, 2674, 
         2201, 2675, 2199, 2673, 2200, 2204}], 
        Line3DBox[{2024, 2025, 2524, 2027, 2528, 2033, 2532, 2035, 2549, 3715,
          2062, 2060, 2546, 2061, 2554, 2068, 2556, 2072, 2638, 2165, 2634, 
         3728, 2166, 2171, 2653, 2179, 2652, 2651, 2180, 2670, 2195, 2669, 
         2196, 3775, 2414, 2676, 2202, 2203}], 
        Line3DBox[{2038, 2036, 2533, 2037, 2536, 2049, 2538, 3714, 2048, 2047,
          2557, 2073, 2559, 2076, 2568, 2081, 2563, 2082, 2664, 3731, 2186, 
         2185, 2657, 2187, 2663, 2192, 2666, 2665, 2193, 2682, 2212, 3777, 
         2416, 2681, 2211, 2689, 2218, 2219}], 
        Line3DBox[{2041, 3712, 2040, 2039, 2534, 2042, 2537, 2050, 2539, 2051,
          2560, 2077, 2567, 3718, 2086, 2083, 2564, 2084, 2566, 2085, 2660, 
         2188, 2659, 2189, 2661, 3730, 2190, 2191, 2668, 2667, 2194, 2683, 
         2213, 2684, 2214, 2687, 2217, 3732, 2221, 2220}], 
        Line3DBox[{2043, 2044, 2535, 3713, 2046, 2045, 2540, 2052, 2541, 2053,
          2561, 2074, 2558, 2075, 2569, 3719, 2079, 2078, 2562, 2080, 2656, 
         2184, 2658, 2181, 2654, 2182, 2662, 3773, 2412, 2655, 2183, 2685, 
         2215, 2686, 2216, 2688, 2222, 2223}], 
        Line3DBox[{2105, 2103, 2583, 2090, 2571, 2089, 2577, 2096, 3767, 2095,
          2606, 2608, 2132, 2602, 2127, 2595, 2124, 2591, 1986, 1984, 3704, 
         2493, 1982, 2491, 1962, 2479, 1960, 2485, 1972, 2487, 1967, 1939, 
         3698, 2468, 1938, 2471, 1944, 1979}], 
        Line3DBox[{2263, 2262, 3737, 2260, 2712, 2261, 2780, 3797, 2419, 2240,
          2700, 2241, 2723, 2273, 2720, 3788, 2274, 2256, 2710, 2254, 2709, 
         3783, 2255, 2785, 2385, 2386, 2786, 2342, 2757, 3794, 2423, 2340, 
         2756, 2755, 2341, 2763, 2351, 3752, 2352, 2766, 2355, 2770, 2362, 
         3755, 2363, 2364}], 
        Line3DBox[{2276, 2724, 2277, 2726, 2279, 2725, 2278, 2299, 3740, 2733,
          2293, 2730, 2289, 2290, 3741, 2300}], 
        Line3DBox[{2288, 3738, 2287, 2280, 2727, 2281, 2743, 3743, 2285, 2282,
          2728, 2250, 2706, 2251, 2707, 3735, 2249, 2228, 2692, 2226, 2691, 
         2227, 2771, 2367}], 
        Line3DBox[{2292, 3739, 2291, 2294, 2731, 2295, 2732, 2298}], 
        Line3DBox[{2297, 2296}], 
        Line3DBox[{2321, 3747, 2286, 2283, 2729, 2284, 2744, 3744, 2314, 2313,
          2742, 2245, 2703, 2246, 2705, 3734, 2248, 2224, 2690, 2225, 2696, 
         3733, 2236, 2776, 2374, 2373, 2775, 2375, 2793, 2390}], 
        Line3DBox[{2328, 2327, 2749, 2329, 2791, 2792, 2389, 2428, 3798, 2794,
          2371, 2774, 2370, 2369, 2773, 2237, 3779, 2698, 2235, 2695, 2234, 
         2247, 3781, 2704, 2244, 2702, 2243, 2741, 2312, 2310, 3791, 2737, 
         2309, 2746, 2320, 2319, 3746, 2318}], 
        Line3DBox[{2331, 2332, 3749, 2335, 2752, 2325, 2748, 2326, 3750, 2336,
          2751, 2337, 2798, 2799, 2393, 2429, 3800, 2800, 2388, 2790, 2387, 
         2384, 2784, 2268, 3785, 2715, 2267, 2716, 2269, 2272, 3786, 2718, 
         2271, 2717, 2270, 2739, 2304, 2422, 3792, 2740, 2308, 2736, 2307, 
         2306, 3742, 2305}], 
        Line3DBox[{2334, 2333, 2753, 2324, 2747, 2323, 3748, 2322, 2750, 2330,
          2801, 2802, 2394, 2392, 3799, 2797, 2391, 2796, 2372, 2425, 2795, 
         2233, 3778, 2694, 2232, 2697, 2229, 2417, 3787, 2719, 2231, 2693, 
         2230, 2735, 2303, 2302, 3790, 2734, 2301, 2745, 2317, 2316, 3745, 
         2315}], 
        Line3DBox[{2356, 2357, 3756, 2366, 2769, 2360, 2768, 2361, 3754, 2359,
          2767, 2358, 2782, 2783, 2383, 2339, 3793, 2754, 2338, 2789, 2382, 
         2427, 2788, 2253, 3782, 2708, 2252, 2711, 2257, 2420, 3789, 2722, 
         2275, 2721, 2239, 2699, 2238, 2418, 3780, 2701, 2242, 2738, 2311, 
         2259, 3736, 2258}], 
        Line3DBox[{2365, 2354, 3753, 2353, 2765, 2348, 2762, 2349, 3751, 2350,
          2764, 2347, 2760, 2761, 2346, 2345, 3795, 2759, 2344, 2758, 2343, 
         2787, 2424, 2266, 3784, 2714, 2265, 2713, 2264, 2421, 3796, 2772, 
         2368, 2779, 2381, 2778, 2380, 3758, 2426, 2781, 2379, 2777, 2378, 
         3757, 2377, 2376}]}, {
        GrayLevel[0.2], 
        Line3DBox[{2828, 2830, 3631, 3572, 3695, 3353, 2938, 2940, 3355, 2942,
          3649, 2958, 3697, 3370, 3245, 2944, 3358, 2946, 3360, 2900, 3328, 
         3241}], 
        Line3DBox[{2833, 3677, 2826, 2825, 3349, 2931, 3356, 2935, 3762, 3350,
          2936, 2937, 3371, 2959, 3372, 2948, 3361, 2949}], 
        Line3DBox[{2849, 3683, 2850, 2872, 3310, 2873, 3311, 2864, 3686, 3640,
          3239, 2813, 3286, 2812, 3285, 3672, 2811, 3634, 2844, 2842, 3298, 
         2843, 3645, 3692, 3579, 3315, 2883, 2884, 3332, 2908, 3340, 3339, 
         2901, 2902}], 
        Line3DBox[{2856, 3684, 2857, 2854, 3302, 2855, 3303, 2848, 3682, 3636,
          3238, 2853, 3307, 2817, 3287, 3568, 3674, 3628, 3236, 2808, 3284, 
         2809, 3365, 3696, 2953, 3648, 2889, 2890, 3321, 2891, 3323, 3760, 
         3322, 2892, 2911, 3337, 2897, 3327, 2898, 3329, 2903, 2904}], 
        Line3DBox[{2858, 3573, 3685, 3637, 2845, 2846, 3301, 2852, 3300, 2815,
          3673, 3627, 3235, 2816, 3289, 2804, 3281, 3669, 2803, 3624, 3233, 
         2814, 3320, 2888, 3647, 3693, 3578, 3314, 2876, 2877, 3317, 3316, 
         2885, 3324, 2893, 2894}], 
        Line3DBox[{2859, 2860, 3304, 2847, 3681, 3635, 3237, 2851, 3299, 2818,
          3288, 3569, 3675, 3629, 2819, 2807, 3283, 2806, 3282, 3670, 2805, 
         3646, 2886, 2887, 3319, 2880, 3644, 3691, 3577, 3643, 2878, 3313, 
         2879, 3326, 2896, 3325, 2895, 2899}], 
        Line3DBox[{2867, 3688, 2868, 2874, 3312, 2863, 3639, 3574, 3687, 3308,
          3240, 2836, 3295, 2837, 3633, 3680, 3571, 3291, 2820, 2821, 3292, 
         2831, 3336, 2905, 3330, 3242}], 
        Line3DBox[{2869, 3575, 3690, 3642, 2875, 2861, 3305, 2862, 3638, 2838,
          3678, 3296, 2834, 2835, 3294, 2824, 3630, 3676, 3570, 3290, 2822, 
         2823, 3333, 2909, 3335, 2910, 3341, 3244}], 
        Line3DBox[{2870, 2871, 3309, 3576, 3689, 3641, 2865, 2866, 3306, 2810,
          3625, 3567, 3671, 3626, 3234, 2839, 3297, 2840, 3632, 3679, 2841, 
         3318, 2881, 2882, 3334, 2907, 3331, 2906, 3338, 3243}], 
        Line3DBox[{2914, 3694, 2915, 2920, 3345, 2921, 3369, 2955, 3367, 
         2956}], 
        Line3DBox[{2922, 2923, 3368, 2957}], 
        Line3DBox[{2926, 2924, 3346, 2925, 3366, 2954}], 
        Line3DBox[{2933, 2930, 3761, 3348, 2929, 2919, 3344, 2916, 3343, 2917,
          3362, 2950}], 
        Line3DBox[{2934, 2927, 3347, 2928, 3763, 3351, 2918, 2912, 3342, 2913,
          3363, 2951, 3364, 2952}], 
        Line3DBox[{2947, 3359, 2945, 3357, 2943, 3373, 2960, 2961, 3374, 3764,
          2941, 3354, 2939, 3352, 2932, 2832, 3293, 3759, 2829, 2827}], 
        Line3DBox[{2966, 2967, 3699, 3377, 3247, 2963, 3379, 2970, 3701, 3380,
          2973, 2990, 3394, 2983, 3706, 3386, 2984, 2985, 3388, 2989, 3707, 
         3389, 2987, 2986, 3429, 3054, 3724, 3430, 3051, 3050, 3433, 3058, 
         3435, 3257}], 
        Line3DBox[{2971, 3700, 2972, 2968, 3378, 2969, 3708, 3391, 2992, 2991,
          3390, 2979, 3705, 3384, 2980, 2981, 3385, 2982, 3387, 2988}], 
        Line3DBox[{2993, 2994, 3392, 2995}], 
        Line3DBox[{3001, 3002, 3000, 3396, 3709, 2999, 3399, 3003, 3251, 3397,
          3710, 3004, 3405, 3019, 3406, 3248, 3702, 2974, 3382, 2977, 3383, 
         3249, 3704, 2978, 3422, 3046, 3652, 3768, 3255, 3045, 3426, 3583, 
         3653, 3769, 3047, 3423, 3582, 3421, 3043, 3722, 3044, 3436, 3060, 
         3437, 3061, 3727, 3064, 3065}], 
        Line3DBox[{3010, 3009, 3712, 3008, 3403, 3015, 3006, 3398, 3711, 3005,
          3400, 3007, 3252, 3408, 3715, 3020, 3407, 3021, 3411, 3253, 3716, 
         3022, 3409, 3023, 3440, 3067, 3729, 3072, 3445, 3073, 3463, 3256, 
         3723, 3048, 3425, 3424, 3036, 3037, 3767, 3419, 3038, 3420, 3039, 
         3721, 3042, 3438, 3587, 3062}], 
        Line3DBox[{3011, 3012, 3014, 3401, 3713, 3013, 3404, 3018, 3017, 3402,
          3714, 3016, 3413, 3029, 3033, 3416, 3718, 3031, 3415, 3032, 3026, 
         3410, 3717, 3025, 3441, 3068, 3442, 3258, 3728, 3066, 3446, 3069, 
         3443, 3070, 3772, 3444, 3071, 3457, 3086, 3090, 3776, 3461, 3088, 
         3459, 3089, 3041, 3720, 3040}], 
        Line3DBox[{3024, 2976, 3703, 2975, 3381, 2962, 3246, 3375, 3698, 2964,
          3376, 2965, 3651, 3766, 3250, 3581, 3393, 3580, 3650, 3765, 2996, 
         2997, 3395, 2998, 3655, 3771, 3063, 3588, 3439, 3584, 3654, 3770, 
         3049, 3052, 3428, 3427, 3053, 3726, 3059, 3434, 3585, 3431, 3725, 
         3586, 3057, 3432, 3055, 3056}], 
        Line3DBox[{3030, 3414, 3027, 3412, 3028, 3254, 3418, 3719, 3034, 3417,
          3035, 3259, 3455, 3731, 3078, 3450, 3079, 3453, 3082, 3730, 3080, 
         3452, 3451, 3081, 3087, 3774, 3458, 3084, 3456, 3085, 3092, 3775, 
         3460, 3091, 3093}], 
        Line3DBox[{3077, 3449, 3074, 3447, 3075, 3448, 3076, 3773, 3454, 3083,
          3464, 3096, 3095, 3777, 3462, 3094, 3466, 3098, 3099, 3732, 3100}], 
        Line3DBox[{3103, 3102, 3101, 3465, 3097, 3260}], 
        Line3DBox[{3129, 3736, 3130, 3131, 3485, 3595, 3555, 3797, 3224, 3223,
          3552, 3619, 3553, 3211, 3544, 3796, 3275, 3208, 3542, 3207, 3541, 
         3197, 3534, 3274}], 
        Line3DBox[{3132, 3737, 3133, 3220, 3550, 3221, 3554, 3758, 3225, 3222,
          3551, 3209, 3543, 3210, 3545, 3212}], 
        Line3DBox[{3153, 3151, 3739, 3150, 3502, 3152, 3503, 3266, 3740, 3145,
          3499, 3143, 3497, 3144, 3498, 3122, 3735, 3104, 3467, 3105, 3468, 
         3261, 3733, 3113, 3548, 3213, 3546, 3617, 3561, 3798, 3278, 3623, 
         3668, 3566, 3176, 3517, 3174, 3748, 3175, 3656, 3603, 3519, 3177, 
         3749, 3178, 3611}], 
        Line3DBox[{3156, 3155, 3741, 3154, 3504, 3146, 3500, 3265, 3743, 3169,
          3514, 3121, 3480, 3120, 3479, 3262, 3734, 3112, 3471, 3591, 3473, 
         3779, 3107, 3108, 3547, 3618, 3562, 3622, 3563, 3799, 3280, 3232, 
         3667, 3564, 3181, 3518, 3179, 3750, 3180, 3661, 3613, 3539, 3616, 
         3756, 3206, 3614}], 
        Line3DBox[{3157, 3149, 3738, 3147, 3501, 3148, 3513, 3268, 3744, 3166,
          3512, 3119, 3477, 3594, 3478, 3781, 3106, 3589, 3472, 3110, 3470, 
         3778, 3111, 3666, 3279, 3231, 3560, 3621, 3565, 3800, 3229, 3228, 
         3662, 3557, 3203, 3538, 3612, 3754, 3202, 3660, 3610, 3540, 3204, 
         3755, 3205, 3615}], 
        Line3DBox[{3160, 3742, 3161, 3165, 3509, 3118, 3476, 3780, 3117, 3115,
          3475, 3593, 3496, 3141, 3493, 3788, 3264, 3134, 3486, 3596, 3487, 
         3784, 3135, 3524, 3271, 3183, 3521, 3184, 3529, 3273}], 
        Line3DBox[{3167, 3168, 3747, 3602, 3516, 3164, 3508, 3791, 3163, 3159,
          3506, 3109, 3469, 3590, 3492, 3787, 3263, 3138, 3489, 3136, 3488, 
         3785, 3137, 3663, 3227, 3620, 3559, 3182, 3520, 3793, 3269, 3185, 
         3657, 3522, 3604, 3531, 3609, 3752, 3190, 3659, 3608, 3537, 3193, 
         3753, 3194, 3198}], 
        Line3DBox[{3170, 3745, 3162, 3600, 3507, 3601, 3511, 3792, 3116, 3114,
          3474, 3592, 3494, 3598, 3495, 3789, 3142, 3127, 3483, 3125, 3482, 
         3783, 3126, 3664, 3276, 3187, 3525, 3605, 3526, 3795, 3272, 3188, 
         3528, 3527, 3189, 3535, 3200, 3201}], 
        Line3DBox[{3172, 3746, 3173, 3171, 3515, 3158, 3505, 3790, 3267, 3599,
          3510, 3140, 3490, 3597, 3491, 3786, 3139, 3128, 3484, 3123, 3481, 
         3782, 3124, 3665, 3277, 3230, 3558, 3186, 3523, 3794, 3270, 3606, 
         3658, 3530, 3607, 3532, 3191, 3751, 3192, 3536, 3195, 3533, 3196, 
         3199}], 
        Line3DBox[{3217, 3216}], 
        Line3DBox[{3218, 3757, 3219, 3214, 3549, 3215, 3556, 3226}]}}}, 
     VertexNormals -> CompressedData["
1:eJztXTGrpUUSfWhutmiwiciMZroKggMymQhmBiaCwcKCbOKP8B84Om/ebGJs
or/AZ2ZgIohoYGqmwehgvCLvJo2HqlN1qrv63hs9XtHUra6uru7++tTpZ//9
wdv/eeLi4uLHpy4unvzz7+33//H6H299d/3aPz9999GjX+7euvlfJX/+5u+d
Iv27yJEfZvvndlP/RP1ZFYes/i5xEh3fqH9OdV53nUer4rZ7vHUdr1V+i+bP
7vG8S15a5c8XgvHj1aOKt25+3iWudonDY+vX7eF3V8fJsax37Ph28f+pjqN3
3qF+sfLV/e0mj+a9O5P8fCzjqDqPjOPF+sdqf0vk/1HPse6X0Licapx333eh
31XPoy7y3dfHWXbe/+LTNy7f+/ruw7/+/nD95U9vPvP6q7/eXSX/5EZ+dSO/
vpFf3sj/N7R/QOpHeu6D37XsfOBsH7XH257Vw8qRn1n/W/0a/cn+7pXR/sqp
53Job42vyg9s/Ftxy8qRnar2rB6VPar4rJpfl2R/UTyj9ur4YeNZFSdZ+RXw
g+VPVf7xtr8C9ljy7O+iPIziR5VvVeuL9buj3Fp3WD+z45Ud34P80mk/mzdY
PVZcefdv1eu7Oj6zcaKKf5RvrTy8ap9fbSe7Xo/tWTtZ+b1Bfi32w8cgv1l2
jnkA2XnPaM/uH7z+V8UVOy7VclWcVNv5UTBOusu7xYM1v8b2s86D3ryB5If4
YfNS9jyo1l91nrXyttfPKv0oDqPrhWqeeu089HdcX6w8xsq98/djsj27nrJx
ohpfFG/W91LUr/FcM6u9V/5ApIfVb51n7w/t0fclJI+eH0c7kT3suKBzuqp9
N7kVV16/WePI2pn9PsDaj/KGNb7o+yfS4/0ONuu7pdcPqrzE5mc2rtjvjeg7
WPR7S3ZeRPWw9iO/edtH+5Vtb9nvlVvxM8ofgvhRj6N3fUHrnaXH257VE91X
ZH+32v/R9dEr/8TorzdPqs5r0XMu+7vZ9c66x1Ttl9h+If+gdXCU3zPkqvOj
93fR+V2lH32fUfc3K7fiHPnN+z2BnS+W37JxZe3f2P0eq4fdb7N5YFxHWDuj
45jNS6r1otu51coP43hZ37uq8pWVJ712st/HVHYiOZp3Kv3R9S4rf+npD9/5
/Jtvr3//72fPXX7/892bv9cH+W9AjtrvIlf1y6vnX4P8N3G/qvV3+12vPepx
j/Z3drx108/67dD+cZGfkT3d4rmL/HFyfFfNu27ztyqPjfPFaz/Ss7t/quQv
NlnXrHFZZedZfhzy8zp4lneSrzqHdj//Wnl+1/PCWV6Thw/jNe7nu5372HOc
dx9rtUf75+7xEPXzrHhb7bdd7K/+LjHGvzcPqM+Jh99ddU5R/S6br6r1vBL8
XW/ey35ffSzub/U6snpd7pYPq+IqmydX97e7/FTvg6rXC1Y+a7+9et81e9y9
+5ZucTVrvpy/A/z9PgS135UPkOUz7MrDVs3Lt8o/7HsZXd5h2U2+6l2S2bys
1nzpFiez5nWXcenGO3q2k5PPyv+7rMu7z7vu8tnrzrHx+u6SB05NnuW77jYf
d7E/u2/0+uFWkZ9X+2eXvJF9x2SWf6r5DBG/JVu3a+nxtmf1sPyWKn4wFV9W
lI+rqj3r/9Xyaj4T7++y8wi1V/G+Il6RqNzLB3IJ+ht978A7LlfAnxYPCcvH
4tVjjW+VPSp+det3q+TRPO/1M8rnKt5mK57H+n3V+wssb+R94DcVv7FVz17F
qxzVM/qB5Vldxb+6O28wK1fxkUbjh+VpqYrbar7ZKO8Q4hnI8vPM4iVm+8Xy
MHv1RPlds/1V+4f1m7VeRP3WjSfTy2/2Fdg/ZPnxsvtGZCfLf8XyoLL8aVHe
V5avkt1vW+cdr54sr9FqvlCVPMsjWs1HGuWRZvNYNv6j/J+ovZdPNcrbmT0X
W98xLH7XUa7iEVX5eTaPKPu9COlX8aOy6wha17K8o6yecd3P+tNar9G+C+Wx
qnMEe75g34Owzl9V+Tm6/qp4Yr38bCwvZZSnVHWOsOLhK6M94r1k9aD2Uf5A
pL/6PJvVE71HQ3Ho5UH1+n+UZ+NKxbcZ5TX17vMtnk+0LqjyQ/acFT2nePlp
R75Hdr5H43D0m/W70feD2HmRlaP4Get3jq1+c+xXlmfgzLPn8/Ps+lw1n54q
frrJV48XO+/G+mvW/mx7tT9RXS0bh93Gq5oHY/d5d6zy87gcR95W6T/W/WTV
+hLlHaqev6v5ineNt27zNLu/9eof4/PU+LVeBn5DctYelheLlavsZPV4480b
V114qHbhY/TKV/EvrR7HavtV867LPv8gV51zq3jSVPtbld9U7VfHD7KnOs67
nUOz6yCyX51PutSZnuXHJd+Fz+cFkT3d+tWF90bNP9ClX7PkIy9B1G8qPSo5
ujdX1Tur6uij+DRvvaSq7j76u9l6xmhdKsJJsng8b79U76RH46oan9mNB4Ct
08/W63XlK8jGj4U/99aJR/kNqurHkZ1sHYGFJ2frJtj8jOoOVPnQaycbP8ie
WfOuun68um43W5+uqtO38PZVPAPV9fKr9KySq+2v2m8gOxFun9Wj4qlQrdds
PYvFb+DFD6vquFn5wX6U31C9RrY+gu2vut4hW9dZXffK1rdG7WTr11AdK9r3
jnZG661W8wAguVUnGK2vz9bJIr4j9ndn1aer6uzYeha0jmTru61zgWo+ovpW
tl5VXd/K9mucR1a9cLSel7Xfmx+q7EF+y9ZlW/3N1gVH6+bYPJOtc2S/U0XX
F1V9LltPl63PreYpQvtGti6YlVt2suPr1ROVo/hEdaNsHWtWrtrXqepA2brO
VXWaKvkudUPHKo/iqL31jGx9Yrf6Mhan193OWfGffe+4ax3HWX6Wd5bvkn+6
9WtV/c5ucm/diqrOSFWfkt1vrN6HVOPtkf5VdR/WvtHiWziv+6chZ/M2iqts
/l9dd9Yt/tn80w3PvArXjb7fWrgv7/1OFlcw8o+x92KIl2/UX70PXDVf2Dpi
Vn+3+dJNvktdxu7vq+7iZysPs3UN3vs+tp5CXWeB1gX2XrK6LmCXOoJVdRlZ
XIe1f8ji6tX4f2/cqvDzbL2A5R9vv9S4eu9+ks0DCK+lws8jHLgKlz7r/aws
Dr8ap636XTQuUfz/7HFU5WH0fhmL72XfEYu+58W2V+FqovPXsr/be14qfLKV
5xG+JYvvZXEys3DXKhwvi6PLjguLz1ThfqP1d974sXD+q/DJXryxpR+19467
qn6hCm+s0pN9hyjaX8ue6PtE2fWafU82ijfO1gFZeYatF6vGFWfxw9Xv41j7
4ezvovdoVLhi9v0aFj+vwhVH36k544E5+S74oio8IcIhqN5nmXWfuxrHksVv
dLvvPst73Z+utrMbHk/Fnz+bN16dB1R4tl1wOLvOUys+V+F1s/3aDYepmr/V
fOPVfKdVvKmr+S2z/bo96OmC39gVr2LFAxovdhy78QCvHnfkzy52snHL2o/4
pVk93fy2yh7VuBzb/F293qnzcFTPaj9E1wuk/06TfmXnqTVet8j26HdHPer9
WFWe3G18u86jWXk7u5+cNb+65vlu8lU4ZxYfa93Xe3Gz1far8N4IN2LJWfwJ
6+cs7gLZGcVjq+TIHnbcvbgjNd+4Kg4tXEEUd92Ndxr1S6VfXfeRHUcL3zLO
dxbfq/anheuO4liieM7Z+F4rn2TxWgi3hvBaltyLo2Nxqiy+8YqUPyTtV/Gm
Iv+z+E8V/h/hKlW4ZYT3W8236bUTjRfL22nhHrPzN5rHsvg0C7eWHUcV3gzh
+lT6u+FPdsEP7IrDWcVfNMufVe9Qz8IJdLPzLN97vu8mr8azVfPpdfGbl9fL
i59UrTvI/6+I+ovy/+x37avjTc23vAv/Z5Wdx1JfkLXnIO92n7gL3mMWr04V
z4PFG+A9p1v3COi7hPcc3S0vzT4Xq3+3236mO67Auk9fZU8XP6zGGe5iZxXO
ZPc4GefRbBzL7vyTq/JGFd4pijM8NbkKz4bGEeE2V43LLvlfdS5Q4cRUeDAW
34X4NlmcFYuDiuLuWHxL1XmNxV9V8yWqcT5sv7z3yNXvsLM4HzUvnwoXxPK/
efEw7PeBKJ+Yl8cG/a4KVxPlhfPiQCwcVJZHkeWVUuFbLP9kcSwWfoadXyr8
iddvLB6pGgeyy3ekbt/xqu3shn9QvS+G7n12j7du94C7yLu/X5MdR3QvP8rZ
+9Dqe17WP957/6yfLb616Dza5d68Sq7iFazOh7PeU0Y4k27fo7rVmaLveNHv
LRYPqnUeZOs42HOfKt6y78uvfke4+v46us56+xXFlc3C3UXz7S776t3v3VT3
cavukVetF6vsUb2Lx65H6Pueap5aeWx2vsru/4/lvd3V+aeLnu74k4N8vB9X
57HoPa9XXs0HYr236L3PVd2rVt0DWv5heQNU94bsO1PR93q87+aw92Kqd0C6
7WNPTa6qi1mlnz3PdlnXDnLVPpa9J7X2twhnwt4vs/ez3nvV2fc1u93jrH5X
xfLzrO8Y/weTULw3
      "]], {
    DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 1}, DisplayFunction :> 
     Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]]}, PlotRange -> {{-2, 0}, {-2, 0}, {-2, 0}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"x", "-", 
           RowBox[{"3", " ", "y"}], "+", "z"}], "\[LongEqual]", "4"}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", "x"}], "+", 
           RowBox[{"2", " ", "y"}], "-", 
           RowBox[{"5", " ", "z"}]}], "\[LongEqual]", "3"}], 
       RowBox[{
         RowBox[{
           RowBox[{"5", " ", "x"}], "-", 
           RowBox[{"13", " ", "y"}], "+", 
           RowBox[{"13", " ", "z"}]}], "\[LongEqual]", "8"}]}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.757331111093505*^9, 3.7573311451205177`*^9, {3.757331225367852*^9, 
   3.757331258335672*^9}, {3.7573312904058933`*^9, 3.757331327924568*^9}, 
   3.7573313698224754`*^9, 3.7573317109301367`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"de131d64-e6fd-43a9-a3e5-91e297b4f99c"]
}, Open  ]],

Cell["\<\
Reduced row echelon form satisfies the following:
in echelon form
each leading entry is 1, in each non-zero row
each column containing a leading 1 has zeros everywhere else

the reduced echelon form is unique

use \[OpenCurlyDoubleQuote]RowReduce\[CloseCurlyDoubleQuote] in Mathematica\
\>", "Text",
 CellChangeTimes->{{3.757331460920848*^9, 3.7573315923862133`*^9}, {
  3.757331843741872*^9, 3.757331879294777*^9}, {3.7573319117071486`*^9, 
  3.7573319128899193`*^9}},ExpressionUUID->"bf0b4ccc-5669-4232-bc64-\
bd227149b1db"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", GridBox[{
      {"0", "2", "4", "2"},
      {"2", "4", "2", "3"},
      {"3", "3", "1", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"RowReduce", "[", "A", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        SubscriptBox["x", "2"]}], "+", 
       RowBox[{"4", 
        SubscriptBox["x", "3"]}]}], "\[Equal]", "2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        SubscriptBox["x", "1"]}], "+", 
       RowBox[{"4", 
        SubscriptBox["x", "2"]}], "+", 
       RowBox[{"2", 
        SubscriptBox["x", "3"]}]}], "\[Equal]", "3"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", 
        SubscriptBox["x", "1"]}], "+", 
       RowBox[{"3", 
        SubscriptBox["x", "2"]}], "+", 
       SubscriptBox["x", "3"]}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.757331988475747*^9, 3.7573320790754185`*^9}, {
  3.7573330210798473`*^9, 3.7573331816882296`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ed2cabd6-f4c0-445f-ba89-18d0a2e85a95"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", 
      RowBox[{"-", 
       FractionBox["7", "8"]}]},
     {"0", "1", "0", 
      FractionBox["5", "4"]},
     {"0", "0", "1", 
      RowBox[{"-", 
       FractionBox["1", "8"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7573330611227107`*^9, 3.757333077255559*^9}, 
   3.7573331821081066`*^9},
 CellLabel->
  "Out[49]//MatrixForm=",ExpressionUUID->"25e642f8-fe67-483a-8419-\
01ea944d022e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", 
     RowBox[{"-", 
      FractionBox["7", "8"]}]}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", 
     FractionBox["5", "4"]}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", "8"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7573330611227107`*^9, 3.757333077255559*^9}, 
   3.7573331827563734`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"e598e1aa-f580-473f-8d6d-bc20d158bf56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Pi", "^", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "B", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"RowReduce", "[", "B", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixRank", "[", "B", "]"}]}], "Input",
 CellChangeTimes->{{3.75733364832572*^9, 3.757333703779397*^9}, {
  3.7573339000574255`*^9, 3.757333942579671*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"cde93f9d-e91c-4da9-b40c-57ed511ecf15"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\[Pi]", "\[Pi]", "\[Pi]", "\[Pi]"},
     {
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["\[Pi]", "2"]},
     {
      SuperscriptBox["\[Pi]", "3"], 
      SuperscriptBox["\[Pi]", "3"], 
      SuperscriptBox["\[Pi]", "3"], 
      SuperscriptBox["\[Pi]", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7573336699568686`*^9, 3.7573337046550546`*^9}, 
   3.7573339104206886`*^9, 3.7573339448167534`*^9},
 CellLabel->
  "Out[60]//MatrixForm=",ExpressionUUID->"1e6052b5-ee74-4e03-b2b8-\
748fb6175ecb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7573336699568686`*^9, 3.7573337046550546`*^9}, 
   3.7573339104206886`*^9, 3.757333944824667*^9},
 CellLabel->
  "Out[61]//MatrixForm=",ExpressionUUID->"a02645eb-6a4e-4ad7-83dd-\
e6f4ce3802ab"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.7573336699568686`*^9, 3.7573337046550546`*^9}, 
   3.7573339104206886`*^9, 3.757333944827685*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"eff6ffba-e3f5-4615-a037-58fdf010bf52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "\[Equal]", " ", 
  RowBox[{"RowReduce", "[", "B", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "to", " ", "check", " ", "if", " ", "a", " ", "matrix", " ", "is", " ", 
    "in", " ", "its", " ", "reduced", " ", "echelon", " ", "form"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7573340403551483`*^9, 
  3.7573340903284836`*^9}},ExpressionUUID->"eddaad84-20e9-4c64-bb2d-\
53c32933c176"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.7573340554098854`*^9, 3.7573340652894564`*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"5ae677c2-338a-4e81-954e-0f0721a6dba4"]
}, Open  ]]
},
WindowSize->{759, 833},
WindowMargins->{{Automatic, 572}, {64, Automatic}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1051, 21, 254, "Text",ExpressionUUID->"c3ff82e1-d5a7-4451-9a68-774991d71dec"],
Cell[CellGroupData[{
Cell[1634, 45, 1264, 35, 86, "Input",ExpressionUUID->"ea7882e6-ce70-42c4-84f3-e3d5f4b88843"],
Cell[2901, 82, 184065, 3177, 421, "Output",ExpressionUUID->"de131d64-e6fd-43a9-a3e5-91e297b4f99c"]
}, Open  ]],
Cell[186981, 3262, 536, 13, 188, "Text",ExpressionUUID->"bf0b4ccc-5669-4232-bc64-bd227149b1db"],
Cell[CellGroupData[{
Cell[187542, 3279, 1349, 42, 103, "Input",ExpressionUUID->"ed2cabd6-f4c0-445f-ba89-18d0a2e85a95"],
Cell[188894, 3323, 945, 28, 115, "Output",ExpressionUUID->"25e642f8-fe67-483a-8419-01ea944d022e"],
Cell[189842, 3353, 566, 17, 55, "Output",ExpressionUUID->"e598e1aa-f580-473f-8d6d-bc20d158bf56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190445, 3375, 693, 16, 86, "Input",ExpressionUUID->"cde93f9d-e91c-4da9-b40c-57ed511ecf15"],
Cell[191141, 3393, 1122, 31, 83, "Output",ExpressionUUID->"1e6052b5-ee74-4e03-b2b8-748fb6175ecb"],
Cell[192266, 3426, 848, 23, 79, "Output",ExpressionUUID->"a02645eb-6a4e-4ad7-83dd-e6f4ce3802ab"],
Cell[193117, 3451, 227, 3, 32, "Output",ExpressionUUID->"eff6ffba-e3f5-4615-a037-58fdf010bf52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193381, 3459, 429, 10, 28, "Input",ExpressionUUID->"eddaad84-20e9-4c64-bb2d-53c32933c176"],
Cell[193813, 3471, 181, 2, 32, "Output",ExpressionUUID->"5ae677c2-338a-4e81-954e-0f0721a6dba4"]
}, Open  ]]
}
]
*)

