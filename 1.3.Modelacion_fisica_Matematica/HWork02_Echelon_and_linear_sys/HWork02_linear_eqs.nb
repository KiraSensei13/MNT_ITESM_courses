(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    282810,       5615]
NotebookOptionsPosition[    279052,       5553]
NotebookOutlinePosition[    279394,       5568]
CellTagsIndexPosition[    279351,       5565]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "I.1 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "-", "\[Pi]y", "+", 
     RowBox[{
      RadicalBox["5", "3"], "z"}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"25f139de-36b1-42bb-82ec-04c5a1b49cc9"],
 " is a linear equation\nI.2 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"], "+", 
     SuperscriptBox["z", "2"]}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"49298353-d4f2-40e7-9d3d-71f2f3e11553"],
 " is NOT a linear equation\nI.3 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"-", "1"}]], "+", 
     RowBox[{"7", "y"}], "+", "z"}], "="}], TraditionalForm]],ExpressionUUID->
  "ec38a27c-01e2-43a6-b3b5-4e9e4826cbc3"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "9"], "]"}], ")"}], "2"], TraditionalForm]],
  ExpressionUUID->"82aad677-5b3e-4936-8fc9-5cfb202cab6f"],
 " is NOT a linear equation\nI.4 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "+", 
     RowBox[{"7", "y"}], "+", "z"}], "=", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "9"], "]"}]}], TraditionalForm]],ExpressionUUID->
  "9fb4563b-6054-4cd4-9ef0-d76fda411e97"],
 " is a linear equation\nI.5 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"3", 
      RowBox[{"Cos", "[", "x", "]"}]}], "-", 
     RowBox[{"4", "y"}], "+", "z"}], "=", 
    SqrtBox["3"]}], TraditionalForm]],ExpressionUUID->
  "1863d719-2d87-4e66-88bf-347a7c2edab9"],
 " is NOT a linear equation\nI.6 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "3", "]"}], "x"}], "-", 
     RowBox[{"4", "y"}], "+", "z"}], "=", 
    SqrtBox["3"]}], TraditionalForm]],ExpressionUUID->
  "c38a058c-d0c0-4bd7-98c8-e158b78eb671"],
 " is a linear equation"
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7571089087424803`*^9, 3.757108990837979*^9}, {
  3.757109115264076*^9, 3.7571093554493885`*^9}, {3.757109622064633*^9, 
  3.757109622064633*^9}, {3.7571097426786666`*^9, 3.7571098071851835`*^9}, {
  3.757109893371718*^9, 3.757110048252599*^9}, {3.757110890715225*^9, 
  3.757110898701836*^9}},ExpressionUUID->"b33b15ee-2887-44c2-9d4d-\
81bf0f6c8f8a"],

Cell["II.7", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7571110228857937`*^9, 
  3.757111023994828*^9}},ExpressionUUID->"e6af20e5-8c4d-4a70-a64b-\
bbfd5c4449de"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", " ", "+", " ", "y"}], " ", "==", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "*", "x"}], " ", "+", " ", "y"}], " ", "==", " ", 
       "3"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "2", ",", " ", "4"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", " ", 
      RowBox[{"-", "4"}], ",", " ", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Orange"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"x", "+", "y"}], 
            RowBox[{"=", "0"}]},
           {
            RowBox[{
             RowBox[{"2", "x"}], "+", "y"}], 
            RowBox[{"=", "3"}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "\[DoubleRightArrow]", 
     RowBox[{"(", GridBox[{
        {"1", "1", "0"},
        {"2", "1", "3"}
       }], ")"}], "\[DoubleRightArrow]", 
     RowBox[{
      SubscriptBox["R", "2"], "-", 
      RowBox[{"2", 
       SubscriptBox["R", "1"]}]}], "\[DoubleRightArrow]", 
     RowBox[{"(", GridBox[{
        {"1", "1", "0"},
        {"0", 
         RowBox[{"-", "1"}], "3"}
       }], ")"}], "\[DoubleRightArrow]", 
     RowBox[{
      RowBox[{
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"x", "+", "y"}], 
              RowBox[{"=", "0"}]},
             {
              RowBox[{"-", "y"}], 
              RowBox[{"=", "3"}]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}},
            Selectable->True]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False], "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"-", "3"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "x"}], "+", "y"}]}], "=", 
    RowBox[{
     RowBox[{"0", "\[IndentingNewLine]", "x"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"-", "3"}], ")"}]}], "\[IndentingNewLine]", "x"}], "=", 
      "3"}]}]}], "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", "+", " ", "y"}], " ", "==", " ", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "*", "x"}], " ", "+", " ", "y"}], " ", "==", " ", "3"}]}],
     "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7571111075205765`*^9, 3.7571111483503723`*^9}, {
  3.75711122966595*^9, 3.757111342176156*^9}, {3.75711138386569*^9, 
  3.7571114567169*^9}, {3.757111642586918*^9, 3.757111701229086*^9}, {
  3.7571117518327813`*^9, 3.7571117763981*^9}, {3.7571682102871714`*^9, 
  3.7571682489714026`*^9}, {3.757168601425437*^9, 3.7571686102038355`*^9}, {
  3.7571705650686345`*^9, 3.7571705652683363`*^9}, {3.757170981648274*^9, 
  3.757170997330767*^9}, {3.7571712921384597`*^9, 3.7571712968761344`*^9}, {
  3.7571714681221952`*^9, 3.7571714807161984`*^9}, {3.7571715345882874`*^9, 
  3.7571715415896034`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"bf0d46ee-7b07-4210-aa5d-362dbddef8e1"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx1lz2PHEUQhnt6enqm52sdmhA4wCEkRIdUoRdbBEj8gAORee0TmUWMSY/D
QiQ+ckjtBSwHLRERXYpsjEx0EZFFhoxvu5/qFXtiZKvuXc3O1NNvdXXtqx/f
+vBTa4z58/z/JubrkhDj7+vVk/VfCyHGJ2hi/HG1+WshxLhGr/9HH+8tj/d+
XQgx3kwPWgjxgl6hiXHzteXxQog5vxX5rchvRX7n+jGaGNPX9hZCJP+Z/Gfy
ncl3jg/QxPh6+uIsxMyznIUYv0IT4xGaGP9N1yREeCd4J3gneKd4A02Eb4Jv
iu+nF09ChG+Cb4pX0UR4R3jH+Ea6cRQi6zuyviO8I7wjfCN8Y8x1MlIvI3wD
fEN8gSbCN8A34N+AfwN8A3wD/g34N8A3wDfEn9KDeiHC18PX42ePnz28Pbx9
/Dpx9ELEzx4/e3h7eHv4AnwB/wL+BfgCfAH/Av4F+AJ8Af8C/gX4AnwB/wL+
Bfg6+Lr4ZrqxEyJ8HXwdfnb42cHbwdvFKvnWCRE/O/zs4G3hbeFr4Wvxr8W/
Fr4Wvhb/Wvxr4Wvha/HP45+Hz8Pn8c/jn4fPw+fj3cThhQifh8/jp8dPD6+H
18dbKdFGiPjZ4GcDbwNvA18DX4N/Df418DXwNfjX4F8Dn4PP4Z/DPwefg8/h
n8M/B5+Dz8Xcs50Q4XPwOfx0+OngreGt49PEUQsRP2v8rOGt4a3hq+Gr8c/i
n4XPwmfxz+Kfhc/CZ/HP4p+Fz8Jn8c/in4XPwmfjYUqsEiJ8FXwVflb4WcFb
wVvFa+nBlRDxs8LPCt4K3go+A5/BP4N/Bj4Dn8E/g3+G9TWsr4HXwGvgNfBe
1InjXSNE8jXke1Ev0UTqwVAPZqc+TBx/efv8n5NX7hxcvnNgSr0pX/7cyTvp
RlPq8yrro/Wr66f1rev7FvoDdH6Ok08ubx5cUU+u+Pne6fP90+dOPj85u31y
VpX9dEQ96H7TetH9qPV0Hf0t+qN0NfLD95vL4kdT6vcg5dFIWoaxLvv/MfWv
/UH3h/YP3T+H6GfonHcjf+9vQOrSf3S/fple6GXK61761X/3uy/9QLX2C+1/
V9DfbV532wvrVvql9qfM7YV1KP31Bv1N+6/2P+3P2h9/Rn+GzuvUChysf1v6
cUpjvxXyKufBffq5nhfa7/U80fPgD/QjdHrMSSs8Fz+250/6+LQV7ivn1wvO
r93zbff8s2iHzr507Ift+annLZ+zH7bnrZ7Xeh4vd7Se93p+X0fzHMl1uD3v
db7IvnaS8M6288ER84nODzq/6Hyh88019DfoXAeB/dCz/qHMU+TBfhjKPPMb
85jOOzqv6Tyk89wh+hmavCX7NOBHX+bHL9ILexnyC8v89VoCG8t8tofW+U3n
17voK+hcdz37YSzzn87LcLMfpjIv6ryt8+RqR+u8rvPnIZp1kswxl3k15z2z
Hwa5l/Kay3yb98Nc5t81Wudj/X3yFP0Qnet8YD/o76eh/B5indkPizKP/5Pi
YmdeX+zM85fiSxM6A2U=
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              TagBox["x", HoldForm], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "0"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"2", " ", 
                TagBox["x", HoldForm]}], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "3"}]}], "}"}]],
     Annotation[#, {
      HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 0, 
       2 HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 3}, 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], 
       LineBox[{128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 
        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
        154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
        168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 
        182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 
        196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
        210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 
        224, 225}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              TagBox["x", HoldForm], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "0"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"2", " ", 
                TagBox["x", HoldForm]}], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "3"}]}], "}"}]],
     Annotation[#, {
      HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 0, 
       2 HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 3}, 
      "Tooltip"]& ]}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{2., -4.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->{{2, 4}, {-4, -2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7571683330865374`*^9, 3.7571686346506424`*^9, 
  3.7571705670220613`*^9, 3.7571715460156918`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"9e85def0-457a-4189-9570-dedf4a0cb1e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "3"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "3"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7571683330865374`*^9, 3.7571686346506424`*^9, 
  3.7571705670220613`*^9, 3.7571715460237265`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"0bc428e5-dd83-4299-a39b-e65d60f27617"]
}, Open  ]],

Cell["II.8", "Text",
 CellChangeTimes->{{3.757111035099138*^9, 
  3.7571110368724318`*^9}},ExpressionUUID->"0ce4c5eb-e894-4a9e-b387-\
d8fcdc5b5333"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", " ", "-", " ", 
        RowBox[{"2", "*", "y"}]}], " ", "==", " ", "7"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"3", "*", "x"}], " ", "+", " ", "y"}], " ", "==", " ", 
       "7"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "2", ",", " ", "4"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", " ", 
      RowBox[{"-", "3"}], ",", " ", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Orange"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"x", "-", 
             RowBox[{"2", "y"}]}], 
            RowBox[{"=", "7"}]},
           {
            RowBox[{
             RowBox[{"3", "x"}], "+", "y"}], 
            RowBox[{"=", "7"}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "\[DoubleRightArrow]", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{"-", "2"}], "7"},
        {"3", "1", "7"}
       }], ")"}], "\[DoubleRightArrow]", 
     RowBox[{
      SubscriptBox["R", "2"], "-", 
      RowBox[{"3", 
       SubscriptBox["R", "1"]}]}], "\[DoubleRightArrow]", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{"-", "2"}], "7"},
        {"0", "7", 
         RowBox[{"-", "14"}]}
       }], ")"}], "\[DoubleRightArrow]", 
     RowBox[{
      RowBox[{
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"x", "-", 
               RowBox[{"2", "y"}]}], 
              RowBox[{"=", "7"}]},
             {
              RowBox[{"7", "y"}], 
              RowBox[{"=", 
               RowBox[{"-", "14"}]}]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}},
            Selectable->True]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False], "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"-", "2"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "x"}], "-", 
      RowBox[{"2", "y"}]}]}], "=", 
    RowBox[{
     RowBox[{"7", "\[IndentingNewLine]", "x"}], "=", 
     RowBox[{
      RowBox[{"7", "+", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"-", "2"}], ")"}], "\[IndentingNewLine]", "x"}]}], "=", 
      "3"}]}]}], "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", "-", " ", 
       RowBox[{"2", "*", "y"}]}], " ", "==", " ", "7"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x"}], " ", "+", " ", "y"}], " ", "==", " ", "7"}]}],
     "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7571118276889963`*^9, 3.7571118388231883`*^9}, 
   3.75716830700319*^9, {3.7571685694024515`*^9, 3.757168581126265*^9}, {
   3.757170054283552*^9, 3.7571703448539696`*^9}, {3.757170555988784*^9, 
   3.7571705599239063`*^9}, {3.757171004787348*^9, 3.757171015900723*^9}, {
   3.7571713053128705`*^9, 3.7571713756158605`*^9}, {3.757171483760172*^9, 
   3.757171532088723*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9dc9ae44-a2a5-4704-9e45-025777255f66"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxdVTtsHFUUndnZ+Tq2UzpCAiFswqdJeiNukQKHpIkwNYmgi23ocCQ6hKhQ
nA8FShylhIQK2IQUuVeEFgU6xFpBoiApnXhxvOv1Lt57zhtLO5rV2zPz5r17
7rn3vJfPrZz5qBFF0dX932jkJRiaNvPF2f07ks78w635h4nNLlzavyNZbreW
2q3Ejh16sH9H8mR1/fHqemL+ejaWjdHrpcQwLxY8T8ynPY7lgX+Y2EVfsCF3
R9PbDVsjvkN8aQxfIW4Rf/vd6GrILYzG5zLnGzbsF+wjN0bbrjasjbjkMtYx
8iTfhjmdY025gDjJt0m+sXkatppyzhMT2zseYEq+sb23OLpSed/H2DycVion
kRfyycgnsuseVybHkUf70Z9n8irybD8RzxG3xvBdYupiv43Cm8/lCHSzv/yD
nHwj+9cFyGXSeUY29CuXGAkg34J8hgp9C/nD1x0q+Jbys+870A88D6XcdB4D
Pe98S4FOA/3U81jKl6NwZgYKfSv52OftKfhUzM+eQq8Jedvz3FfEPyFHPa6+
PnMBJmTa4+/rwOOfENRuXysUlmz7vF19xb87JI98nV3GP8l66yn0mpTvvX56
jH9SrnqcPf3c456Sz5xHV1GvU4y/q9ec95R86HnoKvSaklO+T5fxT1PPHUX+
p+UF12dH+x7/tCQe/44OiSNijIcFz58r6rzi+8JQB5WseDx5jZeIUfcV9cxZ
/5WgDnO7TD2gZ8b6rFifB5h1Z0G/H4jR15WAZ2ZOayasnxl0qaTpY8Z+qwS6
pXaB9YH+Sg37lgLdUlthPZ1Gn9FPStbLAWYfWqi/E8So57B+086yXpGnJvNR
sj8O8Bqxl8diWfsheJXMR2In2Q+P6HcLxBtjmL5joX/+JMa6Yf3E3vK6L2o/
hC6FvE4/u0M8S3yc/Rn8DDwL5qPBeihYH3GNl8fwEnHo//PEiDusHxt8pRjz
sxBvZPCVovYv8A9+Ehl8pmC9R+Rf1P4TMM+h2p96+KPgn5PfUHEu5bUfsQ/k
G/rPMvEa8RP6X/Af8M0Z356yT+RN+k2b+OgYniMO/voSMfuK+d3V3+nHwX+Q
t1zu038WiIMf/er2ldf+gzTkzEdP2adyhv4S/D/4DfuW521Xw3khxIgro547
etv9JKv9B7pl8o9/+FzniDeI13le3fN1t5mvjPnZ1nC+feL7/Ed+YX5H4Q+Z
vOYvOgrdM8l87JBviKej8IdU/vZ9tsgvJd8t6p1S72fkl8rXY/gKcTiPvyKG
/uH8fqo411N519d/Sn6pvOHzNql/yv7bpP6pvEi8yPMfPDb1fwYyGhU=
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              TagBox["x", HoldForm], "-", 
              RowBox[{"2", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "7"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"3", " ", 
                TagBox["x", HoldForm]}], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "7"}]}], "}"}]],
     Annotation[#, {
      HoldForm[$CellContext`x] - 2 HoldForm[$CellContext`y] == 7, 
       3 HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 7}, 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], 
       LineBox[{59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 
        74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
        91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
         107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
         121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
         135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
         149}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              TagBox["x", HoldForm], "-", 
              RowBox[{"2", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "7"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"3", " ", 
                TagBox["x", HoldForm]}], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "7"}]}], "}"}]],
     Annotation[#, {
      HoldForm[$CellContext`x] - 2 HoldForm[$CellContext`y] == 7, 
       3 HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 7}, 
      "Tooltip"]& ]}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{2., -3.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->{{2, 4}, {-3, -1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7571683344287076`*^9, 3.7571685827840514`*^9, 3.7571686285536976`*^9, {
   3.7571703219489665`*^9, 3.7571703471107416`*^9}, 3.757171549199447*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"121a532b-8bf7-4542-bc90-dc78d7c61536"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "3"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "2"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7571683344287076`*^9, 3.7571685827840514`*^9, 3.7571686285536976`*^9, {
   3.7571703219489665`*^9, 3.7571703471107416`*^9}, 3.757171549203436*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"7253d116-a095-4854-bc02-16248a38817f"]
}, Open  ]],

Cell["II.9", "Text",
 CellChangeTimes->{{3.7571110449518347`*^9, 
  3.7571110455661507`*^9}},ExpressionUUID->"b3a52e77-4394-4978-aa3d-\
9e5ebc5e50e9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"3", "*", "x"}], " ", "-", " ", 
        RowBox[{"6", "*", "y"}]}], " ", "==", " ", "3"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "x"}], " ", "+", " ", 
        RowBox[{"2", "*", "y"}]}], " ", "==", " ", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "3.125"}], ",", " ", "4.5"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", " ", 
      RowBox[{"-", "1.75"}], ",", " ", "1.75"}], "}"}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Orange"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            RowBox[{"3", "x"}], "-", 
            RowBox[{"6", "y"}]}], 
           RowBox[{"=", "3"}]},
          {
           RowBox[{
            RowBox[{"-", "x"}], "+", 
            RowBox[{"2", "y"}]}], 
           RowBox[{"=", "1"}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"3", 
        RowBox[{"-", "6"}], "3"},
       {
        RowBox[{"-", "1"}], "2", "1"}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     SubscriptBox["R", "2"], "+", 
     RowBox[{
      FractionBox["1", "3"], 
      SubscriptBox["R", "1"]}]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"3", 
        RowBox[{"-", "6"}], "3"},
       {"0", "0", "2"}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             RowBox[{"3", "x"}], "-", 
             RowBox[{"6", "y"}]}], 
            RowBox[{"=", "3"}]},
           {"0", 
            RowBox[{"=", "2"}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "\[IndentingNewLine]", "no", " ", "solution"}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x"}], " ", "-", " ", 
       RowBox[{"6", "*", "y"}]}], " ", "==", " ", "3"}], ",", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], " ", "+", " ", 
       RowBox[{"2", "*", "y"}]}], " ", "==", " ", "1"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.757111908545763*^9, 3.7571119221713314`*^9}, 
   3.757168310474839*^9, {3.757168595814171*^9, 3.7571686244511733`*^9}, {
   3.757170362002147*^9, 3.757170532368183*^9}, {3.7571705850330276`*^9, 
   3.7571707098282447`*^9}, {3.7571710191723547`*^9, 
   3.7571710194441833`*^9}, {3.757171499247845*^9, 3.7571715156344647`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2d2b09d7-3a90-4471-b971-9c5ac875d0b5"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxdlg1MlWUUxy8XvIJfKGkrMSuTUZnNabOa2Xmc5dQas6z14ebKkc0pktmo
qZnOOcu5pmSmM202VmZuzliY0zivjkb4EYjILgKCyId8c7lw7+Vy097nnPM8
Td4d+F943/M+zznPOed3H12R/foHXo/HU+L+aOUrwWGN4YsV8+dWzI93WAdx
bXVBVnWO12GN4te3nnPN67BGkf284h/Fut7prsU5rAOYO3WRax6HNYIzvI+5
5nFYI+LvEf8I0r9n3MGt4x5wLYxZet3ZMTylP6SGMG/eRNdiWP7IaNdCaPbN
GsIF7yW4FkV6jbcfD9A1gJcv6asP42Qdfr4Pb2/uatncFcZPILwewkEsoAXD
qH8XdAbxq0N+1/rxr4yOooyOXuvH2ovTzp53LYj3L785YfnNAN7V1xdBVgzg
5evHXQvgh1mVK7Mqe8Tvf71BeerG7IF9rnXjHspTFy6ihHXjFIqjHSkdWzvF
77ZoB66k9zZj/uzVrrUjuec2cd5L2vAYXQ34Jl2t4ldv31NT+q821NGvhxZc
Q4FXcfxZzZi5+CfXKvBA7hOuNUn+ysS/Ef2UoL9xzsn7XLuFU2h9h/eR0oCH
B0//MHj6BNbSOmbd3WfNPlIorpNAuyitxb3keB54/WqM6rRklwAde14V5/Vu
KbC/H0NLkvuXJF+D7W995to1TKP1rwN5F5QjpWdlLZTsfdW1KyZ+8S/DoE5/
XQPQ6+ddkPvNcr8IT/SMcK0FfpzcdmRy2zmTN7nv4BpKfDu8MTNt6cy0fO6X
gi6YRvvYi4/nrEjPWdENEylB28y5g+m8jycVr5tUHIBULeuOA/sH4SPSP6GM
EhOELbpMWwrFr8+sD09To/XDmU0XT226WAzps/QVhkNU75fkuYiJF3Y5ia5F
4EFqsDKgfKVE4BUqmDLQUR6ZHAVq/7kV4hcz+YaF255xLQZ7fKt2+1b5oYbO
KQZ/UML98DMVzB3IoITXmDiVyXs8NaZHDaNGrYfFet1Mj6JzL6mH33QZzYlT
mek6cQ3i7xX/RqD2XuBV53QYuxp5/7lexftvAl0N/Uvi1cMUiDnHBGXOrbBp
mWsJ6nOdrlNyjo7c39IKa6lehqlq3baX28TfJ/4d8BCdk089TwOwg+Pv9CmO
vxMu6dduGq72U0N3iX+iMue+8eiODUd3JCrWHs5bahL7pwbgSWq0JMUaEP8R
4t8LVdRvIxRrL3xD/TJSsQbhyw36xSMVa1D8RylTN8/qMZE/SrH2cb3ljFa0
/Zx+aNbpKRytWPvFf4z4h+Bb3UYlYxRriM8vL5nznxeGl6hsktXLpGHgfk1W
pg65n8cq7rsI0LG1jlW0/fIBeI0OcKzifhuQ9ceJf1T+TlH31mWSwxpASuuG
RIfVzNlEud+DNGazhzs0duu65P5wud/Fc6vc5yykeDqRxl+mz6HxUdIhz/vk
+Q48+Ps7rg1zaPzmt/HczksQ3rWipkZRRoLD52XmtuHtbctbrodmy1uuq0bL
W667xiG8bbS85bpusLxlDtRb3nLfmPlreFtveRtP/VhjeXud+tpvect97x/C
W7/lLc+VCjwsvH2B5tBVec7wtszylrlQannrpw+llrdpNDeLh/DWsbx9V+N2
QqHlbYQ+nLG8raT+PTaEtx5PnfB2OgW2Ewxvg7T+QTC8/ZS+D+SDOSdZHwxv
Z+lxv/Q8GN5y/xeB4e2vpBfA5Fnih1rhLXPvChjeUh9NvQqGt/9QHNfgXt76
oVJ4u5PyVAWGt7x+NXwvvOVzuSHrbzG8hfHCW/5+dRMMb7luGiAmvOU83QKv
7FvqDQxvqb3nN4HhLdd9s8zPWuC+aDHxmzyC4S33Yav838zpdjC8fVvjfHu7
9ZN+g9XC2wL9+oOdYHhL3w+XdUO68HY88bZb/HqsGt7y/O6xvCX/6oDlLdep
mb+Gt72Wt9/RfO+Fp4S3+6juzbyNWD/DWz6PPstbyndSn+UtYSvZzFsz10KW
t9yHIctb2vfskOXtUvr+ER7C24jlLWvE8pY1YnnLOsA82hjHPNpo5q9X3heF
94W/rFHLX1Yzn+Pl+UHLY9ZBjvuXeMU6OITPMfgPFoZBRA==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              RowBox[{"3", " ", 
                TagBox["x", HoldForm]}], "-", 
              RowBox[{"6", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "3"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"-", 
                TagBox["x", HoldForm]}], "+", 
              RowBox[{"2", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "1"}]}], "}"}]],
     Annotation[#, {
      3 HoldForm[$CellContext`x] - 6 HoldForm[$CellContext`y] == 
       3, -HoldForm[$CellContext`x] + 2 HoldForm[$CellContext`y] == 1}, 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], 
       LineBox[{109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 
        121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 
        135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 
        149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 
        163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
        177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
        191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              RowBox[{"3", " ", 
                TagBox["x", HoldForm]}], "-", 
              RowBox[{"6", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "3"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"-", 
                TagBox["x", HoldForm]}], "+", 
              RowBox[{"2", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "1"}]}], "}"}]],
     Annotation[#, {
      3 HoldForm[$CellContext`x] - 6 HoldForm[$CellContext`y] == 
       3, -HoldForm[$CellContext`x] + 2 HoldForm[$CellContext`y] == 1}, 
      "Tooltip"]& ]}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->{{-3.125, 4.5}, {-1.75, 1.75}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7571683365738525`*^9, 3.7571686261489053`*^9, 
  3.7571707162827234`*^9, 3.7571715512966795`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"bcfb0825-0b07-4973-bf2b-e4654c5d7fad"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7571683365738525`*^9, 3.7571686261489053`*^9, 
  3.7571707162827234`*^9, 3.7571715513046694`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"89779d5d-b303-4cbc-9ed7-9495fbf9f62d"]
}, Open  ]],

Cell[BoxData[{
 FormBox[
  StyleBox["VIII", "Text",
   FontWeight->"Plain"], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  StyleBox[
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"kx", "+", "y"}], 
           RowBox[{"=", 
            RowBox[{"-", "2"}]}]},
          {
           RowBox[{
            RowBox[{"2", "x"}], "-", 
            RowBox[{"2", "y"}]}], 
           RowBox[{"=", "4"}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"k", "1", 
        RowBox[{"-", "2"}]},
       {"2", 
        RowBox[{"-", "2"}], "4"}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     FractionBox["1", "k"], 
     SubscriptBox["R", "1"]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"2", 
        RowBox[{"-", "2"}], "4"}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     SubscriptBox["R", "2"], "-", 
     RowBox[{"2", 
      SubscriptBox["R", "1"]}]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "k"}], ")"}]}], "k"]}], 
        RowBox[{"4", "+", 
         FractionBox["4", "k"]}]}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["k", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "k"}], ")"}]}]]}], 
     SubscriptBox["R", "2"]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"0", "1", 
        RowBox[{"-", "2"}]}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     SubscriptBox["R", "1"], "-", 
     RowBox[{
      FractionBox["1", "k"], 
      SubscriptBox["R", "2"]}]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", 
        RowBox[{"-", "2"}]}
      }], ")"}]}], "Text",
   FontWeight->"Plain"], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[GridBox[{
    {
     StyleBox[
      RowBox[{"x", "=", "0"}], "Text",
      FontWeight->"Plain"]},
    {
     StyleBox[
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"-", "2"}]}], ";", " ", 
       RowBox[{"for", " ", "all", " ", "k"}]}], "Text",
      FontWeight->"Plain"]}
   }], TraditionalForm]}], "Input",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.757418868248774*^9, 3.757418900397895*^9}, {
  3.757418960500681*^9, 
  3.757418996259113*^9}},ExpressionUUID->"f0a150cb-6338-4ff7-8ead-\
938dad67757b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", GridBox[{
      {"k", "1", 
       RowBox[{"-", "2"}]},
      {"2", 
       RowBox[{"-", "2"}], "4"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowReduce", "[", "A", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"k", "*", "x"}], "+", "y"}], "\[Equal]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "-", 
       RowBox[{"2", "y"}]}], "\[Equal]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMin", "=", 
   RowBox[{"-", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"k", "*", "x"}], "+", "y"}], "\[Equal]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "-", 
       RowBox[{"2", "y"}]}], "\[Equal]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7574189245826626`*^9, 3.7574189313681526`*^9}, {
  3.757419090887212*^9, 3.7574190982850847`*^9}, {3.757419173503314*^9, 
  3.757419173966612*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"79b5e72b-b4fe-4cb0-ae09-da4a08ca91f1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7574192324992375`*^9},
 CellLabel->
  "Out[63]//MatrixForm=",ExpressionUUID->"28b8a3e5-6ffa-4188-9e11-\
d77fc8ccea2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "0"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "2"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7574192325029755`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"ae7a91bc-0fd3-4180-8efb-4f5a2081f9bb"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
8rwe/r4h5Ok+Xdu5ymZVu9zL1fVC/j4jOH/fEBx6+HRRz3nO3wOCHv6eCDh/
7wP20z2jY03R3Wx/CPh7cDyXJE/37DiOdTaeS/IP5Pn8Yl2O55Dn9dC9PC5d
/v7gpswfZcdrmoX8/URwusfE6ZGkn78nBT10n4iTl1Q/+fuh4EjXZPyLpvys
ItovhjzP4WecZzBRsbxvm1Midv4BHPJX1a9c6Fddye7ltaXLc0l6JNmJ/PIc
9Y3n/Hlj6OfPe4BDD28nf87H3vXW5fNZWWQ/zyXJS6qH/P0m1ENwXp6/9wR5
cL7cJbVf6Oc53csz/XHCZvYLIX9/mef8/ceCePdDEw+ycy88hzyvh78XDHlw
9cINw4Urkmk+Av08h36eQw/fvvh7rOD8vVdw/j47OH9vGpy/T4p1J+jhuaT8
Qj/PqZ/k/MbfLwbn7/8iXf5eKrgkeUn1AXp4Dj28/aiHPOfvUcJ+/n4ouKR6
i/rPc0l6JMnz981RvuC8/ZL08PdA4U/+ni84f/8UHHr4dGEPL8/fC0Z+wbdp
Kftvr28Suy/Ac8zr6T6FSvi22b3sBPw9AnDI83pQT3h5/j7L7JpQ2XWhcUL+
3gc4f08cHHr4dFEPec6fL4Ue/nwXOOR5+yEvcy/W16i2ju4BwR6eS5KHfp5j
HYPnkvwDeT6/WLfhOX+fBXokyWPdhuf8OWr4B/I8hzyfL6TLy9N5b05eUv2U
5AdJ9R/tkdcDeZ5DnrdHEke75v0MeZ5LkpdkP38+FnaC8/LQz8uD8/L8vBny
+H8+v+C8/eC8fnwfeXlJXFJ+JbUj6OE59PBcUrlLGpfy558xzqTzUZw8yp2X
B+flUS48p3k8N45FujyHfn68CnmeS7IT9vD64U9ej6TxNn8uGvLgfD3h78Wg
Pkjikvorfj0C5SuJQz9fTyRx/j4R7IF+nkvqD8F5v8H/vN8klQvyw8uD8+Ur
qV3TORduHIL88hz28+MTyPOc9gE5Pfx5EsiD8/KS7ER58Xogz3PI8+M6SZzf
R8a4i993Bqd76Jwe/l45xp+SuCT9kA/qq7rDp32ukI83wnO09/mXvs8VKZRT
epI4v9+XZaG0frizAsnznOK6cOny5/QgL4lLsl+SftRn3n7+vCX0SxpvY1zB
c/7cDuoPfz4KnOJIcHr4c0GQp31Jbl2I9ss4zu/ToZ7wcRLAIc/XQ0kc+eLr
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
wGnl5cT59+6hZ6n/6M81+oXCfxoHGek05hPn7xVSPVz+1CJ0TrbwsvriRSVG
TA++jzLqqplRzoWULn8vFdyl8zvHBgMRceo3ps90P+hdKVwrJ+eweTc73wH9
sAf8xfrvwtxbRdSfQ8+8qX7qw5wzhBeevbzrrNrE9sfa+m2kCz+7Xl40xaAs
T3hojOKLrzq5xPn7bijfn05bX1+fmsnetW+Tt7s5ZbD5nwyxdTvN8naFJ+RK
yE7wPR0HWu3VqhC7p3KoLm7STLl8YbRi+6/3bzUT5+OeYXzU/8QV9dCB1UIZ
i6M/ZB7WEefv+YIPXdx359Mn7H156I+9uPZ8jnUxyYNnuWgXDtxcIRwa+I9t
8je278fHf4N+zw0b250tLRf6iT7IfZraQpyXxzio/cbTs+9vqxIqzEvpnDSS
3VPh77FinBX0/q315YdyQUodH2suW1tOHO2oYuUKz/KFJWL3aZBf6P/pE6Xe
qFgnfPws2UBrCVvHRX/imZsv1XV3EfmBv/cN+ZNDl1eUzmwiO+GfY3LS14bO
+LefcL8u1/t0OXH+njj0l0QqtVpfqhX6LBc5LMqsJP38PXFwwXmjv0cWsXvW
8HPmHKnRPtWtZCfSnXDEQ3Vlzxqh/K9OnR3fsPUk9G+iVWW28nH1tO7C34sH
Pz7QQbh+I4uzBH7m6uZvFv95Jx36VyrMWnX63+8XOOY9vSKGmZnXNwnPpz5J
v9y+iTjvZ+h5tz/i4+xrsmL3k3a6m6UmldYIP1U0BHrfbCHOx7UDP75ba+Bo
KfaeOPTP+T7nuUZZgzCqxalm2q8W4nw8OtjpdvfKzdpt9cIbE1ZV5GuKSD/k
Nfy2bnl5uYn8w8fHA085ElA3c3uzsOiJ5mL7w5WkB/4vEnVYnWxQSeny74OD
J8duvavzhb0/Dj2/q3b91KxspfoGeev9494LZRSDuiXtOVA0r5w42kv7puF7
jr2vIw77381v+Gg0oJr8A3t0PHYmL5SrFDuvbdi3INLfr0rsXDbFo2obF73y
KwpxbEygOG/gqueuSM1W/EUc47RpQ4f02T/Sl+JZgXt3WhS2tPUeceipjfd+
qFCZLhiiGXBZuryeOOZTPe+XWUYNKSHOv0+N/l/xeifpfvVRVK9onuX3aN7C
hZGULvj+B5MDlC7E0jkL2GmeP3yr0Z2bxCE/6OegrxG1Xyld2FNpq+ypdIe9
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
/iMMrc9WUHucEjY2PaaxleoVtfc2PZsrdwx2/1hK8sj/iG2vfrvJNZD+IbEy
twZcYO+18fJ3Ps/tOy8nh7jjc+OsPSdjKF/oV9u9vWGd+vYncfSfKddfLvyo
lCwWp+HGsYHBxlq/xeI9YP1KU/FU/RN5Obbv18b3dz20xf8si99wspdDocPs
FEqXznu2yUf33Zb6oSeL0yC17XiuvksCydN3J2ng1OkPvlK7Azd1Tilb2S6E
OOzJThyr8tPlM3HYI1e+e2Tq5HSxuBEn1Va0DGvfQO+IoZ9Be0y0OBStv+43
cdR/R0/XV316/6JzCeDpXYUTf70oJXnUf23PpbFLf6aye/loF7auf/8Z/07I
rxMOmDn+zi9daaqf2za9mlVYnkb5Asd6xYxf86YEBDTTuH3N9skn/Vye0Puk
dP/gSGa3Gil/4nTutS3dvcZDe2V+ZPs84PtGLwqKGMT2V1dEO4//dNKP9ND5
3Db5yEkzxsQ9kaZ01177pybzeAJ7T7aNw35/t3PDQlSaxdapqt30+oTtYfNT
yFttDrO8U98ixuMGtDd+atZC8774YvnoHh+DyE7InzSW9ddod4s46sNwn1Vp
7i63iaPeSq+6/s1O2YM4naNpNu1j0fk6cWovWffXnoiPofz+X11XHtdj9oXT
Zhv7MNZh+DFkyTD2JSNjsu+GLNFkzShEmcEgW4xlqkFmrI2dEcOQ7StL1mxZ
akKLSioiohJ+//Sc2+e5n/vX9+Ppce65973vfc89555z2X/VptOiEVF+yg+z
8si2Fa3SHsn8Bx/rzMSgH/a61r0s513cLxd0rFlM3QuGeVUpuEK3m4PVPV/g
Y/0JdvjdZWiyOq+D793VIbNyxy3IEHxhiSkXP+y0kfunuD6cT4mYnLmlXwn/
6+jNXgGlist9TMCh/4gPFwIich7Iegg5PXuPuxn21U357oMfl7/470fn3sp7
tOevzs73O6n7syB/VY2XgVfnFpP7p8C/sapGrxtvrLW6fXivG66YN/1R5O/y
PmIc9pX+p9R3jVQdxCtDX2UOdlZ1uSR++K9n3Wi793KvIvvbAweVf7j9lbIb
/Rq3jVkbn+jE9hvzMQ7Ml/h54Xvxvrp3avDrXAvHy4Cb+NCf5QNnfTDOzGd/
PuRLHGphwfWKP95w4rgV4xxfgByJBxEfOPNhX7GeHAecmHQjyz9H5buzfBMu
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
xfcGL7TV6jnUOlTiZZ9f1HcWeoaN+GLyjK3KPwP87ZGrN2rWUv4cPN/NnbdV
uLBR+Tehf2DAzltzBqj9LPCRabfPNfJQ+27k78//crX9m9sRsu5gnEOnVc9d
XVnto9Hf25kp4f3S1L4Y/bt/9XmyV5E6q3KP6a/hx4t1L3KPdOF743Iru+35
tro/M3R9Vd8aC2y179Th1Bu+K7+z0+yQ7E9Sz1Uu8lwgb2bWkg/um6w1e8w2
ZMVun3lq/F+Hhfc+23e/5r+239K47MGfd2nxgDG9VwWV9biufc9u/ubr+XD+
Lc3fvWOH4/XFEde0+EHId0PmWWWe1exRWzv3wDH9LmrfsynHn/W4MPautq/o
v+FtvvfBUK1+857s9ROmv4rX6iVXD5rTeWbxBK2+vtcC+377dqn7/oCvrrNj
0u3RSU7sx4x+PnNxqMsDweUeyzmVvppul6Ddz1Ah80b7B4HXxH+D9j/rdHZ3
226RTuw3POq4rNuFgCvi1xE7qv/pNT37Xhcc8gPPhLmXdL3lxH6uM3mVls70
PavdI1G/5ahrL+fe0e5ziJp97rpbB3WPAfqxekH+2I0L0rX7CubmDx/mmZ2m
3XswzO/LP+9l6PckzHeuWq/nRHXvAX7/aHPojXOBqrOO+Vqq/b2IxNnqnkS0
+zasRt0fA9878XsyzHnyrgl134n/Q8bpU6+s+K8/yL4Z8s7eHfLE+6CKP4Nf
4/7Aqvv7vxE5GJ9tf9c845CYLTjGufvakouCG+RrfrST1XaHet7OlX0bnleJ
E7ucytgXaPexOC6Ievr8yBvNT3ezqm/u25APso7LPVoet+Me3vug+ZGbzem0
IyGwQNqFPs0Cix862Uf58+SeupgHT150ydb8ni0DRnUKCHmt+Ukj1rgNsp2b
rfk37fMvuX4Mf6v5Sce/i2k69gu1LkN+VpJHp6TaeVod9zsJr77YUj5T3Vtd
KGeZz85uVtMy5Hmhv3cGtvAaGKD8HMAHdhka3No3TXDo2dF+dYtsH+VHgfy9
P7W/WNHpqeBSr+yLkl+1C8sUHHK+HeX1wdpK3X8lcZpin32c76P8muDXHlzm
3TcpiaI/+Ekd/ug5tHOydp+A+9KtVQp2Z2h2cNe2DhdjZqRrdvP7x9FN83Yk
aH6Zv542+fyZfaJml8+vV3ZFUs4TaU/Oaa/u37eMvVp3gH+sHBjiHaj2FXJ/
V0afGpXsMiy83+v00vnlwVJW2j7/lx2/3Ru4T/HkvEUZv5GzG7zV/B1VAi3r
unhman6i6VbTfrXMUvdjyH3pH4d4rem9Rd0Th/jTw5lRnRMjtHtO3L6p6nVr
pLpPQ+5XaFFnYFbGWu3+kwdz/PcEXvpDu6/Do9aa4MQ927R7S+KWlv0068wj
GR88B/cGIeXSvlfncvB8S2fGtr5durh2f9S7WY5reh1Q+1I5n2+JSy07T/kf
8XtxcvzYHbtUfjh+J7pUqzWruPIbgs/330EvxtEu45DH9+uZcOkv4egf45g/
jENPxk16yn25hEM+33sIPuMmPvRhHPrw/YmQzzjks56mcTM9R+B8r6LU2yQc
evJ9i+AzLnnEJAf6M9+ESz4+yQHOfMm/Jj76y3wTLvnFJMeEo12+117u7SQc
6xbj+OV7SE04xoFxqfdF8tE/5sv93sTHPGI++sW4qV8mfUztYjxZPp4X8/Fc
GDfxTeOGecs45jnjpudu4pv0RLu8PoDPuOxfaH0AznyMA/Mhn3HTumTqF75j
jOP94P7KPduEg89yTPMQ85n1NK1vkvdNuNQtdOr1YP+zFM1PyjjGjXFTu1Kn
gnC5r4zWH6mvS7jUvyU5kufO9+QW/j/tnlwDDjncL6mXSLiJj/4yjv4yjl/G
Tc8F7y/jmLeMY94yjvnCuNQJJBzzlOebaR5ifPh9hDzG0V/tnuVC+YzLfYDU
LuQzLveJEI5flo9xYD5w5uP5Mo5flgOc+fg78+W+XLJz0F/G0V+2f8BnHHzt
/ujC8ef3C+PA75HUnyE++sF8uR+ScJN8yGE9wed+QT7zZV9GfJMcEx96MY52
uF38Mt/0fE242BUfGvtW3XBWux8v/s+fox4/V/cuYn3Y65V4wa8g3ontzFUO
A4+NGX5Xs0s9msRZN0g/ot2H1uz594MyXe5qcYv1Q5ILYur8p53n3u9Xd/9P
e5O189//e5JyuN+Ce9r9bGXan7zw5/tY7fz0+LKRbWPLxGnrw4tqWYde74jW
nu+jrNFBdp8kaPPBOvVT94zmsdr4+/RIC1595LQ2/0cf3ebU2+WY9t6NKTXt
/PJ7x7X3buii8PXXIu9o657z2mJnc9bf19a9LfOdRj5umKrNt0f1fV61zozX
5rl7zdDmteyytXk79Pv2L3y2vxX/DP7u/G7E3clj1L3Vcl9PRNXg0T++Ej7a
2XjsVr8NEXmaHTveY9Xajn31+9J9okddWdrqtWbfxu4qSKpfN0+7p33h/3JD
Up+pcyjyfQv0C6nQ95l2nrtqyvycBlMytHsdK7q3Wec+IUfbF3t3drfq1/aJ
Zi+5+t9uW25HimaPrd/xs9ul/Sr/BO2eLuPW/NrwPC3OlzNltSU26LUWh4sJ
mu02K02t45jPtwd3Cv3gnazFfSufty1hNzNVOw/k0aTf0k3vnmh5HVNmpIyP
H5akxRG9t4RNa1pC2TF4nk+7Hh4/2Eqts1KXsqLrnxOn39TskNITN78qv+W2
Zofsqbb1XcuGsZr9k/tbyU15U+5q9tKlOROjljq81s5L5T0u7vnkeK52ni/t
i0e7RpbO184zzW7VLH2ol/oeg58bu7dcSDPld5C60yc/WbIk7KH23Yku7TGg
bct92ndnVPuFg6OH3NXs1RZzyx/Z7rtT+6593Bj4xfmKh7Xv0cStXYZNf2fR
vl/ty/v/GN/iqmavJmcs3LA57KZmD8/r0Kf27DyVd4f506rBOl+b7621vI6x
sQ09MsLUOULgAcMSeqRbKz3wd7sZ7rsXuao4peQl1lteu7+VlXYe7syV0G+8
Ps+x8P500Lv4MkO7qfdN8nlOrDy5daNaj8SvNutSyS5+ah2XesJRQ8ufvKnO
5wFPeRjvMdlafW+A/x8gs16x
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1:eJwl1HdsVmUYBfDbwgelBRFsZBe6QKBQRhEZdZQKKKsLxBV3FYUSBDWuP0gw
EQX9w0GiCWhAIAyRPQwgUDai0LJR2o8lgYKjNIUi+Lvyx8k573nP87zPfb/v
3uTnJxaUxAZBsAbqwbzIbf4On4sJgig8LvBYQhCMiQuCTk2CoBJfkKkIGS7R
UTxGphB3lClpGAQZ9YPgLD7Pq5GpwmfwRaiECfY6yURxljOGQS8Yqc9Dsu31
iW0QBJtkY3Bgr8Y86fhJeAKeggL5YfIp8hP16q7nGZyspgt9mj5u/5QWZ/F2
vAtqoUh9YdgDOstnyp+Tb2DdEPJgtP4F6tL1r6DXuZu4xkFwlLdej534F9hH
H8NFMvk4Tf5Vvdrr+Tt+DVLpU/i6Hqvkr+EhzsiHweEsavPUpqodL5cuX4Fz
7Q2CR6Eu3jm8GjPskN2gzz4cmL+F/FF7u+Ju/6a78Q1nJPIP80ep/9cd3oTD
9o7JHMGd+bd47fAIMzzISzLDW+qG8p/FY3Ah5MMU65fwZNxaPiJfX74lHUvH
0sn0HXSEbkXXo+vRo9V9BPsgB0bAbugtkyKTIDNX3zW8b3BPfhI/nj/Leg5/
LX4G58JmuL+RrOcf4k46yifKN5JfLLfN/hL8D7+UzpbNw9NhOBTBm1AAb0AJ
jIc8+Vx9kvVJcy8p0AXaOqfKvbXBo2QGyXSQmaqmr/338QDcH/pBe7k/5ZNw
hnV36Bb6kAwdoI36AeFvaP5UPZvRDUOP1R+m6Hne73jTy7k3/C9Zvw4zIE2+
uXyc/LvW78A0mAjvwQR4RI+hMJlOkW8q30B+sPOKzZXoTobzs/nt+E14Se7s
hLPm+78td+4uvAUn67MJz4/8/5cLFuFUnAYpUBz+N+3vxgvUrKQP4oWwhi7D
i6CMPopLnH1Co0Kz9FGfBdnmnGqWSpkKmT3OKODvxR/y/+Cf5n9An6Oj9NP6
LJLZwtvDS6dL8Wo1h/Bm84z1jGPt3+MZo/w6/h7+J7LjYRwc51eHz8ufKVvM
2463wmf0MvwlTKFn4RfkLobPiKvVNnFvB+iv7L0tswK/aH1Fphy/DAkyZXi9
vJGChXij3Nf0D3gbLA3nxz/CXHpD+E7Dt/Q6fEVNRJ/9+qyyns1fjS/yY/g/
8/+m5/EL3O/39mbRa3E5v8o8O2XGQTv5k+F30j3+hM/4Lb5Qs93v8DnOgeEy
1fayDdxHj+buMM6dl+p5yfoWHKEP4Qdk+uFEmUCmmz4xOAN3hS7hO6znr3pm
yQ2U742byefyR/KvOus0buv9iOJy+/u1O4Dr1F+FaoiovSB7w8wxstd5teE3
gd9X9i49I84uV3vQegC/F76Tv8FZZXrfa51Pj6Xr9JoEhfQNvNSd3Ec3VrfA
vVkGA2Vr1Qzix/Ov07l0Al3srBkyi3m95JqG3za8Ve1Jd75VzwrZRmY9jn/T
cBvvrPmrZC/DFRitRx7cTSeGZ8jEhN+0sJe6TP1f4TWlr+GR/Hy6ll5Cl9I9
ZHY4t3f4XvFa6dUaWkKNvRa4Dj/s7Jn2s8y+1Po5+enh8/E/Dr9fzs+0t0K+
O54Elfwi+1HY6My68HtJf8r/i86hp9GX6W7yy9Vm4J6wku6Bu8Ky8P+AZ5t3
FT0H/wekOxj8
             "]], 
            Polygon3DBox[CompressedData["
1:eJw13XWcdVX1BvAz79y5987cGbq7G5EURESlkRAkRDBoE0VQUEHFQFTsbn8m
oKggICFIiTQiLd3dKfl7vu/a/rE/s9fZp+45++y91vM8a8/Se31oxwNmdV33
w37X9fL3oemuu3Gi654e77r7p7ruqZSpNPw4bWcOu+432e+Gsa67KeW3qW82
2XUPpP7H1OeY6botYv8n9iGDrpsz9qM5/qGca88cf3yOfyLn3zdtj2fb02nb
eLLO57zT2f93+XtH7LNzzVfZP/v0U/+/HH/KsLZrvyflnF5dz/WfTHlz6g/n
/Lfm/p/N+R/IsY+lzMp+38/xf8zxJ+T8z2Tfi7Ntzdir5ZgTYl8Y+7Wjrvt6
6t9J+XbKj503xw/S9qscf0b2vz722Tn3/LGPS/2fOd/D2e/RlH+kfnHK46k/
kXJJ6pemLJIHvGjKZalvNVnt9tsm97p27NNi355rbJnr35ltZ+X5XDVe5386
227Ivrvk2ru6v9RPz/53ZP/XZdvek3V+19kux+4Yeyr2TMouqb81ZZj62Wmf
P89389i35PjHUrZMfZOUm8fqnv53b+xb2294NOd8JOVB79HzTP3OPN8Xc38P
x358urapP5JyQ8rVaVsvz+fg3N9uuc/X5zwbp7w99T/lPu5O/a6UP/fr3Lfl
fM+N1zUuyT5Pp+2FlEtTfyDt16b9sbTfk/b7Up5M/eCc/3s5/2XZ56Xsu31+
41j2e0t+wxk572vS9vo8r+0939jrxt5oVH3k+rHqo/rOPTl+mRy7XMq9qW+V
6/09+4/H/luutW32+UvstXL8hjl+y+nqN/rPaWnfLu0npX3tbHtd2neLPZ1j
5015W+pd7mmH1LdIGU990/bMPeutUx7MsZuk7bmcb9uc41H9IvbLsbePvUnO
eWOvzvf27L9DylnZZ4O0bTyqdzxX2kaz6t2/UX/J/nPE3in2G2Jf16s+of3x
3PN47J/l1k7KOT6WbY/lfG9J/a36X9rvzfPdI+1HZduV2ff5PKuxHP/v1K9J
GaTeT7k69bvzPM5Lf70+xxyS/W/J8TemvlWO/1TsW2PfEnuz2J+OfZM+EnvD
2IcOqz943977+rH3zf08FPtTOedi6a/P5p7uyj47pG0n9Vzv7LT9K+c4KNtu
z/nuSH3jnO/jse+IfWfs18f+Qux7s/8/sv8942XfF/uC2PeN1++7K/s/kPp+
2f+r7b0aH7r8vitSvy3tt6V9u2w6Iu335Pjzc/zt42XfH/uavNdHYt+dfW+N
fVraT4j929j75ffMn3PdlHNtnfvf3zvP+Y/3m7LvpilfS/2kbFs3bd/MOd+b
a/0755zTs805eqnvlO27TNd27R9IuSr1o40BqV+Z+hxp3yzl6JzvlJxvvZzv
K2nfp6t97Lti2hdO+72xb/O+PLPU58u2FdL2k9if6moOMBdcnutfkN+ycra9
L22/TvlsV2OA7/7StP8t7Qtk215pe3/KH9P2tzyD5/N7fx/76LTdnm0LZP/L
sv8/sv+K7Xw3Zftn9I2Um1M/Ntu+1tVv9Cx+lfK51G9J2/zTdc/u/QHnHNY7
2z/1B8frXb4vv2OP/PYP5nlPpu2H+nhXY4ix5OXsM2/aTsm2C9P2z5STU/9P
yvWp353yuGdjW+qr5phl+rVN23UpfzMXOmfqz4/Xu3DPxsQ1s/99+e2r5xr3
+X5STjV3pFyd+ku5/lJpu7zZ3x/WWHZd7u/BHLtSyry53k3ZdkfavpNyYOrv
TPlu6t9O+VBXfU7fuyTnOyvXXTrb3pO2n6YcnvoNaZ8n7V3ewTLGqvb7jJkf
7Wo8NZa+krJc2m9ov+eGlBtTvyzlitR/lvL5rt7RL3wf2f/MHLtY7P2GtU2b
9zhvrrdrys7ZNoj98fS/3VPmS/8/N79pwXzPn8/fHxl/zbfZ78Kc7/Sczyfn
ezFmzpP9555VY6kxz9hnTN15suaKL2ffBWOfn3O9K9vmnFXv2Lt2jGPPS9tC
ud4e7fvzTDybU/W/XHvD1BdN+z9in5TrG6r3yLbbcv+n5/39Jdt+l7bnRjV2
b55y0GTZD+TcO2bfnVO/Pfufkf1Pyf7HZP89s89C2fei7PNmY022/TVtc+b8
78ox/80xL6btbam/bVS/yW87J9sWyP2sFPsPeRj/zD2+Oe2HxH4ybW/1/cd+
dxvvD881F5mpZ+/9fKV9Q9fkev9u8+9HcsxvU47qyifiG12b9ivTvm62fTRt
v0z5QlffmG/td8N6vp6zuflf2f/i7L96tn1If459WexVYn/QM8i9vS/196fs
kvrVaT9xfPa0130g7VfFPjm2ruj5/DPltNjzxX43n2ay5i6/yW8zZ5m7Ppn2
H7cxz9j3aJ7HB9uz2GVWjYmeCR+GL3NBtm+dfS/K+c/I+RfO8fuk/d+xr4id
xzX7fV6Xcl4bzw5ux/PdHhkr3+gjKZvm/FunHNzm561S3zblkdQPzX28J/u+
M+VjqS+Qfd6c+idSXyrv596Ut8f+QOxFU39//u4ae7e2bbX2fo9LWT31j2fb
28bqmA+lvqd5YqzOuVfqu7t+6u9O/ZVB9Y/jY/8+ZeXUP5rt70h9v5RPpj7n
ZPlajl1yVOPhXrEP4gPk9y6Y9vfHPjplaf5y9vlG6t9I+8qpvzN/N+cbpbwr
9QPdU+p7p3wk9ff3yz6wja/365OxPxx78dTnmKxjPZslYt83qmflty2W+q/0
kdhXpfw69TuzbZPU9/AsRzV/rNSVr7hg+9a+kvav9eqb+1L+vjX2LilfTv2s
vM/l+Sa+ybz/p/J351nlQ/Gllsj9fDH7fiX7rpjzPZRyVDt2+dS3nS4/nB+9
z2T5JHyTg7PPkmKL7PMh80nKQrFfnXJs6r9LWTP19+Y8m43VM9AHVsm2P4uH
UlZNfd9s226sfuN+qd+V870l9W1S5jK+5R43Tf0daXs573dvfmDsN7Vn8qrJ
eva/SFmDvzqq375DyryTdZzj39XewYp+R3tXq2ffz+bvx2Lv1J7BSSkXGF9S
Tk59nuy/M1875bWpL5/y89S/n7ZVR/V7/+JdxX71qM5/TOyf6Muxf5O/Z8Q+
UzyY+nyT1dd/mt+1eZ7r9/iasf8v5QepP5Fj/pX6FSmv826y3/fFW/of36Jf
8de3Yi9i7Ir969i/SvlS6t/N9q9pT/lRr/az/9dbH3b891L/bsrnUv9m/n41
5YeuL84ZVbzF5+J7HdX2/6HvNddbZrLOJfZbztgyqm/rA/z07P9o7J/G/o53
Par7dv/faNvWyjF/9Xu9u7R/Ocf9Mvap9h9W/7829hnej/m8X8/Pc1wy9ndj
n+f7jr00/zh/L+Yfi5dS/0raf6s/+J74D/16n97r8rGPzd+/xT4r5ZjU12n3
wyfkG85MVt+6KOWv+Xa+k+3nj9U1Xfs1k3Wsd7nWqPrzn2L/MvYasf/huaZ8
NuXfY/Uu/Z5r2jtdf7L6wunZf73s/9Wc8+TYPzc++LYmq+/9Ifa64tlevR/v
6Zup/yT7/8S9pb5S9t9gsn67vrpO9p9/svr631NOmarz/YjvOqz2r2a/L49V
n35Pr77ti1sM7ht/f8rVsd+Q/bfN/psZs7Lfcfnm3zFZ87HYearFW89k31fP
qvnHPPRMm392TXm2jTmvNw62sahvXhJ7pUyI90bl+/NB+CLiPPGeOea/vbof
secqKX8X33oHqT8uFuXrpX312NfzAXKtm/J3vdirplzTL3xgndTXmlXz48Mt
fjQGPp36ByZrvzfmXNuNCv94Ns9mhTZm8jH4GmISscl7Uq7I9o2y/zZpe0Q/
zr6rpTzcq5hF7CJGE6s9mX3+L/aqw3qfz/Xr2XhG5uqt2/wMcxD7GhOMDcYY
Y43+9g3jdI5fc1T953uxlxpW/7vcvGeuy/lm5XlukeN/kfYrs22j7PtI9lmN
75Ztb5qu/vKD1JfJ8Wun7crUl55V78d7Mv78LNtWG1b/3CDlb726P/P/S/yu
WfVMpybKj3176runDFN/kxh7snCrN7T6dWOFYdnGv7PvHvzTvM/n+3W88/CL
X5P2M3uFscAB1h/VNnXPB/51Z9reqH+kfnT2/dJYzRn79+r9LJm2pVLeN1l9
Qt9YM/YB5t6c6xZzaex3TpZPfEhXNl950ZRP5lyfT1mc/5FjP536p8xfqR/S
r7pth6b+uZzrE2PtmF6NW9e27943/oWUw8Zqjvx0r3xsvtscrb9/Jts+MlY+
x+G98tH4anxkvvL204Vb8TuPGVYdlsUHtW2pNn9/0XgwqmcOu4HheBcwM9gZ
jAvW9anUD0jbR1OO6JUPzhfnA/OFYRKwiYPSvkj2P7hf86N5cq72HesvnvHd
vcI5vVvv+MaUxXLM4fl7R47babriW7GF71us/+Contum2f6W1J9Juc1cGHuH
UR3j2Ndl/wObv3m/7zDtO6b9nn59277xe1P/cNpvNvekfXvxwnThQvAh/ulW
2XZrr2ImsdMzqW+U+vopj6X+tDgr9Q1TnuLbZf/rexUz6Q/n5Fxz5/7nbeOf
+7XvBjDDqbr++u3YHVr8sUz2Xa4r3/3Wfp3fdbYY1rhl/Doiz+iJXvnwYrM5
Gx4Fz/EtL55yZs5/ZPY5cqx8sqN6heus01V8Ik75QYtXD0o5S3zer/HdOL9N
7OMavgF/gT/CJeATR4jXJ2o89D37rrfLvn9IOTJtd6VtwenCUMTv4viLB4WZ
wE5+1fyd9XL8IPZrYj+c9nXFsbE3iP3QoPDbU9t8//Ko4vWP5HxPNfx8Q35M
2hfmX6V+T673jbS/lPZLcvxDOd+Wub8Xe4X/3dIvX8xv9FuvSlnJXNPmA/3j
Dc3eOvad/Xrf3vuW+m/O//V2/ksH9d68v43aO9IXL8y5/9KrPqnvbZa253vV
Bw9t48GTverDzr9E2h9o7/eIQY1Nxqjj0vZArvfdXA95cFna1sq2Ofh2sR+J
/c4cM09Xz2uY5/Ny7BXS/vrst26e/1b5u07s7dP+TPbv87Fjb6FfwVrzdyz2
Vml/Mu1ziR9yvm317dgbuj9jKd8y9p/yzBcaq2f+X+Nt2udyvbQ/lvaTJup+
Ts3z+Xvs16Z9MXNT2h8dFAYHi/tZ83eeHtb5HT8Qu8de0fXM09N1Ddfynkdp
X8nzzfkX8a5zvvmN57HXjH3/oH7PKPuvF/uBQWFYsKxVYvdy/Nxpvy72m2M/
lfZVYt8ce+XY98b+cMrLsV9JWb1f97e4sTDtUzn+wNhzpO0NsSdjPzas57dO
7L75fFj3AqOCVf2JD5r978tzWSj2X2L/IPZDsReN/bfYv/H95phn82xP6dd8
YF5YJ22fGBRW3ks5tV9YO//iol5h7ifHfnmsMHo4ujHGWHP5ePlecEH44H9j
XzQoPOKLsZ9p/A0s3/xhHoHpGwsvi31ir8bEnzf8At+DnzixX3g13Hq9YWHl
8Gq4Ncz85l5hJZ/vinP4V7/GIj4GHP/Tg5pbzQF8hyta/7+rVz4R3gX/Iga/
01zYL98Nh/Cffo2p5tpb2lh7Xb/8J37Um4ble/qeH+yVD/re7H9f8034kubs
VWGT4zWX+/5XbN/fxsPy5cwPD/XKp9uj4SUwf74mn5XvCvPHHcDYYG2TMJX8
tr+LEXL+mV7xb09PlO/LB7467Y/A7WI/ketfFfuC7P/X2POl/Xn8z0RxaTi1
K9L+wkRhqTDVa2OfbR6PPVfs56bKfg1cKud7JvZfsv8ahou0X579n4l9fNv/
mtjnZv/fx5479n9hZ8O6nusu1vqj8QYnh5t7fKK4Ofa/cvyZeT73i2d6xSeY
c8w95jzciDnL3HVp7udNo/KB+EI4n60afwaPurZX3MlzOf+f+U+xr8/5PzOo
udGcZ+57eKK4URzpv423uea8Od+WsadHhdnCbi/PfktMl78lfvpj2jdL25MT
9bymY185KLyUL8OnGcv+z/KB2vg3g1+KPd4Vx4ZrE/PDHmAQsAAxqPhUDCU2
PbJf8bc4fOEce1i/5lvz7jyxP9OveFpcvdCwcBp4DYwLNgXzg/3Bgl6E5fQL
n4BTjKXtHf3Ci+BG3bBwJ/gTzg+W5TjHr9DVPruJRdK2e6/wDjG72FkMLZYX
A4rt3ZPYEP5xYuo/7RWesQJMJfbBvcIfPt0v/5ifvMCw4kzx5p/bGM5/5At+
wPgzVfH5/mOFlb3U4vPfxP5xr+L/I/oVj7r2gsPCJ8Tv8AF4BMwBlvGz9syW
5YOmfkiv4v29+4XtuCf39jbzdfu9Lw3quq4P04PdfbBfzxquOJ3zv6dfeKBn
PzMsHA2etnnbB0+AL8CBXjgoXNC59m/3APeB/8D8YHT79osPOcD8NSwMEtbo
GrBJGBNsarv2TvfL/ruPFX/SNz71C7+073BYmDHfbKNsm85v3yvt26e+T9rH
h4UzuvY+7R19ZFBYFczu3dl3Vo5ZmZ22efO8ts62tWPv6HvnW8RePfbOxpvY
+/cL3/SsRjn/G/rF1eHsXkz75sbDtO+a9hcG1b98C3C5Xvb/+rDwaTj16/I9
vatfvxUuN4uPHnsD/krKTv3C8GCvW7dzHDQoLPC1Ocf5nn3sQ7wL95T9P5rf
80qvfHK+OS4V3wsAx6niLl8f+4VecZiPx37LrJqTzE17ZttCXXE4uJw3Z9t0
8w+eHRRHtnJXmDXuDGYN24fxw7Jh/AvG/vt4Yf/viJ1TzMbgYfHv5Z90xdHh
6uD/547X+Rz/2UFhweZYc+1vJ0oHgr88rflvc3XFYeAyfj0xmxqdrU+gU4Dh
w/JpImgj3j6cTTnNxvhh/U/0izvxTDwbHEse2WzOB/ezL/+lK04Jt/S7idnD
yGz+BQ+ze4xsns3R4GqOnSj/Bt+Cd9k77Yt2hfnD/vk/M11xDriHD8MBuuIA
cAE4GFwMDgOXMcrNrJvfvkN+9Ny58Y8Oqm+LQU6ZKAzY+9cP3jhdMaPY8ZO+
6+nq0/o2XHp+32u/4mFx8dyxP9yveFRcOmfsE3LNw3oVa248XZgybPkg/ST2
nvm741jFpGLTA1LeN1bHzCF+7dfYSlcxn9inX33VWDvvsHBtsdSR7Z5wMLgY
HC4uFy97furLZ9ufJqpubDZG43n0Q/1xyZRzxovjwfX8M/UrPP+pOta+uKED
hsXl4nRfGNXzXLv58/OMah40H87Np+dD9Ws+458+Pqh52Hy8bMpFqW/T/OOt
+Q/m01HFtmJcJJIYny9zW69ifzEvfpBGQiz8wrDiM3HaK7j/YY0Xxo11Yr8U
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
+nTzB+VsyyM35hp7jbna7QdPorHDreBYcCR3jIqrw4HgQnAy5ruZfukV8X/7
doUXyLf9xrD4QPm3c01XDir/ee9B4QkwYdjwJQ3f9Ze9e3ueNPD0FnQXtPG/
GVZ+p3zX+aZLL3lJV/E9/lJ+7mFdxe/yO+XMHtGV5lUOppgcdgHDEKvTiNCi
0qTSjsj5lPt5bYv/aXzpmeialp6p+YC27+O5p7/mmmdMlX6Pjm/umcp5WGNW
za9yIeRk0+XT9NL2yjmQi0BzS3srf1EuxI4ph05WTCP2Wbvp5axpQGdPby+X
Qc7obrNK+y5+MqeYW2CCp0/VHDJ7Lkk5d6pyHlzPdeUKOs7x1oigpTdmGjtt
c26aabl9cvnoNeS/WzvAb/Rb5VjK23DPh7T5iXaHhgc+TbNCu3KgoGWmNAO0
A9v1i29+qe1P47RrvzQqtCr6jGNoVHDCr037DvrrVM1ddChjM+WP0uLR7O8z
qBxT6wbIQZV7SrMnHntqovglmhnamT9k//cMSmMnPjx5ovgoGvKNZ1X8cE/z
7+9q/v+dzZ+nC96o2bPX/Mjx/5mo/G/jCS2xMdEYTpNpPNxvUPmkl7Z2mmbc
1OVt/P55V2MyPIGW8MNdxYziS1o5Y4xvxPhlsPxOV2M0DSctp3xVa08Y/2kN
v9HGM/EordzvunoG5gvav++28c94TUtqznKP5gPa7q/GvqP5z7Ti8qetXaEf
6A+btHiFRpy2fpvWf8Vfj7d4h/9Gu0///5oWj1kzwboT+pC+BDiic1uhK65S
PCTn502zSutN4y/vR/4P7b+cVI9AHCz3WLz0Qou/6L/lRPOP+cnWFhCP0X6u
2t4nzBZ2K+dE7onvnTbMGOEdPtfwoOXGqo8a72iLYTBvavGF+fWn2f/9g/Lf
cSNywD/g2Q0Lz4HrvDRd+It4Rw68SUj802/zs/iERlS89eJE8e3iL9pQOfa2
id9hmxe3GGu2DrlXnJUYyUQlfph97emK12hDj2n4wx+mik/BqzwzXfEHbJVP
IeaCx9FOwaxgV/Ap2nOab3gJPA72+nRXmBr8DDYqBoKpwVtoAv4Ze+V+4WXu
Fya7dL/iTVwSjEWMRLMNT9P2QovncE93d4XxwcvkDszV8LcHmw2zgl3Bx3Do
izX88d52/ntazEmvDauh+35xujBg8aB3RV8A44WHeRf0DuI72PO12fS+QWkI
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
lZMDLY9OPp21YKzRys/ib1m3ojdZOCmt+AbT5fPYRxtfiI+Ji7D2C98ThgBL
WLv5J/gMPidfE9/l9+hP1ntYblQ+Hl+Ppo+2z/oPG7f7mGmFr2VNCG3iE5w2
LvvDjf8Ro4nN8DswTlgnjgZXg7PGXcNkYDPmCHMFzA32Zk4wN8AEYYPmLHMX
zBJ2iQPBheAYcY3wbj47X339xh+JCcWC1sqyJpcYW2yNfxKzil2t7bHQqGJC
sSEOChclJve9WFtjmVHxV5w72BL/yBpbYmSx8RyNX4NBwh7Fi2JKsaUYUixp
jTKYACzA2mUwAN+ntTmWHhUfJmYVq1q7yz25N+uPWLsKBgGLoHGidYJ5wD7g
I7R/MBvYDfxI7obvXa4UH4uvJUd9kxaPz86tn6xvSR/2vq1PIodK7tSyoxoj
jBX0OrTdxgOYgvU65HPKgaEvWrydj/5d/jr9Eu09PIBzAx+UO0xfj6v5RPNn
5DDQX800/9WYbmynZ6JFN34d1OZP2hEc4HtbnO/dykmVc2mNLrmq1mSztps1
3qzVZs0oa0fJWZW7ip98d4vTjCXWF5MjJjfM+zWGGEt8w8YD67WJs+R+eT/e
iXczau/eO/Qu9Sl9Sx/T17xj79p6YXAEY5SxyhhtrKYXmr3+6rCw1993lXsN
P55ueJvcbXoHuS74MbkRszm3icp3wsXJiZAb8Zv2fGk06HLoc2g37GPf33aV
SwEvozeiqbD2AY0frR+NEq2SHCO5QXKE5B7RT9Bj08/RctJv0irRu9F+Pjgs
LI/elr5Uvhc95P5drQ0qfxwWjR+TK2FONjcf2vxXGg+aI3p82g/4JX0RDYjc
dzkI9G2vac/DPvb9a2uX7wM7xbfJ1aBRonXl45mv6fXlDtGr0WbK95APzj+n
HX664Tn6o9x8Oe/4xG+390FjIs/IO/Au5DzLq5Vfay02c9r/4mbrtZnTze3m
MHMZTgLuC/+VGyfmFHviF6wNBEOCJYkJxAZiGLGMeAdXKkYTq9HIwVvubf74
Is3/FrOJ3d7Q4hc5dHLZ5LTJBfT84LfHt+/J76O/Obb93nsa3gQfge/gU3Zs
+KDj6cvEbGI18c2dLd7gf8t95QPhCo7qyjeC2cHu4J9yn2CksFLvyLvCWeAF
8AO4bTGh2JBGTXyK84CbH9biJTGl2LLf4lmcFI6J5on2CSYPmx9v8R4MH5Y/
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
8HQ5KnJH5CzIXRAzih3/H2lTiOw=
             "]], 
            Polygon3DBox[CompressedData["
1:eJwl1XmQyGUcBvAfezhyhmVFkrU0jmWFGbcakUomyn0t5b7PqGEiphyTpoxM
JvxRGcadqxVNFqWw7pBzHa3byrlWn3f2j2d+7/N8n+/xvr+ratrId0YUjKJo
MsRBpSJRNK1AFE2Mj6JJcPWZKKpKmxcbRQmFo2gErTxel76Utpl3EVSjFS8W
RQcUeV+d7JgoyioaRX3klMFLw2baLtoxNeppmgL14Ti+ib5WvST+rnhx9RLD
LLSPYSSthfpNaOvwanxptGfxGdYd1D8besIKtR6JtVH7CW9RMz3Gx/IdEM+E
g3CEbyP8wFNDbDBPOfXGWDdS7zDPL4Wi6IK+J8QaqHeD9zocxXvyWUbC0U+8
GWp1K5x/juvwLXLPCHanKRttoG2lnaX1pYVzd3TRVvpuubWcaSJ9qNo9BKpL
6oWX5NnE87Pcc3IH0qrQKsAKzWJoN+V0UDAej4O7+BmoQbttyDswTX4i73Xx
gXK/gbVqjeMbot8cnoHQD0/iK+V6hOcgHOJLocXR9lpnw1WoTitDO82TLLeA
PbxIKxp84Xmi5drbAz3X46vD2cB9vBDPbuuKPIkQj9eVWweuqF2HFqPeMPoH
5usFI8L9DP3lL5D7HcTSDthbZ74mPF3w96BjeM7USnZ9xHcKTsqtTUui/YfX
4iuox2t4qtz6UA/a4M/xXdNnEV8M3237SKaVEzsn5x+1TsOvPO15JoX3BqaI
vw7f05ZBU1onfDJvS/x8eA/Me0WtSe5xV/fogXgOTMQX6rVETn/oBwvwK2Kt
+FpCMziPT4XZ4nPFB0F/vETxKFrlugvPCO+nmdPhiPVhSA+z6fs87DN3X/MU
pd/lKU/Loo2gXTPjTdolfD6+GIrw7Td3Jb5b9CW0+PBs8VWk3aB9S1sI6+01
gXaONgufCSvD9wPW0NbCHj32y60Q7jf+BU9B9W7R1sMn1rNhlj2+4Fxmyu3B
0xk6wSz8YvguOI97IQ9O49vlXrNuL34YHyq3ofu1kvabWjshB9/Bl0Nrw3eW
7x5tOO9N2iu0v8MzQhtHy6N1oP1LG4M/Ne82M6RDgtgx51JVfJX1dPUz4Gve
HXxteU7Y60lI4xsZ5jHzqfB+wTB8m1my5LZTI4t2X9+m4XsHK8MZiZWi1RR7
rF4uPITq4dmmp6u7Wq8MPf7iv6NOKTM0lndVLFWdtuG7SSsBxaEd3oPPIxO1
DveRLy98w+XvVedP+B2W473NmGDmibwlwpnpOZb22PrN8D6a4wHtkBmG8wyF
IeHbgW8UKyg3FmJgO15An2by9lmXpfVQqwIMNtdo2ijIVu+i/LnqPDJHLlwI
5yn3q/j8Mz4ILeQ1h0zrZfSl8fn3tzLfbf4U+fVgi3536btDLiTqmyYvl/bU
3nvSavONDN9XuXly14RvJPxBG8J71X5bWu/nHRT6ulbRNwnai+WoU5k+Gh8r
NiF8R/D1aqWqUxfqh28g/kTfSmrNCf8//tTwnIW5afNoW2gNaKXNcpz/I3k5
zuCK+9E8nB+ssX5X33LythfO/49/CU/5HoptgE/Fp8KY8A2R0xBaWNdU/w16
Cbkv01rRXqIlQ55aT+lNXKfY09HwTuDdQw3x5fiPMB9/yFOJ1iw8F7Baz8bq
vSqWQn+LVlJuKXsZEP4R/H3EskJ92BPOjS87fHd5isndb79p9tEHPufP5K/m
fl3ivRz2Y6ad+hTh6yKeG+ZQa7zrh+pM55kB4/g20+LkZuIHYTJtsJyy4ZkI
/238sp6NoDXveXVizBELi/Fu4Z8CG+XWlNeRbw/9s/AOym/PX4Z3iHis+ACx
S7RitG607iGPd3z4p8Xn//RTaQ1glN69aW/TVuNrYALtfxRgQes=
             "]], 
            Polygon3DBox[CompressedData["
1:eJwV0U1vjGEUxvHTFzqYSIaIlURFCJHophYam+4p/QRIWNJUVLsgaNL4AJZW
Im3a0ggGbZMy0hX6YkPppgk1XhK06HTKqN+9+Oe5n+tc5zrnfp76k2dbz1RH
xHasxb4NETdqI/qqIvrRi13rIkbXR0zSq9dELDL+QAf9azbiDa1dbxsWayKK
vM8Q9BpcrdPPf5R/mP5czhTytPs4TB/w/GRWs2WW1cq4om+P/G1qX8QV8Q3v
MxHdOOTMElNmjjt85P2D3fwlegUNcmrdaYWepU/TXmMHPeh76Vvpc14X0v74
IHu/2k2eQTvdwQga7dmFOnfKoNvMYb0ttGU5m5zf6c9js95/7tpPK+qdw1Na
AZ36xtQ+O89jmucBjsjJ03to13Ce76E5HfZZld/IMyT7NlrVc3a8oDbj/m9x
gr+AWRn16VvofcT7BAVM8pboOTkz3l+l/y6nwn8Pl9I3xzkZ43ov8l9GC98W
+zepHcQQb1nORjkTarPYSV+l/6Iv6R2kXUfQS/QGu95KvXLuIo8D7tsmP5P+
R/r36t/Nrsj4jYqcUbXHab7aipwRTDhXqS2YP4Zjcn6mHlonbx+yPEvpXup/
ZZfxgvYSXWbk9JxyPo1278f55u34HyGAd4Q=
             "]]}, Annotation[#, "Charting`Private`Tag$6171#1"]& ]], 
         Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[
          TagBox[
           Polygon3DBox[CompressedData["
1:eJxN2we0tlV1LeDj+Tx8fkWaoEhHxa6IImBD7IKiCChKlw5SpEnvvf8/vbef
3gWk2xVQsaCiNDGmmOTGeBM1ufEmwcznrMW4d4yzx3nXt9++915rrjnXu9r2
e2+y1+zMzMyhL5yZyd/MsZOZmffPzcx8Pz/+YDQzc9B4Zub0wczMqfntW+nb
MvbmsT+TtlW2v5R2arZPS/+3039O7A/G3jP2Y7EP7f5T0g7O9lvS3pntjw9n
Zu6ZzsxsHXvv2F9M+3y2t0j7QraPyPF35/hXx1439oey/93Zf9vYezl/2nbZ
vj33eH3udaP035v+zfLbruk7Msffm+M/F/vTsb8U+57Y58VeL/Z+sX8S+/zY
18a+IPZP+/6vjn1N2rnZXpB2mf60k7J9cdr12b44+z/u+O6zz1XeQ/ovzf+L
0v+z9J8S+5LYF8b+eeyzYl8Y+6zYP4p9SZ/vxrRLs/3lPM+NeZ4N8jxfyfMc
k98O15f9f5H9F2X7irSj0k5OO2eubL+fl+2z+/7Pz/aP+3k933Xuc1zP634u
ck/j2v/aXO+mtIvGdT83eZ4c/8scf0vu56r0fSz3c1fu547YN8TeMPadsTfO
/jtm/+3TPuXd9/0emrZbtndJOzjbB6TtlO2d0w7K9r5pOzjWHMr2kznni7O9
R9oxsY/L9R/M9b8Qe7/Y07QXZfv4QfenHWueGOu0SdqyaXuN6914J2dk+6O5
zy2z/dm0j2T7/T0fzKfbcv/vi71p7A/GvjX2NXm+C3MvF6Rdm+1j039u+i/P
/TyR+9k+9v6xl0hbfFzXuKLH4dH0fzH2SbFPSNsn27uP6/5OSv830v8KayD2
7mmbZ3vVtDW8C2sq25/1jry/7P+V7L+Jd+hdpn3avabtlO3D0n9X+rfxzmIf
Hvu+SV3nyH4vJ8/V/Xp/R2f7/vTvG/uw2IdYA55lXO/SO92jx8v4nJD9vz6p
8TrQu479tUmNl+c/KvYDkxonxxqX4+fKHxybd3d02oHjWg9X2E473diknZV9
T8++D+X4I3t+nBj7u7FXjL1C2svTlk+7MmOybsZmx/RfNqm+VbP/Kwa1z79k
jP6Ucz+X9n+z/Tdpv8n2X9KWMJ9zzMVpy2b7pWl/TP8f0zeb458z1unbKude
LvZS6b+Ij4v98tgvsV5y/cty/U3y21np+88c8185/v9o2T47/W9K/yfSf0b6
L4r91tibxT439i+zz+PZd5jzjcZ1L9ukb5VB3dNiaXNpg7QXpj2V/X+R/RdP
/9j953wXT2sf+/4o/d9K/0NpP872Yelbbli/6Tsi9grD8uF8+eP57afp+7mW
7aPSv/Kw7sm9HR57+djrG8dJXestsecGdc0FsS+J/fH0nzapMbg07Yppjc2l
aRem/0PpP0+/32N/Jvb5k3oH56RdOK13s2TO+d+59p/T/ivXvzy/vS37b579
L+AfY78x9kaxT4+9fvbfJPfy/vx2S/rOc81sb5z+hc4fe43Yn4q9oP0t/3ux
mDUun80/LxDTJvWfzW8vnKv5uIDfNuezfUT7o2PS973sf3jshbHPjP2w+d7+
4EzzfVz+4bA8ywlph9g257P9aNozozqf438c+4lRnU88/Unsn41q/zPEx5z/
O5Py9+fEPtuaHVf81f909n96VPFnv2zvk3a5d5nfXsC/xP63UcVbz3NGzvdI
zvfNvJ9Nh3V+8fuC2JfH3lSsiP2C7H9yjj0q7cIc/5NR3btnuCzbf077j2wv
TLsq2+fk+Dfn+E/m+DNz/O/z2x/S98Jc8y+jWs/W93nWdM9tc2mxQc3xx7LP
D7P/KWmXZntR2vnZPjft6myf5RmyfTgfnO1/Tzs+29unHeNe/Jbt3dOuzPaM
teNasS+O/b/TfpTtU63x9N3C5+Ve188935x7v5mPjv3e2DfFvmlSvoWPuXFa
a+QxYzPba6ftD2af4yaFib43W+vF+noy9hOxV8rxx0xrTVqb7+v19IvYv5yt
NXdU9zv+4V6vrmdtWj/HZ/8N8v+fY/9t2kfm6p2fxbfN1lj89aj6/kEb1Zgb
+xV7vfBJfNNG7Y/s63z/q495Te7jn/L/H9NePaxzn532n32N9/V6OyTH3zmp
5/9Ofv9a2q+yvVH6t4PV0j6R7Y+nbZHtbdM+Of5/a+wzOff3phUTxcYvx/7B
tH7Xb+3dPiwfuErH5i+n/3t9vQ+k/4Qc++vYT8VeJf0npP/7sb8b+8PpPzH9
fx/7r2K/whxP/9/F/vvYq8c+Ofbfigmxn037Tb8/9kdz/Ek5/q9i/zr2K7P/
idn/2djPxF4t9vHTwmiw2uaxfzitGCPWbNzz/9/6fYsJ1uKto8JTb07/vum/
LfbVsd8Se79J9V8X++a0u7J9d9p52T4n7Stt639T9j8o+19vzcd+Y+x9Yt8Q
+9LYb419YNuXxd477aRR4RfrafX075X+tbzn2LelvT3bN/XxQP/psGYf/7r0
7Z39b+aTY7829hcn1c8+JO2MXq/u99Xp33NSPpwv/0T7X+cX798GC8S+LvZF
sdeMvX/sf7RGY//enMz2P6f9INsvz/s9Ne/3D7H/1f3EPjP2v8b+F3iz48+f
zPnYb0j/wvT/U/f/Nu132b5nVM96R9q9o+p3vY/l+JP7+nIb8fGU2Hd6Z7HX
iH3ApOaX9SuePjKq9W7/R/h0vivt27MVcw/r+fV3sxUfT53U/bJ/5Z74w+yz
4rDmM/8Bk8Pmd+a3H01rXVgfsPsdw8IYfDMfDXvw0SvFHg7Ld6+Z/y8alE8V
p8XWT8sBhhVjYYTH29/ADmIqX81ni7Xvzv81c+xb096T7bXSPjtX8VccXinH
vy5978j2Vdl/nfzfPn07pF09rOu43hZ807CwgH77wQSr5fjX5vh3xl4U+5Xj
up7rXh377fn/ubmK1+L22mnbZfvzaYuGhRlgJxgKlrg29l6xr4l9zbQwLCx7
fez7phWPxctL8tuT/GfsT8X+QPrvSP+HYm8W+8Oxb499Y/bZJ/teF/uGaWFY
WPYTse+fFoaBXWCYSzufhLc36Hxni8bbG3X+el323zv7Xxv72tjXT+p5PNd1
08Lzb87+7+r8adPG9x/r/E5+Kt/9eOe38Lz8dcPOZ+WoctX3xf7xtHIimPuG
2A9MC5PD5hvH/uq0MDVsvVns704LU8PWm8T+zrQwPWz/qdhfm1bOK/fdIvZj
08pR5apbxv7ZtHJ4ufx6sX8Se1HnhzfIEceFWWALGOPb08IYuIJbhoU9YChY
6pOxH5kWJoFNPh374WlhKtjqttgPTStHksPcFPvr0/rPlsvcPCyOAddwK8w7
rffgfcg9bhxWfn1l7u0WOWC2r0q7Ldu3pl05rhxOLndv9v3ltOaMubNV7Cem
lbPL3e+K/dPYT8O6sbeO/VTsp2KfHfuzsZ+cVo4sV74n9i9i/1qOHnu72M9O
K2eXu98Nc8d+BmaN/bnYT08rH5MvusbTnT+eOKhruNZV/TyOceyzfsv2tjn+
Vzn+V7GvjL1N7GemxUngJr4S++ex74sP+kr8wTr57eBJ+TDYAwbh2x4aVWwX
c8VeGAvWerE5kP0nOc+rsv3KtLF3nf5d079z2rHZ/lL+H5x2UNr+aUfktx3y
f2nvYFIYBBaB6eVKMAqsstiwsP5R2X+37L9L2tH8ZdpO2f48DDiq8+2Y7W3S
DoWX07bL9sSczbkOib1t7Kl3OqmYLDbLEWDVk0eFl5fxzszNvmf3etqo+r+Y
7X1h0lE9n+svaU5k/z1yjumw4ql4t2fsF8d+TcdXHAHsKuaKveeMCrvCsAuz
vXv2PyP7vyL7f2FSGFesF0MX9fN6vmX5QHPPM8/WM3m2L0zrvXv/e0zqfXn/
S5iT1nbf/0vMgUmNFTwH1z1/zKr5/6JhnWuU/6vN1f24Lxhb7iKHgb1P7PHb
Om3BqJ7Bs7w0+28/KcwNey8ee/dJYdiHO36Lh4fkt3XTd27sA2Ivk//viP1O
MW5YMf/3Hb/FdzFdbH/9sHLNQ2OvHfslsb80rZj+28Zz4v2R6X99+peIfWDs
o2O/N/aysQ+eFoaBZRbE3mtaGAqWWjL2frGXHhYmgoXOHtaasDbOyfb+01oP
X/e8sQ8xPyc11sb8oNi7TetdrtrPL+eQe6wQexe+YVS5lJzqkn5/xtKYmhuX
93xfqueDsVgAW83WmBgDY/EyMXdSv+s/E17rOWH+Hzdbc+XCvt5y2X/nSeUL
crVVe+zlcHK5VWLvxveMip9ZPvZObR8Z+xhzclT3z355+nec1HrjD+Rg548q
Z5O7rZz+XSf1PGf0vV1hLuf9nDKs451/J9zFsN6P+9t5Wmt/xX5frmFfx+ww
rWPc26nDOteuzVfxcXzdNe3P+cBn27499s1pV4/LB/AFx8E101rTcmU+wFp3
D97VC4d1b57Bs5wWe5dprUFrcQCXTGvOm/snxf78tMbE2JwMF01rDlgLf1ms
5oZ37F2fnv5dp/WMnt078Ox8Ct9yfOwtp+WD9sy9HTBbvmnbaV172fafn4v9
3GLlj/k7PtDa3KF9LR/JN/IhfAmfzHfyYXzZFtO6t8Xbn3sn/71Y+U/vapvY
JwzLf/CPi/p9imFi2Vbpf8Gw5it/45249yXbX20de3ZY/p7/8Y68+2n7Cz6E
b+Wj+BZz3rmck2/0DmaG5c+8Gz5WbnHmsHyvZ3av7tm7cA/2dYx7s2b5irU7
vsmpcNlyMLkWH2SdW+980wn5bY/ZioliIx/DL/FPfI+c4cvpu3O2conj3XO2
r0x7cFQ5Ey5TjiPXsSasRWvSWrHmrSVryFoyp2D3lXq9yNHkXnIwuZs1I/bx
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
c2P9os4XjLm5pp7nr2crVoq3airUJ5zfeGm3ucKKa8k35qpGQq3Eqo2fxDSx
QYwQ68QI+ztO7LAGrUU+XKycjzmzlXOKRd752oOKWcbCHF1yUFqZuWuMjJWY
xZfzYXwZny42wKxiqxgLy6oBUQtyQeMdz+X5fjdb2MCY0eHXaDxmDIylMTU2
xshasWaMnTmg/gk+MjeMqbEzhsbaHFZbB1+Z22pO1J6s2HjQGrTWrDlr0xib
C+aEsVcPol5j+cZb6jfUV6zQeEX9h7n4+sY76i/Ug1zceEh9lnqsixq/WdPm
kjllrdNUaCv0mivbh4g9YhDf4j14H+oTaIf4LvzWc80Hndn8DE4KN4Vvwo/h
oHBR+D/8E84D93Fe8zM4FlwLPg1/hl/CjR3dfAyOF593RuNlnBz+Ax+EP8I/
4a5w87hP/CytBJ9HW8Ct47dOb74Hn4JfOan5HHwKfgUfhf/Dh+Gzju34/Zfm
d2iuKw7Kn/Krzuv89BZcPr6JL+VTcU1iptgJ86llE9PFdjVtat1otuok+WN+
meb6qkHFU3HVvDa/lx6UNrxtjlt5UDUa6tbwVZ7Xc9MT+DuxQQ3dJZ1Pyj/l
nHJPHDV+DP+Jb8WX8T18ED4UJ44bx1HhqugR9BN8MP7XnDG3zXFz6et85Gzl
qHJVGh4tT/2seigaHi2PPqmeliZHm1Pvqh7sZ73+1GSpxXqm/YUaK7VYT/f6
UKOl9oqmicvF6dI6ncO51NCqNaOx0jJpmrRXNVtqX9XAquWy3q0/NWVqwX4w
qRoZtTHfn1bNrVpjNbtqcdXkqtVVs6tWlwYpl5HT0CYf7+ejWdIW1VSqdVPz
ptaSxkv7pQHTfmm4tEyaJm1XzZraMpo57VzNm1otNVtq4fDv+Hj8JX4Pf42r
V2NE68Ah4hJpDvhNHC+ul8ZB68AJ44bxz/hofDv+m0ZCq/DMamnU1HgXe48r
TqujPbPHi3ZJw6StqqlTa6fmTq0dDZlWTDOmLdOQacE0YdoyDZn2TIOmLatB
U3usxvTIvgauB+fj2jhQXCiNi/ZCA6d908Bp4+aQuUTzVht9QPOPMBvstn/z
lzAhbIhfxL3ia/G7OBZcCz4Gv4IjxZXS//C1X2o+Eh+MT8ZR46rVsOCfcTa4
G3w1/nm/5ldh1ts6v8cX0G/xEyd2fqyGBf9wQvMLcoB5fbfzTfqvWrTjmx/A
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
x2f6KX32fwD3kExF
            "]], Annotation[#, "Charting`Private`Tag$6171#2"]& ]], 
         Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt00lIV1EUB+DrmLorogEhClskDaZQmUmhUFZmkJZK0KZtZLSQhkUjEREt
LIJGmqQkQ9GCBkrKpHmWKFArKzNp1sAkwb4HLQ7f+Z1737vv/3xOWL2uuCIm
hDCgGhNCyIx6XuKDpBAa2C83MiYxhCY+Mb/FOLmZqfzGD+bfOV7+wXH8yY/m
vUyTf7NPfTLr4qT4EN7zjdyhOvVfVFZ8dGAIU10zpJ3CQf5VGdbS5bv6YbzD
hcy0P0uVW18m5+iXM5elXGPf2ugecc70m/bpu7idHdzKvVHv+hb7R8eG8Jip
fMhe93mrmqyfldv1beqVyksOIV+91heyj/fsa4h+g3ye6azlafN6TpbrWC1f
ZKZ8jsfkGh5nIzPMT/KQfIpHuJ9VrIrm6rDa5Zkm2ntUf0DtlA9yD8/wRPQu
rD/Vv4zOlVuj5+FznuRc6y/0O9RmeQs3cBs7ud56rvcxT3XLM9nOGWxjhfVM
fYbql8v4h+XcaK2YJSrR+17KIb+h0rxIv0gNygv51TX5/OzcZrNauVNfw3fs
Vi3mF+Qe/Q0OcFC1ml+TE1x/hfGMVc/ML8ub7KnkRi729273PTR7ngL9TS7g
W7MlvC0X8j5Lo+/FPJ/X5Tw+4ir2mK9kuSpTu33LJaxN8f1bW6Ef5bw6Ocdz
jNWPUfXyfDlNX8DhHKFGqj73SOQ0z5rE2UzhL/NkZkffJos4i8neYzZL5Dks
ZrVzr9o//f//9z/89Itn
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0jso7nEcBvAfOvFyLC6bSBExHZfBoLMY3CLK/fqyoFxGlrPI8E5IsWOS
JIsykWSQ1eV0wiK5nIGYLD7/DE+f5+ntV9/e9y0cmW6fSgohJGQ2OYQ5qfkR
Qk5qCPv6rlTZWfaOXqsfRNoVKSGM2VWslHIpSA+hjF2cYCdH2cYRdnCccc5w
mJPsZyfr2MrfbGYtm9jCOFs5xCY2ykD0VgZlzi19rHdbPofsPG7ao3qJXiQb
dtwu1htl11621/R12bNX7Q09IVv2gr2gz8u2nbD/6LnRG7vXztTT5JcdY7pk
uPGnXPrOLmIhXPGaf3nLf7zhIU94xFMe85xn/M9XvvGD73zgPW95xzs+8JHP
UuKGp+itNLit1H7Rs93UHf1mdpaeIz12tf3p8xUpsjPsRX1JCu1Y6vf/4wt2
gkQv
         "]]}, {}, {}, {}, {}, {}, {
        GrayLevel[0.2], 
        Line3DBox[{991, 990, 2783, 983, 2779, 1985, 961, 958, 2763, 959, 2773,
          978, 2775, 963, 2765, 965, 3067, 1981, 969, 972, 2882, 1238, 2880, 
         1239, 2883, 1243, 2889, 1247, 3072, 2107, 1221, 1222, 2873, 1212, 
         2872, 2871, 1213, 1214}], 
        Line3DBox[{996, 992, 2784, 993, 1988, 975, 2770, 947, 1978, 948, 2757,
          949, 2771, 950, 1979, 951, 2758, 952, 1983, 981, 2806, 1036, 2001, 
         1037, 2805, 1009, 2791, 1010, 2003, 1035, 2804, 1034, 2002, 1003, 
         2788, 1002, 2044, 1107, 2835, 1108, 2837, 1109, 2042, 2836, 1110, 
         1111, 2043, 1112}], 
        Line3DBox[{997, 957, 2762, 955, 2761, 956, 2764, 960, 2776, 979, 1982,
          980, 2777, 966, 2766, 967, 2767, 968, 2887, 1246, 2886, 1240, 2881, 
         1241, 2884, 1244, 2890, 1017, 1993, 1014, 2794, 1015, 2796, 2795, 
         1016, 1245}], 
        Line3DBox[{1001, 999, 2787, 1000, 1990, 994, 2785, 995, 2786, 998, 
         1989, 953, 2759, 954, 2760, 945, 1977, 946, 2772, 973, 2769, 974, 
         2885, 1038, 2004, 1007, 2790, 1008, 2792, 1011, 1992, 1012, 2793, 
         1013, 2799, 1004, 1991, 1005, 2789, 1006, 2798, 2797, 1020, 1018, 
         1994, 1019}], 
        Line3DBox[{1064, 2017, 1062, 2817, 1063, 2018, 1065, 2023, 1072, 2820,
          1066, 2019, 1051, 2010, 1045, 2810, 1044, 2006, 1043, 2814, 1047, 
         2008, 1046, 2007, 1030, 2802, 1029, 1998, 1028, 2000, 1031, 2803, 
         1032, 2038, 1103, 2834, 1104, 2039, 1078, 2026, 1076, 2822, 1077, 
         2029, 1079, 2027, 1080, 2828, 1096, 1095}], 
        Line3DBox[{1074, 1075, 2821, 2025, 1073, 2024, 1069, 2819, 1070, 2020,
          1067, 2818, 1068, 2021, 1057, 2013, 1056, 2813, 1055, 2014, 1058, 
         2816, 1061, 2016, 1060, 2815, 1059, 2015, 1033, 1999, 1026, 2800, 
         1025, 1997, 1024, 2807, 1039, 2041, 1106, 2833, 1105, 2040, 1098, 
         2035, 1097, 2829, 1094, 2032, 1086, 2823, 1085, 2030, 1084, 1093}], 
        Line3DBox[{1082, 1083, 2827, 1092, 2031, 1090, 2826, 1091, 2034, 1089,
          2825, 1088, 2033, 1087, 2824, 1081, 2028, 1042, 2808, 1040, 2005, 
         1041, 2809, 1023, 1996, 1021, 1995, 1022, 2801, 1027, 2012, 1053, 
         2812, 1052, 2011, 1054, 2830, 1099, 2036, 1100, 2831, 1101, 2037, 
         1102, 2832, 1048, 2009, 2811, 1049, 1050, 2022, 1071}], 
        Line3DBox[{1169, 1167, 2071, 2857, 1168, 1170, 2074, 1177, 2075, 1179,
          2092, 2870, 1210, 1211, 2093, 1209, 2091, 2869, 1196, 1195, 2081, 
         1198, 2117, 1267, 2116, 2896, 1266, 1265, 2121, 1271, 2122, 1260, 
         2113, 2894, 1261, 1262, 2114, 1263, 2132, 1284, 2131, 2902, 1285, 
         1286}], 
        Line3DBox[{1176, 1174, 2073, 2859, 1175, 1207, 2088, 1206, 2087, 1191,
          2078, 2865, 1192, 1193, 2084, 1201, 2082, 2867, 1200, 1199, 2083, 
         1202, 2115, 2895, 1264, 1270, 2120, 1252, 2109, 2892, 1253, 1257, 
         2110, 1256, 2136, 2904, 1288, 1287, 2133, 1274, 2123, 2898, 1273, 
         1272, 2125, 1276}], 
        Line3DBox[{1178, 1173, 2072, 2858, 1172, 1171, 2089, 1208, 2090, 1197,
          2080, 2866, 1190, 1189, 2079, 1194, 2086, 2868, 1205, 1204, 2085, 
         1203, 2118, 2897, 1268, 1269, 2119, 1258, 2111, 1259, 2112, 2893, 
         1255, 1254, 2135, 1289, 2134, 2903, 1290, 1277, 2126, 1278, 2127, 
         1279}], 
        Line3DBox[{1180, 2860, 1140, 1139, 2058, 1134, 2055, 2844, 1135, 1145,
          2061, 2848, 1146, 1129, 2052, 1130, 2053, 2842, 1126, 1125, 2050, 
         2840, 1127, 1164, 2070, 1166, 2130, 2901, 1283, 1280, 2128, 2899, 
         1281, 1229, 2098, 2875, 1228, 1227, 2104, 1219, 2096, 1220}], 
        Line3DBox[{1181, 2861, 1138, 1137, 2057, 1133, 2054, 2843, 1132, 1131,
          2056, 2845, 1136, 1117, 2046, 1115, 2045, 2838, 1116, 1123, 2049, 
         1124, 2051, 2841, 1128, 1165, 2124, 1275, 2129, 2900, 1282, 1230, 
         2099, 2876, 1231, 1226, 2097, 1225, 2101, 2877, 1217, 1216, 2094, 
         1215, 2095, 1218}], 
        Line3DBox[{1186, 2863, 1182, 1183, 2077, 3070, 1185, 2862, 1143, 1120,
          2047, 3068, 1119, 1118, 2048, 2839, 1114, 1113, 2068, 2854, 1160, 
         1158, 2066, 2852, 1159, 2856, 1153, 1150, 2063, 2850, 1151, 1157, 
         2065, 2851, 1156, 1155, 2100, 1232}], 
        Line3DBox[{1188, 2864, 1187, 1184, 2076, 3069, 1147, 1141, 2059, 2846,
          1142, 1144, 2060, 2847, 1122, 1121, 2067, 2853, 1162, 1161, 2069, 
         2855, 1163, 1154, 2064, 1148, 2062, 2849, 1149, 1152, 2103, 2878, 
         1236, 1237, 2105, 2879, 1234, 1233, 2102, 1235}], 
        Line3DBox[{1224, 2874, 1223, 2891, 1251, 1250, 2108, 3073, 1249, 2888,
          1248, 1242, 2106, 3071, 971, 2768, 970, 964, 1980, 3066, 962, 2774, 
         977, 976, 1984, 2778, 982, 2780, 985, 984, 1987, 2781, 989, 2782, 
         987, 986, 1986, 988}], 
        Line3DBox[{1341, 1339, 2940, 1340, 2941, 1342, 2942, 1323, 2929, 1324,
          2932, 1329, 2933, 1327, 2931, 1328, 2981, 1388, 2979, 1386, 2978, 
         1387, 2980, 1373, 2970, 1371, 2969, 1372, 2972, 2971, 1374, 1375}], 
        Line3DBox[{1370, 1365, 2964, 2965, 1364, 2967, 1366, 2966, 1349, 2949,
          1348, 2948, 1347, 2950, 1350, 2951, 1345, 2946, 1344, 2947, 1346, 
         2954, 1355, 2953, 1354, 2956, 1356, 2955, 1352, 2952, 1351, 1353}], 
        Line3DBox[{1377, 1376, 2984, 2985, 1392, 2988, 1394, 2989, 1395, 3024,
          1432, 3026, 1433, 3028, 1434, 3027, 1331, 2934, 1330, 2935, 1321, 
         2927, 1320, 2928, 1322, 2943, 1335, 2937, 1334, 2939, 1338, 1337}], 
        Line3DBox[{1379, 1378, 2973, 2974, 1380, 2987, 1393, 2986, 1391, 2983,
          1390, 2982, 1389, 3025, 1431, 3023, 1326, 2930, 1325, 2936, 1318, 
         2925, 1317, 2926, 1319, 2944, 1343, 2945, 1336, 2938, 1333, 1332}], 
        Line3DBox[{1384, 1385, 2977, 1383, 2976, 1381, 2975, 1382, 2997, 1403,
          2996, 1404, 3000, 1407, 3001, 1405, 2998, 1406, 2999, 1398, 2991, 
         1396, 2990, 1397, 2995, 1402, 2994, 1399, 2993, 2992, 1400, 1401}], 
        Line3DBox[{1413, 1412, 3004, 3005, 1411, 3006, 1414, 3007, 1415, 3013,
          1421, 3014, 1422, 3016, 1420, 3011, 1306, 2917, 1305, 2916, 1304, 
         2918, 1307, 2919, 1308, 2957, 1357, 2958, 1358, 2960, 1361, 1369}], 
        Line3DBox[{1417, 1416, 3008, 3009, 1409, 3002, 1408, 3003, 1410, 3017,
          1423, 3015, 1419, 3010, 1418, 3012, 1311, 2921, 1310, 2920, 1309, 
         2963, 1363, 2962, 1362, 2961, 1360, 2959, 1359, 2968, 1367, 1368}], 
        Line3DBox[{1425, 1424, 3018, 3019, 1426, 3022, 1429, 3036, 1442, 3038,
          1443, 3039, 1438, 3031, 1435, 3029, 1300, 2911, 1299, 2910, 1298, 
         2912, 1301, 2913, 1296, 2908, 1295, 2909, 1297, 2923, 1314, 1313}], 
        Line3DBox[{1430, 1428, 3020, 3021, 1427, 3034, 1440, 3035, 1441, 3037,
          1437, 3030, 1436, 3033, 1439, 3032, 1303, 2915, 1302, 2914, 1292, 
         2905, 1291, 2906, 1293, 2907, 1294, 2922, 1312, 2924, 1315, 1316}]}, {
        GrayLevel[0.2], 
        Line3DBox[{1458, 1459, 1998, 1519, 3100, 1520, 1999, 1510, 1995, 1511,
          3099, 1516, 3097, 1517, 2002, 1891, 3085, 1488, 3086, 1489, 3088, 
         3087, 1490, 1491, 1994, 1506}], 
        Line3DBox[{1468, 1469, 3078, 1466, 3077, 1467, 3303, 1989, 1465, 1448,
          3296, 1978, 1447, 1596, 3326, 2034, 1595, 2032, 1591, 2029, 1590, 
         1593}], 
        Line3DBox[{1472, 1890, 3081, 1477, 3301, 1987, 1476, 1907, 3137, 1661,
          3336, 2066, 1660, 2069, 1632, 1906, 3332, 2053, 1623, 2045, 1624, 
         2084, 1682, 2079, 1683, 2093, 1699, 1700}], 
        Line3DBox[{1474, 1986, 1473, 1659, 3136, 1650, 3334, 2063, 1648, 1649,
          3135, 2064, 1652, 1633, 3330, 2050, 1631, 2049, 1630, 1910, 3339, 
         2082, 1688, 2086, 1690, 2091, 1697, 1698}], 
        Line3DBox[{1475, 1470, 3079, 1471, 3080, 1464, 1985, 1889, 3076, 1463,
          3300, 1984, 1462, 1909, 3337, 2068, 1662, 2067, 1636, 2052, 1625, 
         2046, 1626, 1681, 3338, 2078, 1680, 2080, 1686, 2092, 1694, 1695}], 
        Line3DBox[{1481, 1480, 3082, 1453, 3075, 1451, 3074, 1452, 3299, 1982,
          1444, 1445, 3295, 1977, 1446, 1450, 3297, 1979, 1449, 2033, 1597, 
         2035, 1585, 2026, 1584, 1592}], 
        Line3DBox[{1484, 1485, 3304, 1990, 1482, 1483, 3083, 1479, 3302, 1988,
          1478, 1588, 3325, 2031, 1594, 2030, 1586, 1587, 3122, 2027, 1583, 
         1582}], 
        Line3DBox[{1501, 1500, 3091, 3092, 1502, 3093, 1508, 3095, 1499, 3308,
          1498, 1992, 1495, 3307, 1893, 3314, 1524, 2001, 1523, 2005, 1526, 
         3316, 1896, 2041, 1610, 2038, 1609, 1619}], 
        Line3DBox[{1509, 1507, 3312, 3313, 1493, 3305, 1492, 1991, 1487, 3084,
          1486, 3102, 1895, 2003, 1518, 3098, 1513, 1996, 1512, 3096, 1515, 
         1997, 1514, 2000, 1521, 3101, 1522, 1618}], 
        Line3DBox[{1527, 1528, 2008, 1536, 3320, 1554, 2016, 1900, 3322, 1548,
          2011, 1549, 3125, 1598, 3123, 1599, 3126, 1601, 2042, 3329, 1616, 
         1620}], 
        Line3DBox[{1529, 1530, 3103, 1534, 2007, 1535, 2015, 1899, 3321, 1550,
          2012, 1897, 3106, 1546, 3124, 1600, 2044, 1905, 3328, 1615, 3133, 
         3132, 1621, 1622}], 
        Line3DBox[{1537, 1538, 3105, 1531, 2006, 1532, 3317, 1533, 2014, 1898,
          3319, 1553, 2036, 1602, 3127, 1603, 3129, 3128, 1605, 1606, 2043, 
         1617}], 
        Line3DBox[{1539, 1540, 3104, 1544, 2010, 1545, 3107, 1547, 2013, 1551,
          3108, 1552, 2037, 1604, 3131, 3130, 1607, 1608}], 
        Line3DBox[{1543, 1542, 3318, 2009, 1541, 3119, 1572, 3116, 1902, 2021,
          1575, 3323, 1569, 2019, 1565, 3113, 1564, 1563}], 
        Line3DBox[{1566, 1567, 3114, 1559, 2018, 1901, 3109, 1555, 3112, 1562,
          2024, 3121, 1579, 1580}], 
        Line3DBox[{1568, 1561, 3111, 1560, 2023, 1578, 3120, 1574, 2020, 1903,
          3118, 3117, 1573, 1576, 2022, 1577}], 
        Line3DBox[{1571, 1570, 3115, 1558, 2017, 1556, 3110, 1557, 2025, 3324,
          1904, 1581}], 
        Line3DBox[{1613, 1611, 2039, 1612, 2040, 1614, 3327, 1589, 2028, 1460,
          1983, 1461, 3315, 1525, 2004, 1892, 3306, 1494, 3089, 1496, 3090, 
         1497, 3094, 1505, 1993, 1894, 3309, 1503, 3311, 3310, 1504, 1732}], 
        Line3DBox[{1653, 1908, 3335, 2065, 1654, 1651, 3134, 1647, 3333, 2062,
          1646, 2070, 1663, 1635, 3331, 2051, 1634, 2083, 1689, 2085, 1687, 
         2081, 1685, 1684, 3143, 1696}], 
        Line3DBox[{1655, 1656, 2116, 3361, 1920, 1759, 2119, 1763, 2120, 1764,
          2129, 3364, 1778, 1776, 2128, 3363, 1777, 1726, 2105, 3348, 1914, 
         1720}], 
        Line3DBox[{1658, 1657, 2117, 1760, 2118, 1757, 2115, 3360, 1758, 1765,
          2124, 1770, 2130, 3365, 1922, 1723, 2103, 3347, 1724, 3145, 1727, 
         1718, 2100, 1719}], 
        Line3DBox[{1667, 1666, 2074, 1671, 2089, 1692, 2088, 1693, 3142, 1638,
          2054, 1637, 2055, 1639, 2059, 1627, 2047, 1628, 3138, 1668, 2106, 
         1915, 3349, 1728, 3351, 1730, 3356, 1918, 3355, 2107, 1735, 1733, 
         3146, 1734, 3149, 3148, 1738, 1739}], 
        Line3DBox[{1673, 1672, 2075, 1674, 2090, 1691, 2087, 1641, 2056, 1640,
          2061, 1645, 2060, 1629, 2048, 1454, 1980, 1455, 3298, 1981, 1456, 
         1457, 3354, 1917, 3353, 1916, 3350, 1729, 3352, 1731, 3152, 1736, 
         3147, 1737, 3151, 3150, 1740, 1741}], 
        Line3DBox[{1702, 1701, 3340, 3341, 1911, 3343, 1710, 3342, 1709, 3153,
          1742, 2108, 1679, 3140, 1678, 2077, 1677, 3141, 1676, 2076, 1675, 
         3139, 1644, 2058, 1642, 2057, 1643, 2073, 1670, 2072, 1664, 2071, 
         1665, 1669}], 
        Line3DBox[{1704, 2094, 1703, 1785, 3159, 2133, 1786, 1787, 3367, 2134,
          1753, 2114, 1751, 1752, 3155, 1755}], 
        Line3DBox[{1707, 2095, 1706, 1921, 3362, 2123, 1769, 2126, 1773, 1781,
          3158, 2132, 1782, 1783}], 
        Line3DBox[{1708, 2096, 1705, 1912, 3346, 2101, 1721, 1923, 3368, 2136,
          1788, 2135, 1754, 1750, 3359, 2113, 1749, 1756}], 
        Line3DBox[{1722, 2102, 1714, 1913, 3344, 2098, 1715, 1717, 3345, 2099,
          1716, 1744, 3357, 2109, 1743, 2111, 1747, 2121, 1768, 1762, 3156, 
         1761}], 
        Line3DBox[{1725, 2104, 1711, 1712, 3144, 2097, 1713, 1746, 3154, 2110,
          1745, 1919, 3358, 2112, 1748, 2122, 1766, 1767}], 
        Line3DBox[{1772, 2125, 1771, 1774, 3157, 2127, 1775, 1780, 3366, 2131,
          1779, 1784}], 
        Line3DBox[{1801, 1934, 3178, 1793, 3164, 1792, 3163, 1925, 3168, 1795,
          3167, 1794, 3165, 1926, 3166, 1927, 3284, 1973, 3286, 1975, 3294, 
         1888, 3293, 1887, 3291, 1881, 3277, 1879, 3274, 3273, 1878, 1968}], 
        Line3DBox[{1803, 1802, 3179, 1800, 3177, 1791, 3162, 1790, 3161, 1789,
          3160, 1924, 3169, 1928, 3170, 1929, 3287, 1976, 3288, 1884, 3285, 
         1974, 3292, 1886, 3290, 1885, 3289, 1880, 3276, 3275, 1969, 1970}], 
        Line3DBox[{1810, 1939, 3189, 1941, 3193, 1813, 3192, 1805, 3181, 1804,
          3180, 1935, 3187, 1808, 3184, 1937, 3278, 1971, 3280, 1854, 3237, 
         1957, 3238, 1958, 3241, 1959, 3242, 1848, 3233, 3232, 1847, 1956}], 
        Line3DBox[{1812, 1942, 3190, 1811, 3188, 1940, 3191, 1807, 3183, 1806,
          3182, 1936, 3186, 1809, 3185, 1938, 3282, 1972, 3283, 1883, 3281, 
         1882, 3279, 1857, 3244, 1856, 3243, 1855, 3240, 3239, 1846, 1955}], 
        Line3DBox[{1831, 1830, 3210, 1826, 3207, 1827, 3209, 1829, 3217, 1835,
          3215, 1833, 3211, 1817, 3196, 1816, 3195, 1814, 3194, 1815, 3205, 
         1825, 3206, 1823, 3202, 1821, 3200, 1822, 3228, 3227, 1840, 1841}], 
        Line3DBox[{1832, 1828, 3208, 1946, 3214, 1948, 3216, 1834, 3212, 1947,
          3213, 1819, 3198, 1818, 3197, 1943, 3204, 1824, 3203, 1820, 3199, 
         1944, 3201, 1945, 3229, 1953, 3230, 1842, 3226, 3225, 1952, 1954}], 
        Line3DBox[{1844, 1843, 3231, 1838, 3220, 1949, 3222, 1950, 3223, 1951,
          3224, 1799, 3175, 1932, 3176, 1933, 3267, 1875, 3265, 1965, 3270, 
         1967, 3272, 1871, 3258, 1870, 3257, 1960, 3264, 3263, 1963, 1964}], 
        Line3DBox[{1845, 1839, 3221, 1837, 3219, 1836, 3218, 1798, 3174, 1797,
          3173, 1796, 3171, 1930, 3172, 1931, 3266, 1966, 3271, 1877, 3269, 
         1876, 3268, 1874, 3262, 1873, 3261, 1872, 3260, 3259, 1961, 1962}], 
        Line3DBox[{1853, 1852, 3236, 1849, 3234, 1850, 3235, 1851, 3252, 1867,
          3253, 1865, 3251, 1866, 3256, 1869, 3255, 1868, 3254, 1861, 3247, 
         1862, 3248, 1860, 3246, 1858, 3245, 1859, 3250, 3249, 1863, 1864}]}, {
        GrayLevel[0.2], 
        Line3DBox[{2183, 2182, 2787, 2184, 3304, 2170, 3078, 2149, 2762, 2150,
          3082, 2172, 3079, 2171, 2783, 2175, 3081, 2782, 2174, 2330, 3136, 
         2740, 3335, 2851, 2331, 2333, 3145, 2748, 3348, 2879, 2385, 2746, 
         3344, 2875, 2381, 2745, 3144, 2380, 3346, 2877, 2383, 2425, 3159, 
         2753, 3362, 2898, 2418, 2420, 3157, 2421}], 
        Line3DBox[{2233, 3101, 2234, 2235, 2803, 2236, 2807, 3316, 2244, 2243,
          2808, 2240, 2806, 3315, 2241, 2397, 2885, 2398, 2887, 3354, 2400, 
         2391, 2882, 3071, 3054, 3138, 2339, 2862, 2354, 3069, 3056, 3139, 
         2342, 2860, 2343, 2861, 2350, 2351}], 
        Line3DBox[{2250, 3103, 2232, 2230, 2802, 3100, 2231, 2222, 2800, 3096,
          2223, 2242, 2809, 2239, 2805, 3314, 2238, 2200, 2790, 3306, 2201, 
         2399, 2886, 3353, 2390, 2386, 2880, 3349, 2387, 2888, 2355, 3070, 
         2356, 3141, 2358, 2864, 2352, 2353}], 
        Line3DBox[{2254, 3105, 2249, 2248, 2814, 3320, 2263, 2262, 2815, 3321,
          2229, 2228, 2801, 3099, 2227, 3098, 2226, 2202, 2791, 3307, 2199, 
         2198, 2792, 3089, 2203, 2388, 2881, 3350, 2389, 2394, 2883, 3351, 
         2395, 3073, 3057, 3140, 2357, 2863, 2346, 2347}], 
        Line3DBox[{2269, 3041, 2821, 3324, 2286, 3121, 2280, 3117, 2282, 2251,
          2811, 3318, 2732, 3130, 2310, 3128, 2307, 3042, 2836, 3329, 2736, 
         3132, 2191, 3087, 2193, 2217, 2797, 3312, 2212, 3091, 2208, 2206, 
         2795, 3310, 2215, 3150, 2403, 3148, 2377, 2371, 2871, 3340, 2367, 
         2369}], 
        Line3DBox[{2275, 3113, 2253, 3104, 2252, 2246, 2810, 3317, 2247, 2264,
          2816, 3322, 2265, 2255, 2812, 3106, 2225, 3097, 2224, 2237, 2804, 
         3102, 2197, 2196, 2793, 3308, 2204, 3090, 2205, 2396, 2884, 3352, 
         2393, 2392, 2889, 3356, 2405, 3153, 2407, 2891, 2344, 2345}], 
        Line3DBox[{2276, 3114, 2271, 3111, 2272, 2273, 2820, 3323, 2256, 3107,
          2257, 2260, 2813, 3319, 2261, 2303, 2830, 3125, 2302, 3124, 2245, 
         2189, 2788, 3085, 2186, 3084, 2185, 2221, 2799, 3095, 2220, 3094, 
         2219, 2406, 2890, 3152, 2402, 3060, 3072, 3355, 2744, 3342, 2373, 
         2874, 2348, 2349}], 
        Line3DBox[{2278, 3115, 2277, 2266, 2817, 3109, 2267, 3120, 2285, 2279,
          2818, 3116, 2259, 3108, 2258, 2309, 2831, 3127, 2300, 3123, 2301, 
         2306, 2835, 3328, 2190, 3086, 2188, 2187, 2789, 3305, 2195, 3093, 
         2211, 2210, 2794, 3309, 2214, 3147, 2401, 3146, 2376, 2374, 2873, 
         3343, 2375, 2379}], 
        Line3DBox[{2289, 2287, 2822, 2288, 2829, 2295, 2825, 2161, 2771, 2728,
          3297, 2141, 2772, 2156, 2766, 2154, 2765, 3066, 2155, 2839, 2319, 
         2847, 2326, 2848, 3049, 2845, 2325, 2742, 3338, 2865, 2359, 2866, 
         2360, 2870, 3058, 2364}], 
        Line3DBox[{2291, 2292, 2828, 2733, 3122, 2290, 2823, 2293, 2826, 2296,
          3326, 2139, 2757, 2140, 2760, 2726, 3295, 2137, 2777, 2164, 2775, 
         2774, 2165, 2316, 3337, 2854, 3052, 2853, 3046, 2323, 3332, 2842, 
         3043, 2838, 2317, 2743, 3339, 2867, 2361, 2868, 2363, 2869, 3059, 
         2365, 3143, 2366}], 
        Line3DBox[{2313, 2314, 2834, 2315, 2833, 3327, 2299, 2294, 2824, 2142,
          2758, 2143, 2769, 2157, 2767, 2158, 3067, 3298, 2729, 2768, 2159, 
         3068, 2318, 2846, 3048, 2844, 3047, 2843, 2324, 3142, 2341, 2859, 
         3055, 2858, 3053, 2857, 2338, 2340}], 
        Line3DBox[{2370, 2368, 3341, 2872, 2372, 2378, 3149, 2404, 3151, 2216,
          3311, 2796, 2207, 2209, 3092, 2213, 3313, 2798, 2218, 2194, 3088, 
         2192, 3133, 2837, 2304, 2305, 3126, 2308, 3129, 2311, 3131, 2832, 
         2312, 2284, 3119, 2283, 3118, 2819, 2281, 2274, 3112, 2268, 3110, 
         2270}], 
        Line3DBox[{2414, 3155, 2415, 2412, 2894, 3359, 2751, 2411, 2893, 3358,
          2410, 2408, 2892, 3357, 2749, 3063, 2900, 3364, 2419, 3064, 2901, 
         3365, 2337, 2327, 2849, 3333, 2737, 3135, 2739, 2336, 2856, 3137, 
         2335, 2168, 2780, 3076, 2152, 2763, 2145, 3074, 2146, 2764, 2153, 
         3303, 2181, 2786, 2179, 3302, 2177, 2784, 2176, 2734}], 
        Line3DBox[{2417, 3156, 2332, 3051, 2896, 3361, 2752, 3062, 2897, 2416,
          2895, 3360, 2362, 2322, 2841, 3331, 2320, 3044, 2840, 3330, 2321, 
         3045, 2855, 2334, 2852, 3336, 2741, 2166, 2778, 3300, 2163, 2773, 
         2162, 3299, 2730, 2776, 2144, 2759, 2138, 3296, 2727, 2770, 2160, 
         3325, 2298, 2827, 2297, 2735}], 
        Line3DBox[{2424, 2423, 2902, 3366, 2755, 3158, 2413, 3061, 2903, 3367,
          2756, 3065, 2904, 3368, 2409, 3154, 2750, 2382, 2876, 3345, 2747, 
         2422, 2899, 3363, 2754, 2384, 2878, 3347, 2329, 3134, 2328, 3050, 
         2850, 3334, 2738, 2173, 2781, 3301, 2167, 2779, 3040, 3080, 2151, 
         3075, 2148, 2761, 2147, 3077, 2169, 2785, 2178, 3083, 2180, 2731}], 
        Line3DBox[{2501, 3194, 2502, 2505, 2950, 3203, 2523, 2680, 3010, 3265,
          2681, 2683, 3016, 3271, 2693, 2692, 3033, 3288, 2717, 2716, 3031, 
         3286, 2699, 2698, 3028, 3283, 2709, 2708, 3025, 3280, 2599, 2979, 
         2598, 3254, 2649, 2999, 2627, 2628}], 
        Line3DBox[{2503, 3195, 2504, 2506, 2951, 3204, 2524, 2684, 3012, 3267,
          2679, 2678, 3011, 3266, 2682, 2691, 3032, 3287, 2719, 2715, 3029, 
         3284, 2701, 2700, 3027, 3282, 2714, 2707, 3023, 3278, 2609, 2981, 
         2608, 3255, 2650, 2998, 2651, 2652}], 
        Line3DBox[{2509, 3196, 2510, 2511, 2946, 3197, 2512, 2462, 2921, 3176,
          2454, 2453, 2917, 3172, 2456, 2450, 2915, 3170, 2442, 2441, 2911, 
         3166, 2445, 2475, 2934, 3185, 2484, 2478, 2930, 3184, 2479, 2931, 
         2480, 3256, 2654, 3001, 2655, 2656}], 
        Line3DBox[{2518, 3200, 2519, 2569, 2967, 3230, 2574, 2658, 3002, 3257,
          2659, 2662, 3006, 3261, 2673, 2672, 3034, 3289, 2720, 2706, 3022, 
         3277, 2619, 2618, 2988, 3243, 2611, 2610, 2987, 3242, 2578, 2969, 
         2577, 3245, 2624, 2994, 2636, 2639}], 
        Line3DBox[{2521, 3202, 2522, 2570, 2966, 3229, 2573, 2660, 3003, 3258,
          2661, 2663, 3007, 3262, 2675, 2674, 3035, 3290, 2721, 2722, 3036, 
         3291, 2601, 2600, 2989, 3244, 2613, 2612, 2986, 3241, 2580, 2970, 
         2579, 3246, 2625, 2995, 2637, 2638}], 
        Line3DBox[{2526, 3205, 2525, 2514, 2948, 3199, 2515, 2685, 3015, 3270,
          2694, 2688, 3014, 3269, 2689, 2690, 3030, 3285, 2718, 2723, 3039, 
         3294, 2713, 2711, 3026, 3281, 2607, 2606, 2982, 3237, 2597, 2978, 
         2596, 3247, 2626, 2991, 2622, 2623}], 
        Line3DBox[{2527, 3206, 2517, 2516, 2949, 3201, 2520, 2686, 3017, 3272,
          2695, 2687, 3013, 3268, 2665, 2664, 3037, 3292, 2724, 2725, 3038, 
         3293, 2712, 2710, 3024, 3279, 2605, 2604, 2983, 3238, 2603, 2980, 
         2602, 3248, 2629, 2990, 2620, 2621}], 
        Line3DBox[{2528, 3207, 2529, 2532, 2955, 3214, 2544, 2554, 2959, 3220,
          2555, 2551, 2958, 3219, 2552, 2465, 2922, 3177, 2433, 2432, 2909, 
         3164, 2438, 2489, 2937, 3188, 2490, 2498, 2945, 3193, 2495, 2941, 
         2494, 3234, 2589, 2976, 2594, 2647}], 
        Line3DBox[{2533, 3209, 2534, 2545, 2956, 3216, 2547, 2558, 2961, 3222,
          2557, 2549, 2957, 3218, 2550, 2434, 2907, 3162, 2435, 2436, 2908, 
         3163, 2437, 2492, 2943, 3191, 2499, 2500, 2944, 3192, 2497, 2942, 
         2496, 3235, 2593, 2975, 2592, 2646}], 
        Line3DBox[{2535, 3210, 2536, 2530, 2952, 3208, 2531, 2575, 2968, 3231,
          2576, 2556, 2960, 3221, 2553, 2466, 2924, 3179, 2464, 2463, 2923, 
         3178, 2444, 2443, 2939, 3190, 2488, 2487, 2938, 3189, 2491, 2940, 
         2493, 3236, 2595, 2977, 2590, 2591}], 
        Line3DBox[{2541, 3211, 2508, 2507, 2947, 3198, 2513, 2461, 2920, 3175,
          2460, 2451, 2916, 3171, 2452, 2449, 2914, 3169, 2448, 2439, 2910, 
         3165, 2440, 2473, 2935, 3186, 2485, 2486, 2936, 3187, 2483, 2933, 
         2482, 3251, 2644, 3000, 2653, 2657}], 
        Line3DBox[{2546, 3215, 2538, 2537, 2954, 3213, 2543, 2562, 2963, 3224,
          2561, 2457, 2918, 3173, 2458, 2426, 2905, 3160, 2427, 2430, 2912, 
         3167, 2446, 2474, 2927, 3182, 2468, 2467, 2925, 3180, 2471, 2932, 
         2481, 3253, 2643, 2996, 2642, 2645}], 
        Line3DBox[{2548, 3217, 2540, 2539, 2953, 3212, 2542, 2559, 2962, 3223,
          2560, 2459, 2919, 3174, 2455, 2428, 2906, 3161, 2429, 2431, 2913, 
         3168, 2447, 2476, 2928, 3183, 2470, 2469, 2926, 3181, 2472, 2929, 
         2477, 3252, 2648, 2997, 2640, 2641}], 
        Line3DBox[{2572, 3228, 2566, 2564, 2965, 3226, 2568, 2667, 3009, 3264,
          2677, 2669, 3005, 3260, 2671, 2703, 3021, 3276, 2705, 2697, 3019, 
         3274, 2617, 2615, 2985, 3240, 2588, 2586, 2974, 3233, 2584, 2972, 
         2582, 3250, 2633, 2993, 2631, 2635}], 
        Line3DBox[{2634, 2630, 2992, 2632, 3249, 2581, 2971, 2583, 3232, 2973,
          2585, 2587, 3239, 2984, 2614, 2616, 3273, 3018, 2696, 2704, 3275, 
         3020, 2702, 2670, 3259, 3004, 2668, 2676, 3263, 3008, 2666, 2567, 
         3225, 2964, 2563, 2565, 3227, 2571}]}}}, 
     VertexNormals -> CompressedData["
1:eJzsnPk71N8f99NiC60kRamU+lhCyNapVCJRSoqEULKXIqWNUopISGlBEiIS
UZaXNfs+ZjPMvs/Ys4Z7vtd9/xH3D80v7+t6zLnOnPc5r/N8PZ+/jOrFADvP
xYsWLVKXXbRoieiZb/z3ytoXBHhb+p+00zIhjGb9nVZWq4YA64BjOzz7QWNl
/4lFewRgeGyrUpJTOayR/D5gn0aAHZdVy9rXCQE1Xj+Ysb8Cfhd4mXW7VUPf
T7teO0khfNq7JdY2lAC0R8SFCwpVMFTBm3x9bwiS42vaO74APB1cQZUuq4A/
nk4s2Q1C0PB6RK6MIsChc7KE91QqXL4+Z9FTzoY9N2zil5ThYM3Sr2tXduHg
7k6Np5gKNngmbpEfw1OhjrFn+coRHOx376OravLhLdsyxxmPg3Kz4mCbA71Q
23KFcX0zBwgJ00fXbaWB/lS2ROZ/NHilQFRev4kjes/hi7t39ULCLvMMRC0H
0zB8DvawALLPWP+WV+wHyldDivr8TzB5sUnV8hoXhv+znpRRpcMiRnldfeI3
cPm4rTLrIRfOPI0kkbToMN/9zKLVox5ZVZdHWDEE0Pp8kP3tHAE2PxgtfVRe
g4zm125PPs6FNEIALWQZHUxr/76vWktEtw6q4ZJ382Cjw5OrS4QECDhyd/iF
VSfSHmmX9SvngGX7csaZZBp4zkosuMYQ0Raj1IWf2Tw4Kju/c5UnDjZJvzpt
p06HiicssUh/0fx2xXOG8T8hsTsyOW4PHTAdH+p+3+UCIeezis6OQuDIRd9l
nWTDOvfx7Y1kJlyfep83Q8mAKvdja79L04Fx3Vlbz4ILzUaL1U6M1KDUwqQb
HtvZYJCR8GnqBxP4s9q/Sg5XIXA9daadwYX+msMPTjbQQBfz9e2pqXfgZKF0
m72fDe7Tw3RsBxPcPk3tuT5YDGK3w8tyerkwdMyTeKacBmcsvPrSsYUgccF8
9aunfOgMHr0JFhRQrT2jPE1LgNgKxbS8O3zYnDXwXHk/BZoXp7wUnCmAu6nZ
gYIaLti3J8vCVxo4LIg1OLN/oeKf5audT3Mh4UNxfcJeOixRSl2V1V6OrFqS
BSZpNGjasiRFp4wDRh/myg7v7ER15mtaBpazQXhWR7DuPROW9yedyjCsQ+KP
ahwX2ZPQe983TShIADPttENu2Ar0IkRt244aDMpzes9IqRICiXngzqdjv1He
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
8q0v7kkkep2apC0+w0HRXkrhiVI0SNaL3L9qcQ1STMipa/jGQ3pHWmvNPg3C
tc5xu68DBbCi+Eh6wgEOcmRc/CmRQgWLuvcFx0Q6kf6BW0bPh/ogvXxtQoNT
LzSXrT/+V4WLrMYOWT2upsCxHc/JL88QYdYoLlLWnY0m16/aOI717ByH7SJh
zwhQJvTzddscF5VlS++7cooIQRL2WvEjeIjyWDZFtuUh9z1D6j3GeNBMT2gK
YPWA4PgXjSFlProeumXJzsABmPMxcG7zw0FFnRxjaj8XOY57fyk50QPVuHNk
I61uoO8ezF/VyEe87s8Rqqtw8E9ryeqArm4Y6/h6+PNjPmIkOGWlUrsh/+OG
x5ahfXD4j/GlqDM8zFfYE6y7rUBd85aQ+6Eb9mYfMnj2WIB8ziiIzk3QoNBc
LpF4Aw+rjy5ba2bEQjJ6J2fnDpKh6Nod0uLH/SDjaXh7qwMbfd/dfyrNnQYr
RUyaaY04OGuRYufdyULcoGvivGgqJGq95Q239ICk9GyA93s2qrw9W7C8agju
a2VHCr71Q2lPxf4HH+loTwqf7JJBAq/c59IX5HrgW3AOaWIFD6U6iumyN/aB
3IYzlh/mu2BrqKjxXCoP4VzWX322jQ4fXrdFB08Q4NzLJ0IxXxkLfw+/oC/o
C/qCvqAv6Av6gr6gL+gL+oK+oC/oC/qCvqAv6Av6gr6gL+gL+oK+oC/o/490
w+kNxnt9ekHSnu/xXlwAxbyXbTvv/wDbXTPP89qpUP3ZlhIPLNAye3QMxyCA
B9Fj3TKdCtg3uJlBUeTDkoj26stlA5BW7JDk41yPekeY5mFVAjB0Zedf+NGD
PtoG1eioDcHFOisN7kMOKLLkPHUciyBHWyd0bx0Lkj6s9Wm1p0Le2sisWsde
eFJrpa+O+Mi/LbnnwBIcXD1TQTAPxYFNWablb8NWwDW88CzKp8ClQXyxqTMX
rFquzGyIHQKeloxPoC8N6kpd7tedoUKY8FvjqZ19MFS/z6bmFhUoXW/DmadZ
8OoKe56lL0Cb2dxhs684OPko3Vv7VCtsiz+TfucuDTp0VziNnMeuRyQ1dSRw
CKl9Fz41Z8KG4a5NXw+kUSF60ZKeuht4xL85avPFng5J4R56YjJDcPnJuI/C
7UHk7th725PPge1Eb9zXb2TYcPybsPQDHHp2Qv9nxW0KlKg3OcfOMiB1eY+9
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
      "]], Axes -> True, AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}, BoxRatios -> {1, 1, 1}, DisplayFunction -> 
    Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {359.85804666450304`, 346.79965917623275`}, ImageSizeRaw -> 
    Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]]}, PlotRange -> {{-3, 2}, {-3, 2}, {-3, 2}}, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {0.2514808798244578, -0.157462318384128, 
     3.3707511010710673`}, 
    ViewVertical -> {0.07040380578676478, 0.777904353901994, 
     0.624426232881884}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{"k", " ", "x"}], "+", "y"}], "\[LongEqual]", 
         RowBox[{"-", "2"}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"2", " ", "x"}], "-", 
           RowBox[{"2", " ", "y"}]}], "\[LongEqual]", "4"}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7574192326057005`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"940dcc05-1914-4e72-b951-c266c11a4977"]
}, Open  ]],

Cell[TextData[{
 "Optional 1\nConsider the following matrix\nA=",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"\[Pi]", "\[Pi]", "\[Pi]"},
      {
       SuperscriptBox["\[Pi]", "2"], 
       SuperscriptBox["\[Pi]", "2"], 
       SuperscriptBox["\[Pi]", "2"]},
      {
       SuperscriptBox["\[Pi]", "3"], 
       SuperscriptBox["\[Pi]", "3"], 
       SuperscriptBox["\[Pi]", "3"]}
     }], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "27475d1d-b259-4003-97ed-e506627e8ca9"],
 "\n1. Find the reduced row echelon from of A; then find the rank of A.\n2. \
How can you enter in Mathenatica (in one line) the matrix A? (without typing \
every entry!). Hint: Consider the Table command.\n3. Now generalize the \
result as follows: let X be the following arbitrary square matrix of size n, \
where c is any non-zero number. Compute the rank of X.\nX=",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"c", "c", "\[CenterEllipsis]", "c"},
      {
       SuperscriptBox["c", "2"], 
       SuperscriptBox["c", "2"], "\[CenterEllipsis]", 
       SuperscriptBox["c", "2"]},
      {"\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]", 
       "\[VerticalEllipsis]"},
      {
       SuperscriptBox["c", "n"], 
       SuperscriptBox["c", "n"], "\[CenterEllipsis]", 
       SuperscriptBox["c", "n"]}
     }], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "53a964f3-7415-443a-9896-4fceeb08684f"]
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.7574202950423822`*^9, 3.7574205969597783`*^9}, {
   3.7574206377683215`*^9, 3.757420645530402*^9}, {3.75742089608316*^9, 
   3.757420899121004*^9}, 
   3.7574213108746777`*^9},ExpressionUUID->"16d73eb3-0d81-45aa-bf23-\
dacd81b83a42"],

Cell["Optional 1.1", "Text",
 CellChangeTimes->{{3.757420908025755*^9, 
  3.757420909265439*^9}},ExpressionUUID->"15250970-7b1c-4325-a72b-\
95f6d3beab76"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   FormBox[
    RowBox[{"(", GridBox[{
       {"\[Pi]", "\[Pi]", "\[Pi]"},
       {
        SuperscriptBox["\[Pi]", "2"], 
        SuperscriptBox["\[Pi]", "2"], 
        SuperscriptBox["\[Pi]", "2"]},
       {
        SuperscriptBox["\[Pi]", "3"], 
        SuperscriptBox["\[Pi]", "3"], 
        SuperscriptBox["\[Pi]", "3"]}
      }], ")"}],
    TraditionalForm]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<RowReduce[A]=\>\"", " ", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"RowReduce", "[", "A", "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<MatrixRank[A]=\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixRank", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.757420946651684*^9, 3.7574209853929157`*^9}, {
  3.7574210216835823`*^9, 3.7574212094691677`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"9bd61dcd-e3cd-45b1-86a3-fe6d2975fc52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\<\"RowReduce[A]=\"\>", " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "1", "1"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Print",
 CellChangeTimes->{{3.7574210401465015`*^9, 3.757421209966796*^9}},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"2f22b747-d4bf-4a86-8569-b4404c8e8380"],

Cell[BoxData["\<\"MatrixRank[A]=\"\>"], "Print",
 CellChangeTimes->{{3.7574210401465015`*^9, 3.757421209974775*^9}},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"39a40586-0c33-4eeb-bcd9-cf7e2b8d3e42"]
}, Open  ]],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.757421209979765*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"c38098f0-3e40-40e9-ad33-4fffa4880b04"]
}, Open  ]],

Cell["Optional 1.2", "Text",
 CellChangeTimes->{{3.7574209179961553`*^9, 
  3.75742092491952*^9}},ExpressionUUID->"da4f6680-f672-4413-9a52-\
cf4991e96b44"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Pi", "^", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.7574212252399645`*^9, 3.757421288197031*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"60987b69-c655-4050-8aec-beeb15c54c7b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\[Pi]", "\[Pi]", "\[Pi]"},
     {
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["\[Pi]", "2"]},
     {
      SuperscriptBox["\[Pi]", "3"], 
      SuperscriptBox["\[Pi]", "3"], 
      SuperscriptBox["\[Pi]", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.757421284810185*^9, 3.7574212887106757`*^9}},
 CellLabel->
  "Out[149]//MatrixForm=",ExpressionUUID->"9ce315c2-5efa-4f8c-9a26-\
2a853abbc30f"]
}, Open  ]],

Cell[TextData[{
 "Optional 1.3\nX=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"c", "c", "\[CenterEllipsis]", "c"},
       {
        SuperscriptBox["c", "2"], 
        SuperscriptBox["c", "2"], "\[CenterEllipsis]", 
        SuperscriptBox["c", "2"]},
       {"\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]", 
        "\[VerticalEllipsis]"},
       {
        SuperscriptBox["c", "n"], 
        SuperscriptBox["c", "n"], "\[CenterEllipsis]", 
        SuperscriptBox["c", "n"]}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a6c734fa-fd71-4044-930b-edb84a42d2d8"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SubscriptBox["X", "11"]], 
         SubscriptBox["R", "1"]}], "\[RightArrow]", 
        SubscriptBox["R", "1"]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SubscriptBox["X", "21"]], 
         SubscriptBox["R", "2"]}], "\[RightArrow]", 
        SubscriptBox["R", "2"]}]},
      {"\[VerticalEllipsis]"},
      {
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SubscriptBox["X", "n1"]], 
         SubscriptBox["R", "n"]}], "\[RightArrow]", 
        SubscriptBox["R", "n"]}]}
     }], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "b21854ae-aca8-47fd-af4a-0f3b8ed4408e"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "1", "\[CenterEllipsis]", "1"},
       {"1", "1", "\[CenterEllipsis]", "1"},
       {"\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]", 
        "\[VerticalEllipsis]"},
       {"1", "1", "\[CenterEllipsis]", "1"}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "284af21d-991e-4a26-a677-f9785707be43"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["R", "2"], "-", 
          SubscriptBox["R", "1"]}], "\[RightArrow]", 
         SubscriptBox["R", "2"]}]},
       {
        RowBox[{
         RowBox[{
          SubscriptBox["R", "3"], "-", 
          SubscriptBox["R", "1"]}], "\[RightArrow]", 
         SubscriptBox["R", "3"]}]},
       {"\[VerticalEllipsis]"},
       {
        RowBox[{
         RowBox[{
          SubscriptBox["R", "n"], "-", 
          SubscriptBox["R", "1"]}], "\[RightArrow]", 
         SubscriptBox["R", "n"]}]}
      }], "\[DoubleRightArrow]"}]}], TraditionalForm]],ExpressionUUID->
  "47cc293c-4b04-4f67-a7da-320bbefe25e7"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"1", "1", "\[CenterEllipsis]", "1"},
      {"0", "0", "\[CenterEllipsis]", "0"},
      {"\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]", 
       "\[VerticalEllipsis]"},
      {"0", "0", "\[CenterEllipsis]", "0"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "27da8b3f-6a0f-44d1-89ae-69c6b8f45e19"]
}], "Text",
 CellChangeTimes->{{3.757420923499447*^9, 3.7574209256161456`*^9}, {
  3.7574217122434793`*^9, 3.757422004188324*^9}, {3.757430876925661*^9, 
  3.7574308997952995`*^9}},ExpressionUUID->"5fc7b9df-a9e7-464e-9d94-\
b1b17e6d83da"],

Cell[TextData[{
 "Optional 2\nFor what value(s) of k, if any, will the following system:\n",
 Cell[BoxData[
  FormBox[
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"x", "+", "y", "+", "kz"}], 
          RowBox[{"=", "1"}]},
         {
          RowBox[{"x", "+", "ky", "+", "z"}], 
          RowBox[{"=", "1"}]},
         {
          RowBox[{"kx", "+", "y", "+", "z"}], 
          RowBox[{"=", 
           RowBox[{"-", "2"}]}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cb9a6d4e-dbe5-469e-bc54-2b05822c9c7a"],
 "\nhave\n1. No solution\n2. A unique solution\n3. Infinitely many solutions\n\
Hint. Find the reduced echelon form of the augmented matrix, then analyze \
different cases (beware of division by zero!).\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"x", "+", "y", "+", "kz"}], 
           RowBox[{"=", "1"}]},
          {
           RowBox[{"x", "+", "ky", "+", "z"}], 
           RowBox[{"=", "1"}]},
          {
           RowBox[{"kx", "+", "y", "+", "z"}], 
           RowBox[{"=", 
            RowBox[{"-", "2"}]}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ce7d8fdd-404f-43c6-96b9-b5b6de994412"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "1", "k", "1"},
       {"1", "k", "1", "1"},
       {"k", "1", "1", 
        RowBox[{"-", "2"}]}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ab1488a0-d7e2-491f-8180-b5664dc1e20e"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "1"], "\[LeftRightArrow]", 
    SubscriptBox["R", "3"], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2732c5ce-279f-4546-b4e8-7903f147944f"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"k", "1", "1", 
        RowBox[{"-", "2"}]},
       {"1", "k", "1", "1"},
       {"1", "1", "k", "1"}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "46723601-4d07-4d3c-ade1-3c0eadd4cc65"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "k"], 
     SubscriptBox["R", "1"]}], "\[RightArrow]", 
    SubscriptBox["R", "1"], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "43360901-8097-4920-9700-3dab1453fe6b"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"1", "k", "1", "1"},
       {"1", "1", "k", "1"}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "26790f38-ef13-46f5-88b2-397d45d4aa2f"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{GridBox[{
      {
       RowBox[{
        RowBox[{
         SubscriptBox["R", "2"], "-", 
         SubscriptBox["R", "1"]}], "\[RightArrow]", 
        SubscriptBox["R", "2"]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["R", "3"], "-", 
         SubscriptBox["R", "1"]}], "\[RightArrow]", 
        SubscriptBox["R", "3"]}]}
     }], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "95d23052-c129-4907-bee0-6d2b222aebf0"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"0", 
        RowBox[{"k", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"1", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"1", "+", 
         FractionBox["2", "k"]}]},
       {"0", 
        RowBox[{"1", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"k", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"1", "+", 
         FractionBox["2", "k"]}]}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "7ca9844b-364d-4eb6-9142-4e0f565515b8"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["R", "1"], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["k", "2"]}]], 
      SubscriptBox["R", "2"]}]}], "\[RightArrow]", 
    SubscriptBox["R", "1"], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "66038439-473e-46b0-a39a-26a37f939f89"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", 
        FractionBox["1", 
         RowBox[{"1", "+", "k"}]], 
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"2", "k"}]}], 
         RowBox[{"1", "-", 
          SuperscriptBox["k", "2"]}]]},
       {"0", 
        RowBox[{"k", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"1", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"1", "+", 
         FractionBox["2", "k"]}]},
       {"0", 
        RowBox[{"1", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"k", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"1", "+", 
         FractionBox["2", "k"]}]}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "f846142d-d3e4-43e2-b552-11ffe9eb2910"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["k", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["k", "2"]}]], 
     SubscriptBox["R", "2"]}], "\[RightArrow]", 
    SubscriptBox["R", "2"], "\[DoubleRightArrow]"}], TraditionalForm]],
  ExpressionUUID->"3518e07b-7957-4c67-bea1-ef77cc9b9d66"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", 
        FractionBox["1", 
         RowBox[{"1", "+", "k"}]], 
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"2", "k"}]}], 
         RowBox[{"1", "-", 
          SuperscriptBox["k", "2"]}]]},
       {"0", "1", 
        FractionBox["1", 
         RowBox[{"1", "+", "k"}]], 
        FractionBox[
         RowBox[{"2", "+", "k"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["k", "2"]}]]},
       {"0", 
        RowBox[{"1", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"k", "-", 
         FractionBox["1", "k"]}], 
        RowBox[{"1", "+", 
         FractionBox["2", "k"]}]}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "56152261-ea0e-4fd6-ab91-36e7fedb9aa4"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["R", "3"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", "k"]}], ")"}], 
      SubscriptBox["R", "2"]}]}], "\[RightArrow]", 
    SubscriptBox["R", "3"], "\[DoubleRightArrow]"}], TraditionalForm]],
  ExpressionUUID->"13dd9a79-b6c2-48c2-abbe-8f1300198ff9"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", 
        FractionBox["1", 
         RowBox[{"1", "+", "k"}]], 
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"2", "k"}]}], 
         RowBox[{"1", "-", 
          SuperscriptBox["k", "2"]}]]},
       {"0", "1", 
        FractionBox["1", 
         RowBox[{"1", "+", "k"}]], 
        FractionBox[
         RowBox[{"2", "+", "k"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["k", "2"]}]]},
       {"0", "0", 
        RowBox[{"k", "-", 
         FractionBox["2", 
          RowBox[{"1", "+", "k"}]]}], 
        RowBox[{"1", "+", 
         FractionBox["1", 
          RowBox[{"1", "+", "k"}]]}]}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "e41943db-1f7c-4539-8416-b3f541ba6f53"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", "k"}], 
      RowBox[{
       RowBox[{"-", "2"}], "+", "k", "+", 
       SuperscriptBox["k", "2"]}]], 
     SubscriptBox["R", "3"]}], "\[RightArrow]", 
    SubscriptBox["R", "3"], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b56b3af2-b29a-4918-a533-8f75cffc7da4"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", 
        FractionBox["1", 
         RowBox[{"1", "+", "k"}]], 
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"2", "k"}]}], 
         RowBox[{"1", "-", 
          SuperscriptBox["k", "2"]}]]},
       {"0", "1", 
        FractionBox["1", 
         RowBox[{"1", "+", "k"}]], 
        FractionBox[
         RowBox[{"2", "+", "k"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["k", "2"]}]]},
       {"0", "0", "1", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "k"}]]}
      }], ")"}], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "ad45c650-d3c8-4827-b349-15beec85ef26"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{GridBox[{
      {
       RowBox[{
        RowBox[{
         SubscriptBox["R", "2"], "-", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "+", "k"}]], 
          SubscriptBox["R", "3"]}]}], "\[RightArrow]", 
        SubscriptBox["R", "2"]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["R", "1"], "-", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "+", "k"}]], 
          SubscriptBox["R", "3"]}]}], "\[RightArrow]", 
        SubscriptBox["R", "1"]}]}
     }], "\[DoubleRightArrow]"}], TraditionalForm]],ExpressionUUID->
  "510f0cc2-5251-4385-a5dc-8f785f59eb2e"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"1", "0", "0", 
       RowBox[{"-", 
        FractionBox["2", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "k"}]]}]},
      {"0", "1", "0", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "k"}]]},
      {"0", "0", "1", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "k"}]]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "9938a82b-60e3-4616-984c-181a3a6b5cb8"],
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{"z", "=", 
          FractionBox["1", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "k"}]]}]},
        {
         RowBox[{"y", "=", 
          FractionBox["1", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "k"}]]}]}
       }]},
     {
      RowBox[{"x", "=", 
       RowBox[{"-", 
        FractionBox["2", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "k"}]]}]}]}
    }], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6eea63f6-482c-4e83-92ac-14fde78638f2"]
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.757420672955549*^9, 3.7574208404151363`*^9}, {
  3.7574286550271645`*^9, 3.7574286552286053`*^9}, {3.7574286896925907`*^9, 
  3.757429212789496*^9}, {3.757429255788316*^9, 
  3.7574300339319925`*^9}},ExpressionUUID->"96863750-fa04-4585-b81d-\
60429303bb5f"],

Cell["\<\
Optional 2.1
The system does not have a solution for k = 1.\
\>", "Text",
 CellChangeTimes->{{3.757430102264867*^9, 3.7574301620492287`*^9}, 
   3.757430299204959*^9},ExpressionUUID->"cea65a07-9c13-45b9-ab22-\
f1f410a79c8d"],

Cell["\<\
Optional 2.2 & 2.3
Since y = z, the system does not have a unique solution. Therefore the system \
has infinitely many solutions for k \[NotEqual] 1.\
\>", "Text",
 CellChangeTimes->{{3.7574301158864202`*^9, 3.7574301203034544`*^9}, {
  3.757430169037755*^9, 
  3.757430296962998*^9}},ExpressionUUID->"c2f6389c-a83a-4bba-b32c-\
e9de9a0db944"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", GridBox[{
      {"1", "1", "k", "1"},
      {"1", "k", "1", "1"},
      {"k", "1", "1", 
       RowBox[{"-", "2"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowReduce", "[", "A", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y", "+", 
       RowBox[{"k", "*", "z"}]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"x", "+", 
       RowBox[{"k", "*", "y"}], "+", "z"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"k", "*", "x"}], "+", "y", "+", "z"}], "\[Equal]", 
      RowBox[{"-", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7574221617426605`*^9, 3.757422213413122*^9}, {
  3.757426492485716*^9, 3.7574265693420973`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"df150254-9a41-4d87-8e43-d905a2138319"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", 
      RowBox[{"-", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "k"}]]}]},
     {"0", "1", "0", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "k"}]]},
     {"0", "0", "1", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "k"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7574222143970776`*^9, {3.7574265496568956`*^9, 3.757426569718092*^9}},
 CellLabel->
  "Out[230]//MatrixForm=",ExpressionUUID->"651fecd9-e300-42e3-90a7-\
0437a473bbd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["2", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "k"}]]}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "k"}]]}], ",", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "k"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7574222143970776`*^9, {3.7574265496568956`*^9, 3.7574265697270727`*^9}},
 CellLabel->
  "Out[231]=",ExpressionUUID->"0f8dd5f0-4b47-4e8f-9cb3-8df6c30a4ba2"]
}, Open  ]]
},
WindowSize->{1066, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2315, 71, 177, "Text",ExpressionUUID->"b33b15ee-2887-44c2-9d4d-81bf0f6c8f8a"],
Cell[2876, 93, 178, 4, 44, "Text",ExpressionUUID->"e6af20e5-8c4d-4a70-a64b-bbfd5c4449de"],
Cell[CellGroupData[{
Cell[3079, 101, 6139, 165, 219, "Input",ExpressionUUID->"bf0d46ee-7b07-4210-aa5d-362dbddef8e1"],
Cell[9221, 268, 4859, 102, 369, "Output",ExpressionUUID->"9e85def0-457a-4189-9570-dedf4a0cb1e6"],
Cell[14083, 372, 378, 9, 32, "Output",ExpressionUUID->"0bc428e5-dd83-4299-a39b-e65d60f27617"]
}, Open  ]],
Cell[14476, 384, 148, 3, 34, "Text",ExpressionUUID->"0ce4c5eb-e894-4a9e-b387-d8fcdc5b5333"],
Cell[CellGroupData[{
Cell[14649, 391, 6150, 170, 219, "Input",ExpressionUUID->"9dc9ae44-a2a5-4704-9e45-025777255f66"],
Cell[20802, 563, 4356, 96, 369, "Output",ExpressionUUID->"121a532b-8bf7-4542-bc90-dc78d7c61536"],
Cell[25161, 661, 430, 10, 32, "Output",ExpressionUUID->"7253d116-a095-4854-bc02-16248a38817f"]
}, Open  ]],
Cell[25606, 674, 150, 3, 34, "Text",ExpressionUUID->"b3a52e77-4394-4978-aa3d-9e5ebc5e50e9"],
Cell[CellGroupData[{
Cell[25781, 681, 5689, 158, 143, "Input",ExpressionUUID->"2d2b09d7-3a90-4471-b971-9c5ac875d0b5"],
Cell[31473, 841, 5531, 115, 369, "Output",ExpressionUUID->"bcfb0825-0b07-4973-bf2b-e4654c5d7fad"],
Cell[37007, 958, 243, 4, 32, "Output",ExpressionUUID->"89779d5d-b303-4cbc-9ed7-9495fbf9f62d"]
}, Open  ]],
Cell[37265, 965, 4166, 132, 149, "Input",ExpressionUUID->"f0a150cb-6338-4ff7-8ead-938dad67757b"],
Cell[CellGroupData[{
Cell[41456, 1101, 1945, 58, 179, "Input",ExpressionUUID->"79b5e72b-b4fe-4cb0-ae09-da4a08ca91f1"],
Cell[43404, 1161, 757, 22, 62, "Output",ExpressionUUID->"28b8a3e5-6ffa-4188-9e11-d77fc8ccea2b"],
Cell[44164, 1185, 303, 8, 32, "Output",ExpressionUUID->"ae7a91bc-0fd3-4180-8efb-4f5a2081f9bb"],
Cell[44470, 1195, 208088, 3508, 366, "Output",ExpressionUUID->"940dcc05-1914-4e72-b951-c266c11a4977"]
}, Open  ]],
Cell[252573, 4706, 1782, 45, 276, "Text",ExpressionUUID->"16d73eb3-0d81-45aa-bf23-dacd81b83a42"],
Cell[254358, 4753, 154, 3, 34, "Text",ExpressionUUID->"15250970-7b1c-4325-a72b-95f6d3beab76"],
Cell[CellGroupData[{
Cell[254537, 4760, 959, 26, 127, "Input",ExpressionUUID->"9bd61dcd-e3cd-45b1-86a3-fe6d2975fc52"],
Cell[CellGroupData[{
Cell[255521, 4790, 850, 23, 50, "Print",ExpressionUUID->"2f22b747-d4bf-4a86-8569-b4404c8e8380"],
Cell[256374, 4815, 222, 4, 22, "Print",ExpressionUUID->"39a40586-0c33-4eeb-bcd9-cf7e2b8d3e42"]
}, Open  ]],
Cell[256611, 4822, 153, 3, 32, "Output",ExpressionUUID->"c38098f0-3e40-40e9-ad33-4fffa4880b04"]
}, Open  ]],
Cell[256779, 4828, 155, 3, 34, "Text",ExpressionUUID->"da4f6680-f672-4413-9a52-cf4991e96b44"],
Cell[CellGroupData[{
Cell[256959, 4835, 508, 14, 48, "Input",ExpressionUUID->"60987b69-c655-4050-8aec-beeb15c54c7b"],
Cell[257470, 4851, 986, 28, 83, "Output",ExpressionUUID->"9ce315c2-5efa-4f8c-9a26-2a853abbc30f"]
}, Open  ]],
Cell[258471, 4882, 3288, 102, 152, "Text",ExpressionUUID->"5fc7b9df-a9e7-464e-9d94-b1b17e6d83da"],
Cell[261762, 4986, 13843, 453, 621, "Text",ExpressionUUID->"96863750-fa04-4585-b81d-60429303bb5f"],
Cell[275608, 5441, 234, 6, 56, "Text",ExpressionUUID->"cea65a07-9c13-45b9-ab22-f1f410a79c8d"],
Cell[275845, 5449, 352, 8, 56, "Text",ExpressionUUID->"c2f6389c-a83a-4bba-b32c-e9de9a0db944"],
Cell[CellGroupData[{
Cell[276222, 5461, 1102, 32, 141, "Input",ExpressionUUID->"df150254-9a41-4d87-8e43-d905a2138319"],
Cell[277327, 5495, 1080, 33, 115, "Output",ExpressionUUID->"651fecd9-e300-42e3-90a7-0437a473bbd5"],
Cell[278410, 5530, 626, 20, 55, "Output",ExpressionUUID->"0f8dd5f0-4b47-4e8f-9cb3-8df6c30a4ba2"]
}, Open  ]]
}
]
*)

