(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    474981,       8124]
NotebookOptionsPosition[    473440,       8090]
NotebookOutlinePosition[    473781,       8105]
CellTagsIndexPosition[    473738,       8102]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"xMin", "=", 
   RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"x", "+", "y", "-", "z"}], "\[Equal]", "1"}], ",", 
     RowBox[{"x", "\[Equal]", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"x", "+", "y", "-", "z"}], "\[Equal]", "1"}], ",", 
     RowBox[{"x", "\[Equal]", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7572599138556294`*^9, 3.75726006679572*^9}, {
  3.7572601251157627`*^9, 3.7572602028180027`*^9}, {3.757260319031291*^9, 
  3.7572603502039223`*^9}, {3.757260492211244*^9, 3.7572604976596565`*^9}, {
  3.757260600226428*^9, 3.7572606120607653`*^9}, {3.757260643154643*^9, 
  3.757260691648012*^9}, {3.7572607569386687`*^9, 3.757260794775464*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"53996416-b7aa-491a-99c5-e70e2113f315"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJyEnXd4VkXz99MLqaSQENKp0qWJFHNoAgqC0gRBaYKIAiJI702kiohUpUlH
qjSB3CJVIITepPeaQCAJpL15fs/5zJG5n/t6+ee++F6T787OzpazO7Mb17n3
B5+6ODk5bS7s5OSa/9vy0IYf33B2MQa/m55S0zXa9tD5ja+65YYbIdtTjvzw
3FXw9ZW/71DZzcJTTzas912OJQ9Pt5ofDek2Os624vGEZz3zokQe/IvY61er
u1v4ojzXX6fkWfLrx3+zZ1hOSgLy6798+Ef1kXFGcvzWZgPupAk+Y3zhSjGu
Fg6Plkd/ygVHf8pt6fso5WuXYKlvavPSp7dk+hm2q65Pe2b4CZ7+tnGhnGuw
4D+vmFDrRVZhkYfntdhq91Y5F7YNHPBt0up0V6OK22SfxdkW/8DNl9c2d/MV
HpE3ceThhwf7wIP+8DQddqDqZy9D7OThp72wAzjtC065yMNz9ln/64WdQmyV
Qm8/6pgTbDiNLPvVy+pDE8E1D/poeXD4wdGH9gJHH+oLjh3wB3DaF39A/6qr
ApPz8orazF/REzw1+8+0RWOKCg/+pnH8DR78Hx7Kxc/BRc8n+3YEuPqKP2Af
2hH9weHHPhrH/vgh5SKP31Jf5MGRp13gwQ/RR/s59kEf5MHhB8duyN9fsi94
vkuc8VmtBytTXrjaFjdfVPZwgRDb1TILKw7OjRK8WKX0nZmugYJ3fFRk/Kkz
GYnIw0O92j3OfXdkQTeRB9/W+f3zWzwzE8HTl/h//NuTAJHHDsjTH8HxQ/Fn
sx2xM/YBFx6zP9K+4E4Xay1v4OIi9gT3qnV0Wp17aQnYDX7kwWkvLQ9PuGu1
Ov2dUhPwkwI/9NxaMMdP9MEfBDfrC/5B06nNJz92t5PHbtSX/kV76fHn28On
q897lJaInvAgT73oX8iDI0+7w4M8uNYTHuyAPtRX2svkAcdvwakv7Y4/gFMu
8mIH057g2FP7CeVSL/wEHP3BKVfsYPKIPa9+882wU4MT0RNc86CPlgeHHxx9
dHvZnC58OGZskrQLdnayXSt9fcXABPiRB0cf2gse5PFb8QeFUy+tJ/4g5Zr2
YRyWecTEGa+Yj7AP8sxH4IxjWl7WLeY8SL+GB3n6qcwXpvyptQWigvLnGeaF
g6/t+O5+9LNEcMYBxivmH+QZ3y7E/Bi3aUScyIMjzzgGD/LglMu4Cg844ye4
kVit4hj/ZMEZl5CHH1yXi/7wUF/GseQDCz+YFOwv9aXcE9+98/Vtdw/hQR4c
ecrVPMgzv1Bf9MF/qBf2AUdP/LB97afrkn0KCz/4HJ/Zf7l6RAhO/0IeHvoX
8xry4JejGxq5bqGCMw7oeZD+FVa6XuUzvtFiH/CWmXff9vaMEZx+p+XRn3LB
0Z9ynao4hzZxi5J+qudxcHhKxQ5w6egaLvog7xVeKHpqjoUjD46eulzksSfl
gmN/cHiQp59SX/yWfg2Of4IzziAPD/XFz+nv8NAf4UEeHHn44cFusn4w/RD7
gKMnOP6PPOViB/gZD9FH1wt70o/QE3n6HfzIgyNPufAwbsOD/uDIow96wq/X
b+DYk/7F+Iwd6EfglAvOulePY+Ayv5h+iP1FTxOX9Zsql3kEnPbFDtiHdgRn
vMKe1BeccvE3zQNOu4Djb1qecUbXi3EJ+yMPjv2pF+VqecYTPS/AQ73A0Qc9
GfeQB6e/g1NfcMrVPNiZ8YFywRlPwLGbHs+RZ1yl3ZEHR5527OHzzsVH463v
S/AJTyM/9XSLF5x+oeUpl3Ee+2MH2hH/Acf/wbEz/gmO3eBhvddup0+n6QHR
BvWSfYO0W5umfxtnoCfrPeTRU/YTTHlw5OdVqP1dDx+LB3lwypXvXJMHuyHf
oMECv0qTiwqP2h+QdRny4PDAD4+s4/i++P7ddnl+hQ38Qb4vTJx5Dfx25R1+
dUOjRF6+y0x5/A157AaOPDzYQb77TB6Nb/l0UoteviFSLuMnOPzgM7xeemwI
DrezM7jWHx6pL987pj7SjiZOvbCnfAeZ8tgffZAHRx47wIM8uC4XPakXPOD4
oXwHmfqAI48d4GfehEfj8KAn/Qt56gUOP/K0I3YQfvaFTP/XdqC/iJ+bdvCa
VibnYfSzBD0vgzN+gtfy+/pWVlT+97kpD0+p6EKTZwe5GazTsA88jOfwIA+O
PPyap+KXt9ZtqpoqemJP+JHHbsiDY58j/WbN2RHqL/z4LTj6gNe99KZTbFCw
oXnQH32QB8du4Fe7pD2NivM1tJ3Rk3mQ8QQeWaeZ4wA48yw4/JoHv5L1symP
X4GjDzz6+wI742/Mg+D4LTj1Qp75CP3pd7QXOOMPOPogjz7I48/M7+BaH/xK
y4OjJzj1or+DUy/0oV74DzzoDw4POH6l7UN7oSfrJXioFzg80q/NdRryGsc+
ur7YWZcLjjw4PHoexz76exl76v145LWeyGNnyqW9wCkXu9F/kYcHvwKnXOYv
7I88OO0FzrwGjj7Iw8/6n/0u6sU+A/tXyMv+g7nPBs7+A/L4P98v4Pg5OOWC
892BPPWV8ylzPxMc/ZHHT5CHH31oP3iQF9zcFwVHH10u8uy7Is/3l66v+I1p
N+Tlu8/E8UPxb5NHr/90e8GDnrQL+oDL/M5+qfpOlPMmcx8YHuE37QOOfZDH
PnI+pXjgZx+b8R+/Zd3OfATOPAJOv5B9AHO+Q575BXn8X89T4Lpcvmv47kAe
fnDsyTim12ng9GtwxkNZ95o8jFf0U+TB6dfgjHvIY0/KlfWPqT/lahx51gPY
EztgH+Zf5NEHHH75vjDXXcjLvtaMLksf/mu/EH36zd377e5/7S8yToLzXSPr
K5OH9STtizw49QJnnSn7V8sebTnnHiHy1Lfxb+/NW5WvLzh+CA6Plkd/ygVH
f8pFf9bJ8KAnOOWC870g/m/ysG6nXyMPjt+Cs76SfR7TDuiPnuiPPvCAow88
I4af/97JLdDGfAf+ll//h0vz2w0cHnD8R85TTv+cW8rDQ+Sp78xbHQ8cydcL
HPuAwyP2MXnwQ/iRB0cfcPoX8tF7zq2d9a/9EsoFp30pF3tiN82DX1EuOH6F
fPOPQjct8sqUc0DOa8DZv2I+Sh4yp/69mGcizzkO9UJe4iJMefZP4EEeXJfL
viLnVvCAcz4FD/pI3Ispz34O/MiDy7lYxc35M3my8EuchonDL3EIZrtTX+Tx
N3D0AWcfTOKITB72r+BHHlzbGR4tz/4YOP0Ffagv/RScOA1w+JHP3T7g0F6P
GPFP/BAcf8OvXn7+esc//7U/hx+C48/I37vt1Oucq7XPp/sR7YKe+Anysj9j
trvEqbCfZuKUK+tn2tccx+Q70cTpX7LPY/KAM0+BM15pHvSRfRj8zbSbzNem
P4DLd7eJw4M+Yh9THn3wB+TBkccO8CAPTrnIw8N6A/tjB9lPMO3AOKPthp7w
4J/wMC+gDzjzHTh2Rl7GDZNf2wd9dLswPmsexn9Z75n6g8v+hokzL8g60ORH
nnUF/Ky78HN4wOkv4KwnZV1t8rNu1Dg8sv40eaivrHtNnPkIedqFdsdu6A+P
nI+Y5bI+5++Q57tJ1mVmuRJ/aMabgfN9IeOByS/xmWa8GXoyPiCPn0icmMkP
zvmgjBPmOofxlnGPdQg44w84463EVZr9lO9H4adfEzdo6o9/SjyVqSc4emp5
vou1nSW+kbhQ057gEkdq4vDreRZ+eLA/PFJf024y75vyzCPM7+CynjTnU/SX
9SRxSqYdwJmvkWf9w3eEbi9w5l9w9IQfHD3hZ16j3cFZR4HDA868iTzzGvqA
Mw+CwwOOX+n6or/WEx7sjD7gtDs4/MjDL+sNE8c+1Eu3I/ysZ2gv0cdct4BT
rpanXNqL/oI/0L70X9oLnHFA1qWmnsjjPxpHXuJUTT8XPzH3GegX4BJfauLY
R+LcTB7qJXF6przgxB+aOPZBnnohj93AsbNel4pfmfowbsCD/tgBeXDk0Ufz
II/+jD/SL0x5cJFXdpB4OeLrTLuBy36d6Z+s08DxZ/k+NXnAWScgjz8jz34X
8qw3JI7U9HPmcc0j36FmueB8/yKPnyMPP/2ddQs4/Rp94EFevvvMcsFZ52i7
US72p77oCc54BT84+2uCm+0OTrmyH2j6IesQ9MF/wKkvOOsc5OFhnQM/8rL+
Me0Azj6e7kfI45/4v/Cb9QKHR8vL+s0sFxz9tZ3F/iY/+sCj7Y88/Ro7gzOu
Spy92Y7Iw4Ofoz9+Ao4+4PAgjx+KvKkn8vQv7Sfgulz0Z5xBHn5w/Bb7UC/s
CY4dwFnHannakfkC+9Dv1H64zK/4JzjfR1pevn9Nf8Bu1Bc7MA6gj95XAZe4
cRPHP9EH/2Edjjx+CI48OPbR4xLfLxqXfS2zXuDw0O7g4s+mX4HTL7QdqBft
znwBru2An8g5tYnjt3xnMQ4wXiEPjrz+7oNf84Dz3QeOn+t9Y+wg+SMmTr1o
d+YL7I89weHBPuDYEx78jfbS/g8OD/2RcrU8OPrL+sq0A999so4ycb4rwbGz
3i9FXvarTZz2wp7wML9onH5H+8r3oIkjT3/HDqyj6L/grD/BsQPy2A15xh/s
T3tpeXD4welHWp5xgPUq/PgP4xjy4KxjqS/lIi/n/2a5mge/0t9T8FNfcPRE
f8Zt5MHxK3DsAE65ul3Qn3rBj/3xT/QBZ/wBp766P4q8mn+lvqb95dyU9YP5
vQauzvEFp17wVKxf3OjYwT5PRJ8PjqzX5tfYgcmSJ2L4RD3+dXRyoo6b1XHR
Oh8qdu/FA0WOpAi+4oP4ry/5Bor8toFRVSued7bLNwHX63Adt4ye4Oip5QNT
J8x6VCIzUcdFYCed9+Eobhn5c6nxtaKrpSbqc3+Nc44Mv6M4ZH2efv39TcUi
olz+v/kR4JTrKG/CURx1x4Wvt/O66GPofDEdJ39wzJxq0fGZgmNP5OHR+VA6
np/2Ql5/l+l4cl0u7avz+357b++52YU8pFyPm4sT+jwOsstX0nkB8IPDgzw8
Oq5Ax/FSLx3XofMIdF6Pjj+h3XUeosZ1PpGOV9HxxvC3LtOqTPEYX5vOZ9T6
UC5+peMuZJ9ZxWlofcApV8fh6PwmHf+v40mwg45joVwdn6PzquQ7Uump8zV0
/IzWX+cX6Hwx/FPnVTH+67yqZ8Gnnhd84G7ovCqN63xznW+l+XU++4WMsh+0
Twmzy3/U+SwjAz0m7u6dJDjjto7bQf6zR/2zIx8F2OXT6XghcPh1HpyOs9Jx
UDrvWOql8u8y+3W97HciQ+KmkNe4zufV+X3IYzedb6vzOz6c9zguIthDcMYT
yc/12dq1UWqkXV6wzuNgXEJe7wfqPAvKBadcLU87Sv6syqPR457ex9P5L91q
NJo5o0Cg4IzPyMOj9yF1HhP66zwmXS/aF/+Bh/lI9wsdt6bzj+DR91HofCt4
dPwzPDr+Gbzb6Kzw2YHBEtcEv8bhl/NBledOufr+CsYlfT+Gjg+nXB1vDA/6
6Lx7HXeNPDjrNJ03qu892PTWY5eZ2UGCvxx2fVAv/1A7fcC1/RnntbyMq0tq
5EVm+Nj0fSCM86w39H0F+n6AoX/Pziz43Flw9EEef9Z5Z/peF53fAR7bu8n8
BQXDbfo+EI1jf53fAc+FjxbELAmKsuk8a87x9T0Y7xQb8P4p7zjBsafOG4Jf
4+ip82vARR91f4iOE4YfffgewZ46Th78yzIJ4+fkhAlOu+h4Qvod9tT54Dqu
GBx5nW+u4/3g1+XCgx30PTwap7/Dg3/qfDF9LwHfU/qeAY0z/uv4Rni0nzMv
6HhRxmf46e86bxd5xmFdLvx6PYx9ZLxS8bo6L5J20TjyjGM6nlmPVzqPUt/L
wXgCjv6Ui9/q/Ep9zwZ2BqddkIdH51Hq+zEYP8HRR/cXWSeY+oNTrtZf5x3r
+0DQH5z5XcszX+Mn4PgD9cX+7LPpe3vAV6Tva97SM17wapV/OVTTOUrkpR3N
fTx9/xX4bKea0Uv8Ygyd/6hx+OHBPqKPwtnfk/gElUcJv+Q/rqvwWTfnOOGR
fEYT1zyU+0/w/bkLfCOkvuzn63vDwJHX+Ywav+15Zc+qvDA7HnCtJ/zxJeeE
zfYJNRivwJGX9cCreXDWPUgmTvuCP9o77UH50bK/Ivzoj310fiI8kodo6q/l
0VO3C+VqP6RdJE/GbHe1D2TofFX0YZ2g92N13Dv2BB/bedfnBV/4iDx20PvG
Og6f9kX/mf9E7yycG2QnD057oSc84DovDH5w9NTyV31qd0h57izlwq/PHXRe
j7YDPPr+H/TUfqjP6ZBHT3AZb03/QU9wfe6p84gpV/KITX/T8own+v4Z9Nd+
SLl8T2E3OW81/RMe2lHj0h9NP+T7Uc4ruZ/NxFWemnxnyb69yaPz4DSOneGH
Bxx+nb+GHfZMW1hzbmasoeOp9L0i+KHsF516+lbVwykiDz/2oVy+3/V5BLic
p5j6g6t8QGPNnFv1AwfZ5dMZOh8T+4Djz5pHx03p+wc0D/XV8uD8H3/AP8Gx
s8rfFFyfO+h7bGgvnaepceqr7anjheT72tQfnH6t8tOFR5/v6HxD/ET2LU1+
LY8+evyh/1Ku7AO/mj8u/Uifi0n+pmkHuW/TlNdxa/iDjvMH13H++p4i9Nf3
CGmcdaCK6xBc87PORB4/0XkZ4DpOTN9HhD7grA/hQU9wrQ/l0r7YU+cvYH/W
qzqfERx+ygWnvbC/jsvV95Ogj74PhH4heQgmv+6/1Ff7Dzj7afi/jnPT99Uw
j+h7HcH1fS8ap93hp331PX70Ux3XpO8xYB9P8tzNfqHvfUUefWR/zOy/mp9x
DHnWnzr+AVzHJ+j7B+ABZ/6SOEx1z4CuF3rqexGZj3S5yLM/yTpEx5+A63gt
nU/KvrG+r0Dj2F/fDwkOP3bT8W9y76upv75vEHnOxdBfn5vrPE3sCY79dbnY
E56m1/8cdDDCin9gX0XHa7GPJPFaZn2Rh0fnv+v4gVLh071/yY206fgKjcMP
T8Gs4m9f8LPiIjSu80l1fAj84NgHHsoF1zyU+9XoPm+fyIu16fgNcOyg70fS
cd2aB3/Q8uDoOTDpje7/FLbi58EpV98TouNeaEdw/AF5+PV9AjqeBB5w9NTy
6KntT7na37A/+tC++j4QHVeJPlc3t17h1PJ4or5PTMeBy766iTNfID89u3a/
9R9acdEa1/e56fhw9pF03LXGmde0nuByP7BZL31fH7i+jxEe1ic6Lwwe7EC9
9P3GyGMf3S76fhUdb5OUGe7VaqTEZUq/Rl7nUyCv48zZT6NclZch/Go9L/bR
eetLdqxtmRoeapdHrOO92ZcDx281j85H03GY6K/jzzUOPzzUV8c36rhc2lHH
5Wqc7xo9PoDDT730fUE6XhR/1nFcGqdfax5wnVcOP/ozLun8Puyj8xB1vD12
Buc7BXnGTx3fqOOuqRfyOk9f5zVQLjjlannsr+7LFXnsRrk6P1HHq6Onjv8H
x576/isdd4r9wfFPypU4PbNfw4P/6HuuwPU9qDr/iPEcnH6t5yl9r4XEOZv6
aBx95Fzgf+c/yr69vBMxNya4zXcWru7VtznIl7TpfEl4HORL2nS+pL4/EHnw
pGVF67qF2+VR2nQeJeMqOOeAyGMf5h3a5Wnxyp9ULG/lP1Kuzu9mPQMOP/Lw
qPxKm86jRE8H+ZI2nc+o88fB0QccfbQ8/OjJPEi9tDw46xnkKRce/FzlSwrO
PIu8zqPEDjr/UePM77odwTU/36fI049UfqLgrBP0uhQcfcBZJ8CDnuBaH8rV
62eVvynjMP4JTrng8FMuOO2I/fV9pzpfGH10niPtDk694MEfaEedzw4ODzjt
pfPukWc8BKcd5R5pc52Df+pysTM89Ed9Hzi4vh9b32sBDzh20PcSwK/ri/7Y
DXnai3LRR9/nrPMfGc8ZD/V93chTrh4/sbPG0V/riTx+Ak47Io/+yIPDr+/v
RV7ma5W/Cc5+CzjrBOSlXJX/pfNi2DfQ9zZoHH540F/nG8p8ZJ5X6rwhcPjl
Hifz3BAeudfCxDWPrLvM/Rnqq/M99b1AyOv8F42zHtM84FpP+Nm3YRzQ+Zsy
n5p20PfAgNO+4Jy3Ii/jjMoT1PlWsi/HPSem/loePXW7UK72Q9oFfWh39mXB
9f1d6IP+Og9O33dBu1Au608tD679HB7ahXFS57eC67wS+PlO0eXCo/n1/R5y
X4e5LgXHDvpeEfSnXHAZr1Q+Nbi+X0vf94Wecm+Y6Q9anv6u7aPzIsHlXIdz
TOYj4hbUPRXISzyJieNvjt5Z0/dygxMXp99Zc3BvtrU+V+9qsT5Hf8YZeY9M
3Ycj8SHcU2T2Cy0PD+c4tLucF3Evh3qfTt9fzfpf34+N/tRX3yOky0Uf+inj
EvL63i3qCw847aXri//I+RH7VKYf6nEMfl0u+mBn9NT3Oup8cL5zwfl+1Pmh
4PDQj/Q9xjp/nO96yc81+7Xm0fdUg+t7eHT+L/tO4IwDyGMHfV8Q8oyHejxB
H/SXe+1M/fV9evCjj9wDZvo58uzD6PsSweV8Xt0zhjz8Oo9b4/gb/PCAw893
hL7fTN8XAb/c12fWS+WvCa73Z+DHnvLdp+5d1PdXUK7cl2iOw9SL7y99TyDy
9C9w5HWeL/ro+yj0/Y3MC3IvpVlf5OHXeffgtJfOgxZ/MOdxfV+ixmlHrSc4
/NQLfn1vAzj1or/o+x71/Zysf+CXOBFzvmO8srufVuX7076yz2OOM8jjnxLf
o+4JAZdzwLI106d5FrZ7H0Hj+l0hl1q5b01xt9650DjybsY+r6Fe0XbvGmhc
378Nj+y3Kxx5rad+dwl58PbhG24s8Qixe/dB4/o9po2Bb1XPdi1sd681uCN+
fV838uCPVy732zw2zu6dAo3re+ZXV74SP22MJa9x5LWd9ftWyOv3WXR+rcbh
13rCo8t15A86T6fjrWGv93Sx2kXjjuQpV9uf+VHj+l0qeHSeCzjyvt7vLe7t
42/oeVbjOi8VHp0HCo685qFcrb++Vx8ecC1PO2p5yVdX/Ujfb4/fOup3cj6n
5CXPQ+mDHTSOHbSf0C4a1++c0t/1+0fgyGse9NG4zj+FR+fDgiOv7SP5BQqH
R+P6XTPsqfOCwZHX/RE7aFy/nyhx4ep9QH6R1zz6nT5+wfU4o98RA9d58eD6
PSxw9NQ45Wo99buE/Doa9/S7V/A7Gv91/gu4o3ZHvuu1N4f95O1m936Hxul3
xDUNjMpqOCPXyifTOPKah/pqXOfHwaPz18CR7/P1u+uHBzxL0HEdGtfvy6yf
8rzf1fQ0kdc48ppHf7ci70hPePS4it00jt00ru/bj+w3pNVmZ0te447kdZ4a
uKN2l3wio9HbR+Z3T9BxqhrX74M7VUwo1ORAL4mr1LjIKx4dP4+84Epe8mUU
rvMy4NH5NeAir3jknV+F6zg0ePT7yOAir3js3uc15QVX8jpeDnlw7bf4icbl
/FHxS56jwh35g+R1Klzva9Ff5Pz3f7eXnbwj/2Q817h+T5n+qPMQwZHXPI7G
SZ0vTD/SedngjuR1/jL6wKPbC/017qi+jsrV+aTgjtaB6KNxR/6g875pR0c8
jsZtyX9U/Dq/En5wzeNIXvIWFb/OY0Xe0fqQfq1xfd8C6zT9Lg848ppH35vB
egBcy+v4dvgl70mtByhX447kHenvSE99Lwc45er1Ejwa1/c56H0GjSOveSR+
XulDfbW8g3ufBNffEcwvDr6DDP0dpPO21PeRHY/Os0MeXMtjH43r+0ZYN+p7
YMCR1zzYU+M6rwc99f0h4I7kHZWr8+mQ13k96K/zI8Ad+bmj/gW/xnU+CH6l
80rAkdf+hrzGHcmjv9ZH59/RT3U+HbgjeUf11XmCat/MTk/4Hew72dlH552p
fSe7X51H8//7VfcQyq/OM9Lnv9pPHPmbI1zyxxWPI30cjc9yj9//3g+xKxd5
B/skhl7n6PvfWCeA63kcXPPo+9ng0fe8sW7R9/WBI6/5sY/Gdf4vPDpvCBx5
XS/K1bjOV6JejnBH/I7GPZ2PwzrEEY6eev2DvMYdzY/6fkI513Cw/nT03aHz
m9BT50+BO7IP/Ujj9BdtZ53nDo689hPkNU5/cbBPYuc/+t4AtU9ix4M+ul7w
ONg3sKuXvt9AfdfbtYu+5wE9wbW8vv+B9pLzcYU7kndkH+R1ucg7+G614wev
Xsb95rWMtEQdb6lx+T4ljuWIz5/LQ8Xv7XAdt6z2Dexw5HW5Ov4WfvD6uwqF
HcpxtYtj1LjOZwmp7fH4uZ+bXZwkOPKah3K1vCN9qJfGHdlZ3xOFffR9UODI
ax6dB4TddHwpOPJNxv+yfqdTiE3fK6VxHYe57YfxWWEF/W063hJc38+D/rIP
fLN0rUV5fnZxmBrXcZjw67gXcDm/Uzw6Th55HZdO++q4d3DktX0Y/zWu46zK
9x/jFlXAktc48ppH5xkhD67l0V/j2Efjcr6p7Ib/aNyRn+h4YOzsyG/xE43r
d1rxH0d+hbzud9hZ43Zxema/0Of74MhrHp0PiLwjHP01jzrfsfLq/vd7B3Iv
pbwHkdXJ97MJ1rvJGtfvPsi4rOJzkAe/fTW6n21UnE2/46xx+DUOj25f7Kxx
R/u9Ot4Jv9LxWuDIa7+VczeFw6P7u44fA5dzN8XjSE8dlwWPjr8Cl3NDxQ8e
P/e1v1Y4F7bLr9G4zr9g3ND5I+DIp6/ddHqmS7RN33OocZ3/O3JhPZ/ffKw8
HY0jr/VEXuvjqFyd9wG/I/11fgryuj/wq/OOZd2j8jHpLzq/Ehx5XV9HdoBH
20HnzYEjr/udI9zROKPzH9EfXNsTfm1PR+XSLhrX9wYcP+walOBnta/Gkdc8
Oj8IeUftiz11ffU9APzqewOQV+fU8qvznZHXedP6V8s7qpfOowd3ZH/kdTsy
/mhcx8vRvvqda3BH4xLyGnckr/OC4QfX8jrfk36h81XhAdf1hV/bzRGu41Fp
L7U/IO2n839pL/g17kjekf46Lxh5R+sW5muN6zwR1i06PwIceT2PI69x5HW5
+n0l+ME1j87LQF7OR9S8KecXCtfvQTNf6zwdcOT1utcRrt9DhAdcz/v63W1w
2fdW+sOj7QOP1scRrt9NQ09wLa/zoZCXfTOlp5xnKdyRvH4nC36dn4V9HOE6
PwjckR/Co+3JfouD/RM7v9Xvuqr9Ezse2lHr4wh3xO/IH/AfB/sSdvbX79hi
N0d+K+cX//u7285P9Pue6nvcTk+dJ6K+x+38E34H37l2doNfzy/4j8b1e0bM
LzoeHlznMzJP6XfZwJHX5er3yOAH1/L6nTj4wfU8Qrkah1/jjr77kNe4fmeK
eUq/awaOvObR72Ex/+r3ucD1u1r8OsLxH82j3+1FT0c8+l1Ifh3pqfMoaS9H
9tTvNsIDrvV0hOt8CnBH+w+O/ETnceCf4No/saeD71k7O+h3q9X3rF1/d1Su
fjcNPR3hlKvr6whHHwffm3b6U67G8RPN76hfoI+D7yO79nXkz8jrch35OfIO
vl/s2hf9tX3AK//f36UlRMyeXm6ta4yUC44++ybMX1QoL9J4Ly98W16en9G1
ybM19ZwixD/BkT8wo/u1G7lBgqNPkSbldu7M8hE8OK7Kso251vhMudjzrR3f
BPk7xRlO//fPtnP5+7ntBziHiv7g+OGxUqFZxXLCBM8curuLl2uE1AscfSaF
dhteOjdS8HdWDP98jluM9c67iVOvuFEXnWbnxQq+cnz00gDXf+XhmTj6j8gY
sydiZFGp19PDXY25LvHCD077zq8Yc2r6v+QH1AmMneQUKuMSOPVt9tvLuT45
2DnKKLXj1y8e/JMh+//gzO8Lp5VpMtw9UPB237U4vv1ZgHwfgcO/7FyJQkf9
MhOr/F+5rsas9tfvVXCOEH3AxZ6xr+/OyNcHvMHr8Td+zrPmWXA5B+lu63/z
heUPWwZs3nTKOUb4wZFf0nfS7xteOIsdlp+OKX7ipbud/7AuKj2mRQXfTB/B
3y27sNKznADRh/Y69FZGfMG0DCs+1sRZ1721r/71Us+cBV/VZOiaI3kBoic4
5YbW2jsgJjtIcI/0rJ9XZbvblUu7bPn59t3K6T5in3q/11v9ItPdeifOxJE/
d+LpojfPpgh+x2fvtiLZAWIHcLHD1Oje5zMs/d0mb074rNsxK07YxIk/LLFu
Uq8BB1MSsJv3+KeLrjY6JvvG4Ngnw0j49tyxf8nnvlWhY0qG8IOj/8aVG0o5
pzuLnjUKrv6nWH6/kLgyE6cfOb88sdfFycLvTlicanOJkXEAnH7awG90nZzc
MGn3g18kl4h0ibAb9/Bb73nvRhfMl8ffRrd+MnCdc7zIg9NPa3/hffdxvj7g
6DlqxLau9/LCRB/kO6QVLDY2fxx7PNP/TN5/3mH0qbV9Rra1bwOOPn8GNJ0Y
WSAzkf44IrVHyqMs6zwLXN4XmzW56D8lkoWn+dUhG52zrHMrcOzT5eviqYXD
LXn6V+tOjd4t7Okh40BykdLpw3OsfSTkPwzOaJyY4i77YODy/kuBt9f85B5q
+/NUyN68vHBj1Jf3S+85kSTjErjc4/1449PenqE27DloaFLD3DsZia/W13q3
sbTLnl3xLZIFxw+/rrx55+XwTMEnDurV7bjfscRXxzfrPa8KaVldB/t72Giv
oyMqurUtc0zKBZd9leKvPbnZKVnwurvG11z3IEP6BTj8XbOnNJ4WmSl2S6uW
nVg019ovwg6bnD4seyE7xA6nXS7vSGv9c1XKDTbGf73mYOPUJDnnAkfPP/yn
RS/29RAcfcL7zZ7R2jNQ7J/5skPH+VczhAccO79dOv7coQIegsN/2blz7889
LJ49qyq8OyM9QPwTnPFn4SKnJcMKZor+22sWatn0Zoa0C/LRLdfV7pPmbue3
2T0GtLn2NMA6VzJxuS866nmpGW7WvLal8sm/fnriLvLgyB9q8Pv3T7ws+1Df
iZ9fqFA+1Op3ud1KTanxe5Kc74PL+enQocfGeIQKjp1Dexz9YKJnhOjZc9Cj
gTXOZwgPODwX02dVWOBhyUd06pay8ackiU8Ah3/WjTsbF3vGiP7xh332fZ4Z
YHvVD633QMdebvddx/qW/wzvN2lro+fu0l6M/732LUq/5mnlscr6ijhJ109X
hvnHCB5+0Xnwqm+tfFhw1kO/1+s9eZRnvOCTPxlzu5J/lMTby7xpxg0mvvbX
Yl/fUMGJ8xxcKKREkF+EjXF7Z++visYERImeMu+bPMbSSy4lfC35z+pviJzq
Fy7lghPHO27r5BGxPqEyDjwe8UlHn8AoK8/UxNGn4LV7x2d7xAs+t+UvbQf7
h4s+Mv9Sr+jMzgm+MTL+HOk6ZVa3gHDhBxf5Csv7FcvnR8/xR8NDP/Sy8prB
0SdrevnxZfxiBKe9us4oW8HP0+KpeGPg7NiJVl4zer77667vpga7GK+OJ9Z9
6SvOfrb6g0BrnCR+bNqH7ufLeweK/mGXKz2eWCw14dV+Z92j3uJ20u91vQJF
n/DCT0JzfIIljwOceLPDf9fMjihgyU+62Cn6XIiv6Aku92nsPP2kdJCl53sL
Br88F5sq+Rf4Vdk/xi3NC/I1NA5P7al1uqQWzZR+Ub3KX1cW+YYbr66r/Yx1
++a4dQ91sfKyzXJTsmrPXl/IV+HBxuZa6ZM6RfgqP7HetZnStMacTt4RMp6c
K1G+b2qEi/IT6z2Ug0WutD/gFm+t8xd+dGh+hVTJhwKXfJZW0WemelnjxprG
fxz50z9Y+bn1LkyjGpMiuxew5OVe6OFdw9a7x8u4/U/bld6/BVj7L+DwRB6N
21HzX/IhHU6414j0lXLBqZf/wZYvBntb5Z6NfnCtRqnUBP1dM3TYbyOCoq33
BmmvA0UKBA8onJqgx8PsfkNOfhBovcPGuFr8WvCuppVTJS8MHLsN+Hx+3gf5
dgav1rDAw4ORLnb17ePxQWZYYRfjVfv7GbHTmy7ICLS+5+V7x7TnmDV/JrTw
scZVcPfafWM8fQLFr8DdKi2/8qZPhOC/nJ5WOckrzk4f6XcXXb/p7xUh+OxP
lpx+UCZV8uywD/InOt4Lbe8VKnjg7f7DE8JcZPyEh/Vnp2/9Uto/SkkAdysb
XrlnrrUfBc76c3LNT+t2zmH9n/8dWcujT5u8wur7xXr/dFrFuS4/5vgILvEM
bTKzJmZZPDcC3+6xPydEfTdZ779PTW97OutWSgL+81GJvU2bOcVLueDYcdSL
r6c1cPaVdTvr/Jg1/eJjslOE//C8N0Jr5H8vvPpdbPWHnU8eTzjtFC781Ktl
xJ9eu59Z+sQ3vJ8dkGft74FTrnfsiW9r5DmLPr/2LHD/fJ4VLwROuUPdEo4F
ObvId8qYB3feqvcyQPFb7zn+0XXZH3Mvpwh+ZWb31+My3O3WpSHXhm3Ym283
vmfB0dMt1LPxl3lWe43vvv+bu04xah/AepfWxf1nt+S8IOFp3ebcm9l51n4p
OPWqNeBUyZ1O1n7InbHXArcUdLEbz7/t6v7TpQAXQ69z8POWX2a06THC+o4Y
+ubRaaf9gu36r9x3kdhnZ9MCEYK3iIwImhjua7y6PrTeU/M7GfNmI29rPXPX
y/V8YP58J/F1Jg7/zIV1q7uGeMi8NqH9Ho9SUamSDwgu+u/rfiYhNlNw1ocb
G08vtryP9Z3yzmtXPrjnG2y82t+t98saN2jdvkqBUNue/9rZtmDjb9c+Gm/d
ewDOuu5WoS6za0V5CP6T/6Xff/S27k0CZ31yPibrwyqHkgVnfXJ58OiiXapl
Jjb7r5/bxq16469b46w4f3DKPVKv/frgGpb8xZlnE6Lcrfw4cPin1es8Of2s
VW7a/Pc+/sHdyi+o9l872P6utnnGR07We0PgfBe0rb9ic5OsMMG3vh2RvNs5
UPYrwGX/5/UXb3yQHWm88d92SRxXrewPJ5wChR8c+R+3XD5bPTvMaP5f/7GF
OMfmFs3NkPMycPQ5v3tPSLesSMH5jog68dX3HV9aPB1/fhmet/tY4qvnI8G2
c3XOPTnlbL3vAw7/6vm9diTmxDLO2L5YbFvae5yVbwhOu7Tqfihx2+3kROrV
rdC58DG57jIegjMOv7+kwkdv5USK3cBv+/96aXVurODNbN0LfP0yI1HztG/2
48q3/aJkfQWOv72Y92JfZv53BHY4tmd+dKMJ1r0c4Oj/1chuvsf9Q4Wn9a7S
53p6WvddiP6mX23+9p3GufnfI+BOJ7/7qMq31n0a4PD37j/viGtAjI163fk7
uPbuCdY9G2IHvrP8K9676RcqeO3fN21/7mHd7wEu+VkvR35x39/SZ1tmyPxi
BYKl/4KzfvAet274xVAPsUOrc9Xjm3gFS/uCy3rvXNmn61Zb7Vuq/mtR7v4u
Ii+4Oe6lT/94UpmpljzjTPE2RVIXlsy08LkrS5cs6GvXHz8bfHT9ewG+wg8O
z9bN+3Y/mp8s+Pi7JT6p7h1sx4P+hWKfD32/jFXu4G1fLB/nbt0TJrg5L3fe
fXf90hFFDcaN5auGt/R/eUz6Czj9bkqXkysa5/cX7FZj9MHgWm7WPWfg+HnJ
JhunbBteVPzcu++FM81cQ+VcALzdgrmXrrpZ98CBs/6pP67pL+VHWPqXmrJm
4TPXCOEBR96tkZESlxdr9cdOD+d0cQm16Xql/tTI6Za7dW8lOOPDg/NDPj8y
rKiMDxM+cj44NULuDxec+Whd9wYNrw4tajA+f/ph7Iu/fax3x8Dl/vOFVz9s
PcySh6dP6eo/ncyOFX0WjJ5+a5x7ph1Pp78ana/mbd0Dijw8nS+0Sprywho/
y7aZ7lvFxcOmx8PC3dMb/+Rq3b8LzrjtHRw2tO5wy/7fjlhXaE96hsRfgWO3
i4emtKycFWTJm/Wts2PQ4o+e+QjuPOObSyljjiW+Gk8eLPb5ucnkJ4NeRgo+
dunOLeP/OabepwuW+l7/pGavfi/CBJ864Ivxvm4e4ifYQfbHTnsfqZpr+fPd
1l5+q10C7eTh73Ir1v+jF0Hin+j5S5s2rzd8aeG1ZlcfMmDRMbEPODyHTvu2
H/PUsoPgV8/Oa/7UWdq3W+7jgSu9rHt0wdk/+ebzrTXD7lnyzAve9Vufqjg/
JQF/qHcjcp2bV7jwgDNuPHqv2OiU+87iP/DfPO39+PslKay3ZdwusXHxjmMz
LXzP5I5xy93+dZ+AiaNPzrh3nr91x9Iz6GT5vuGe4ZLviZ07u371WssCLnY4
4+2FsFz/hY8tHvR/XK9t3fgHPtIfqzx2qrXL07pvHPkrme0PPfT0lTxQcPh7
DkkqOT8jTPAKP21r/75rquTZwX91j1G1rEe4da+CiWO3/p88zGp8z9IHPftH
Nhy16nmQ+Ge/tAIPU/Pb5dV7D4JFfnf3XZ5pq7h3ONi2Lfy1+psKpCbodYLX
xfdj9oemSv6p4Ob6uVXUuZaF/kxJwA+pb79JxWr+vt3C68ydUyY0KDVB2x+e
D578Ero61Uf0L3bwnVufeAareyGCbUvfDN21wMfX0P2aea1r5e8PHnjobPXf
GzPXDfFyEXuCyzvIvpWPnXhslSvvwX19/36vzCDRc2jba2909U9N0P0O+fez
P281MNVZ8L1Fmy4p6+si+sPj0e5JtW/8fO1w9J/zok9cy40pYmfaPWHdirpp
PoGyDvEqdnrx7z7h8h0k853ZL4bEXfn0im+g4GeC73x6qEC4rGdkvW3yj+oR
uW9TmIfgpROWf9HO13rfh/77855tVZd4uIifg0sertPmA6MzgsQ/p/80svw8
t2BDr58PRh9+OqpAlMpTDhZ9imb/ULzvjmTBqdeTDStmbayUKeurX11flLrk
HS48Mg6bPK73krxdKljyL8pvr9DLx3pfCRz+zKYTfSYXttZ1xdfWmjfCw7ov
TtYh5ni19YfQiYf9mN+Cbb6/7hvq7aHvx8vvdzuKO50Yr+/HCxaeXpXS3+9a
xENw5sun7k3WbPUPZN/MNuTcyGYhHr7W/RImjv0fPL874feMSMHxqwres93W
p4dZ+BqnE0ae9e4wuPjzk/njOmRb3y9nRznVferiYuh1TtrZPs1dPFMljxgc
nmWP3N79NtMa92ou/uePv91cRH9w5Et+FrN6UWak4HuW9+o5wT1Y+i849dow
ddjSWelBUm7dwm/W2+ftK/LgyH9aav+3Lx/6WPpvbb/ia49gQ++bsc4sUK1d
1sYNKbL/2az+zrulAwNt+hyfefbJ0fVz6l9IlvP6m01Xzjh1MzlRn/+yb3Os
XsnJ2yqnJur9KH2uzb7Nx0N+b3KniItN74PdH9w0z7Niqpy7OTp31uen+ny2
4qrG3UYfTpa4iKeJT989WDPT4flsv6gzy9KrZYr8/ncO/hV4JjlR74+xfvt8
/PVKtp3JgtectWB7uRgPu3M31tsvjvYa9HEhF5ve55T7V9U+55fLA0f2CPe1
6f1Mfa6K/a9PGra/ToSvTe+b6XNV+HttvJhYLdyyPzwPZjXyCIiwcPZFdVwQ
+5NaH/Z7dXwC7f5Jn/u+EZG+dvvGqRu+7tumbKrDc3AdnzDw/vGj9R+6y/4n
cQ7a/1nH7u08JC9nbbLsi0o828AbXg9HJwlOPIbed5V9iftvFil2LkNw4jH0
viv1co7vOPXrUxkJ+hx8/Z7876oymdZ+eKtb+4bmj5t6nxN/O1Jj//icMA+p
14X+f+avWTzs9tVXdomqWy8g0G7fG545k+Kn/FjBKpd67fQceebZriTxZ/rF
764Lg38r4iH7xr82vPOsyYHkxFf3ya24i9Etswu/XTlTeF4bUePDsOqZidqe
2OdJ4obefRZa5dIubyTFx77nG2ydj5jxYPp8DZ6sjx5md/IJFpz4NH2eSH19
l63466v0IMFnF2x7o29IqE2f6yEf0/mOx/CHzoI3al5k1pKgUNV/rXi2iDaR
B9Y/9BE8teKOWpOCQ236PFTGhz1L3vy+kK/gxFXq803kB53x6DDEJ9ym45r0
uTb2rPxXm6sjfaNEH/pj6Pe9673paZ1rE3+lz/1Fz+Zxu2b6RAlOXKWWp9zz
0W/GNvWw4gGwz+TYv4pOSg8TPOFpxsR2oaE2vX/OuPRkx9dLWviFC05clt7H
ptzfG9Ue2d03XHB4eled6vqlX5TwYIfVy/eWaOtv2Ye4Ms0vee7TO9/5fHGK
zCO/bBlU2SPOw6bjhejvy4YNtv163/If8NXxhZyPrEyRc4de6VNvlCwYaNP7
/PSvO7m/HfWelyL4dqfVCYMSMu3ilBZ6DIsNCQq0m184f9HxQtinr9G2Xg2/
YJs+39FxQdhtzcZp3Ur4BwsPeNlyq/Yn+IcLzrmY7o9yv0HfdSPP3fcR/ESh
nh2cggPt/N/1bKu1l+M9bPp8B54TlfsuHPc8SHCXkm3nPsznkfshTZx2LD+1
bg2nez6Cd854veTWYh42fS6D/XdsXlj5+W1nwa83/67T7LTkRN1ewj/Hb/DR
u5Y842qhL7M2rfghRc6hBtXpUrl0vUyJg9JxHQlzRnbYFxwj51y+vVtfCc+K
NHQ8M+vwQT5bR24IiRE8vMHMU5dzYu3k4d8V3S1ndXCEoeNnxqypcCExyMJ3
1pt1bsKLMEPHT/I9fijxcusdBUMl7hG8YY0XW04WjBD8cYuxof1ehhk6zhz9
Zz+72KRrgXjBz3Xu+U3UCOv+Jx1X41rynRrng6z62to9a7N8uHUPm8S9NPVJ
a5kba+i4bnhXRP1S6UJ+ufr87v2LXwVeDwgVPCPi5sSh+d/5Ou50fqm9/jfy
v7d1vCjrdp+De364ExgheFL1je8eexEkdpDzxL1dhrZ75Gzo+Gp4pjRdUTkp
0LLzDy89A5fmf//bxSFjn0qhg5cFhQo+ufKKefPyv2e0/D8ff7a47MtIQ8fV
Szs22Ju+sGCgFadt4gc2B4c9Khhj6HiPls2P/T7ZK17wbR/NH1bumY/YX8d7
fJC8LDkkMEbOx+kvH34VU7qof4TgnWpe+cozMUX2neAp33bqvuVZQcpPrDiW
yXUvpTnl6wn+YU2ba6unPsar8cZWHE5yq8l9sgIiBKe+nw6aMc/FO17w3EYL
v/3jZZChvkMljqJSbqP7Cz3jBb/Q4FSXnc+cRU/w8zubte2x3/qehb95v47T
mmSHibyO/6lb0je5kFe84LFDB2a4p/vYyaNPyMd91pYKiJFysfOFB29+V8vf
sv/Q4pn3bjx1NrQ+cv/t0Ps9Uv0CBU+onru43vqUBO23jDPjD4d3fyx2czUa
txpd8HB+f9TthZ6FetR89Nzf8vO3RtSPdM+OFH10vFz/xa1GDfS2+m+faZXa
PsmOVHbwM2K79v2gY1aYnR+GuEf28XnibOcPm28mpFdKcZZ+oeNqZt1o1TQg
3090PPM/6W5/e+frD27b3uu7X7emJKh9D1lXdA2aPeZ131DBN4eUO3E4zEPl
QVhxpz+PTVoW5Rcq+LmdBYe5lcuUc1LKXVSneJt9K5MF13Gn0Xl3Pd7wixD8
y5pdtteenJz46rgUZXzyVv1vneclJ2r9iwxtO7HFa5mJ2j4rcg71+b1iZqKO
91hS36PExG3JiTpuBH1iC2x+2+1fftXjrdFdu1XJTNTfd3JuElP56OnCHqKP
5GsXb+hU1idQ8LaLrzz72i9Q5StZeTHXfxpWNNw3UHB4mrVuaxQv5CF47ujh
8z7yD7SLFwqq6t1kaWEPuzwX/KT8Xd9246M8BE9ZMsFl9ANnQ+dP7d4y5Y9r
K1ISNA/9/XjHNusPBgQaOk7S7+SUk5sDLbzChTKzDj/0EX4dJ7nsyKCFH8dY
+pSrGnVqxKKUBJ1H83n4mePpGUGGzsehXj8+jp3yj79V7s+b1jyMmpuSoPNK
KLfpuom2Nm9lCl62yzH/43ecDZ0nAn/X2+sqL6+RKfikMau/XXnP2dB5OjGV
arnvnJFi3WNv4vD88CTsqMe9ZCkXu0VsuH27WpyH8CRvbxaZdt/Hjr+G192Z
BfLtoM81qNfyR7PWF3kSae1zjvx7+60LzoaK35Z9woqP0uYEvogVvP3yUhv8
P0mR+EN97tmsxLTV4/PlwR+VmjO7T7eUBM0v91U6vV2uUGqY4NdnfXp/ZmqQ
xA/ofcsbnxw96fnU0j/m7DsHPC/72MU/0F9m/1lz2JxnQYJXH12k5MW3MxP1
fj7619n32dpmt3wEz23dJC+m4HGR1+eh21eeTit5x0fwqy16VmzvcjxRxzPs
CfNfNK2Eh03HRci9f83c261NC7L0+etkxOR3MhNV3oroOaXL/I9+GFTUps8f
GyRXfhR5y9mmzwd7vDXy5B+XLLzB1jpdv3waZBc3RbtcCou/sP+Kj+C3w1z/
2HbNx+6cAr9amdkp9W5qkOjJfPfovUZNC/3jI/jYR7cytqRFGipvQs4FBvVf
9rbPBWfBq+wp/qT40zBD5VNIvSqFPF8ZmBJk0+eApb4e2tzlSZjgYzJK1Ll6
xcfOr64sXFZ59z/O4j96X73LrY1fP87nkX3vP0evnXXZWXj0eX30CdeMtHz/
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
tnXvhezTmvyMr01q7d2w1C3YcK89Nm6uW6qsC/S75+BFf7nd/i1PX7Ez/O7v
/jk10s3XKPP2marF3Vxk/JZ9XbNcxksjzadMxwK+xqCA9AWXCqTKfIs8fghP
73MNfmnukZpw9sv77XLcfa1zbNMO6APPipHTa870TU0IbFO0cIy3r3V/jLmO
gh/9p3wV821BFxdj3tgN8y+6+AqOPvBT7up99VtXdneRejG/xR0v3q9I4dSE
bpvPz+oalmrdl2+WuzC80cbPCrhY8RFKH/zn0Mi/Z3fLC5Ny8cPzpS+NyHAK
NwZ9VyYr8aV1j4vsz5v64G9L/jTuT3GNEhz5EqMT6o1ytvov9jlY+PNirbxc
jK4VAp697eli3f/x6rszUm7o+Ljmy0IyE6Oie1TrN8rCWT/Qv9AneXWTuZVe
S068EPNj3KYR1rj4z6Uzmzr7Zwou589NBvjUqZtsdz9T10ZTOtby9rBVDilW
LtfJkn81fsa6B6vqF87u2S4RtkErevT7cayFq/clrXvyXvvrswmuobY1L6Ib
Hh1j4ayX0JP2PeFWbscVpxibb99Bf693t3DWS8hLnMiI9aPSnUNt2Ad/6Hl6
wdxPnUJtyz5qsuSml4VTrld4oeipOdY5TPsykzadyg2xfbHzcu+J3haOfK+c
9g9i3KxywSlX9Az/p9qFvMK2+smfje5fwMKxD/6JPg9rranb8nlG4svK1Yf7
elpxK/L+tdH+rOHrKzj+AA/8SUtOtP3hhbtt9oqWHRZ4WedIrFfxf3gim9df
/WTisURw5NfN7LQsMCUjccJrP/7Y+T/3wZn4q/sM1vy8+tGioc0+Sk5MunFh
/+qR/7qHzPSfChMvlFjkYvmtnAuY4zn89Yf16/hzVoC0C3p2Pj6nvC3XwhlP
LhSIf61YYHIiOH7VaUqdIRedMxN79g2+tcc9SnA5dzbLFftnZJT8PdvdltRw
z/RMT6tc9Z6slHv59tgjQW6Btj9mjAt1H2PhyOOfEn9Xq++tUS6BgiPf4Fn3
GREeHuI/+JVtxie5qU6Btti/koa0cbV44EcevOTCunszXTyEH/1L7Hkc1dM5
wtawzeZFHcZZ63T1rqvYf3/m7p+fOsXbQjzykoqPt3D1rqvwXPstYVEflxjb
rjcetLvrZpWLnz+/90VaA9d/3Yum2h39D5183LvM42OJP3w88cQZN6sd5XzQ
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
9vOcrPeIsA/6o0+TMo/H9nSPM377PLxQSyfr/QRtf3gqlWx6v32B/O+Y9Kxq
f+VaOOMk8vBc6TFp/HHvKGP08MWlDGfrfQP9rr18RycO/MXwijLq966zsLCT
dR8w/Mgz7v2w+OWDmWOKGhs331gY4Wbdg4t9QowDf050CZR21+WC1x51ccGF
f42f6Plxw9dfjPLzNer1dB0+aOYxwdl/Hvbh4I9rulr39WK3AYdXXc90su4/
Bt+4NtIzOTdA7EC9Buy90ei3rADLzua8sL3OpsgOHta9vLrfyX7F7TOzq3pY
8w48A2tkd2vjHWwcnX+s6JkX7oJzjpCZ+32nH/cfEx5wxg3kh85rfWBJoK/g
6N9j+r0R+z2DjW077w5KSM8Q+8BT9/43OVkpGbIPj93QH9xtz2bbbH8XY8rZ
fnM7dD5m3f9hfkfg53KPzp5bURveSpX305mPPoiYN+rL6qkiD76gW+8DdaJd
jOQ9GY8uZFjy8L+6/nE15sb9sWZx8dSE1n93WD4jzV1wLc94XrTQhak7CroY
MzbN+nRzurvg1Jd2AZ+XMuTHfcG+Rq2Lq76bnBkgOHZ7df3matT5PK/9PyEu
htPTr458/jxAcPgZT6hXqFEwqUmsr1H7+biJ57MtHH7ksee2HTN/7BLnYnh3
/jSuWsa/3p1T79qDV5xZbX6vor5Gyo6MwgWzLZ5X86OtfJq9k9veL1Mw2Pj1
zCinA5lWu2h55sFz/ju6jCvmYvwysseqRln/es/N1Af9Zb39ecUdz+qnyrkb
/lPdP+XgqTbHZN7Ezh0G9Qn8JCY1ge8Fudfk+zlT/HceS2yfWOSXIe7WPiHz
70XnUX2+83OR/UzwV9c5fsbZQ+6Nb5dJTdjr9aZ/46cBgqM/4yTrDb++zW+9
Vik14dXvBT+j4+5iZXLDXIxX5V2N7fUWdblTyFdweW/qpv97dwsEG4fD3Edt
u5dhvTel/Fb23/LCWty/l7/+OFp72qrkDFnX6fUP+Opz29s+fxBge3X9H2VM
Hztz0sn89dxp378GLsqy9MTfvh51pU2lHEtPxjf6r9yjHPTOi5giLkbvN0KO
9nxh4fjJq/KuxqypcVUH+QYbr44Pfsay6lUiC+R/711L3LH7bpaFUy7+A/+m
62+7zgsINqZUCHmxKMfCkV8Z23TSlGyrXHDKRf7pgwd5paN8jQbv/nylzUsL
1/0aew5/9+Hs3ccyEpf4b/qi3H13wVmX9iw++DefO+5iZ9qlabUD37s/DBB5
7Yf0iz4Ve+/acCvAdrZLq9A9+b/g6jxC9Pzy2E/jFwaGq/Eh3w+Lj/slIMDC
acePTjt9kZ2/3ohamTa0QJ6VX/VqnIb1XmJk0Jn40MAo42KPxZ99nmvxMw/S
vvDUOf7J8Uc+4crOrkbzIX23DfcLNxr+2OPz6FxLHh7kwXN2rW+Z5mut3yj3
3E/7X/eO8DXemL1sTuBLq9/hb/OKfrdjRKbVT+lHPmsqrsl+afG8Gv9m5bVP
7j2n06AJRY2Bl3c3zMqz7PZqHJSV59S59HdX9nrGGaWXVjxXKc/KG8Oer/qt
q+H72V81x/pHGSOqnF0wKMeyj47rkHNDn9nnJ4QmJzQp0Xn16qkpdufgen+v
RXS3d989nJI4pEOL3v/r/CVhw8OAMbesd+n1uT/rgaZr9rwzq3xygtvBTe93
uu5sd86u9zmHHP1gX/nXUhMdnSPrfc7axb1eexCf6vDcUJ+TZnV49ssfAZkJ
a1IOfPPmTeu9GvS/c86p6kf/uSdCrVv0+Wbi7ytdB3pn2s0jCU0f/bG0YXJC
H49p28Ku+djFOehzqOoeCbXyQjMT/H86/njAkyC78319zlX8cVi5TR2TE76K
/z3gTkqQw/1V7FbZeLfH4v/cY6/ii5YXftR77X/uq1fxMM1n9nljb2EXm95n
ZpzR+7cT9x1YNCnU1/b8l0Wfjciz3n9gHNP7zKEPi88bGexi+yFkd8NA5yi7
+AS9T765/4JOfSukOjz/1XEI448XutH9sbuhz3kzy3TODfw6KaFBtYT4k6lh
dvEqOs6hZ5kJCTXOJiXoOAotT7mRqfe2bT+XYReP0Wp2lVY5lzMS9Hni9PZ/
Li3g52FcX/WRc9en1vuE+Nu23beCm6dZ7+wxzuhz27Xrb/ctG+hhFHnnUJXE
J5F2cT76XPur3yaeqxuZmaDjrLpnBpQbeCIjQZ+n33x7smcPt0DjnZEF1s75
T96++o7Q8QMtN3/jdcDDw1jj8/ioV5r1XpbkValz875e88/c9fYwdFzKwnuv
d4j6NUnsif+0+fKfuDbexxJ03NeIY1VaHvYJtun4ummDGtZs7xds03FoO6Y+
WXvT35IHz61Xp9XuIr62Ow9XxlfPCxIeHf8A3rjb7N2d/MNtOo7OtcW9Ot0D
omw6Hq/fkLqv3w8It+n4n8sxCzpX87LODZEv/9kPm1MCo2w6HunNnePOJvuG
23T8YdqKM+3O+EXZ7h306PzNC+u9Jr1vL3FfidN3tr2Zkqjju5J6ZY05cTbF
Li7Lu9OQ85eeOdt0nNuOgBLPr6amJL4R1frl80s+dufvOj5tWI2oq3fTfWxZ
laNqnbpgvYPEuKHju0r+vnB5XoazbdrzOqej/nG2i8fQcXHzptb9rcBLH5uO
63sx8ZO0QdlBNh1nVd97f/+4LGdb33/mbl/Q33o/Cv7v3thqK9QjJUHHUej4
Pe8qfS8UyA2y6XO0Td+s/2ZETphNx91tu959aNkcH1vHUcM3Fhttvb8k8d4q
nq1Sxz/KfZaTknjw8uAfEq44232n6HjFzh0e1KuX62x37r8jt8LpyXlxxqJS
dcc1zXQWXPYZ1Hn3zsCAkiG50cbhFfMGtb8t8Z+Gg/hPY0237IQx2dFGjwTv
A2WeO1v3y5rrGR234J+U/N0vuYUNHW/w9444/1/zoo1TrttGnj5vvbes42mR
/7PF9katnOKNgt2jHrpm+Aiu64WeG1cu67Q3N864UnBIvd5ZzjoOwTgx7Ga5
62nWe8iUq8+5Ygbe+KqiU4RR9PIn7zR5ESTnU1pP8LLx6R/+6Rxh6PPiWke8
jA9cI4xxPer1/CMjyNDrOn2uN/rK1p1NXEKNuTNX97al+hh6Xa3P6fpW/fX0
H06hxrOPT01476j17reOVwRveW2E59ycEEPHpTgV273EP6ewoc/Z7/o3/Ge/
S4yhz+Mudq3yvKpzjJH4wdDXLr0MElzyQFUcwqEVdXdGOccbR9379S6WFanj
Cgwdh5Ccc7jC7Xz5jCf32ld/GSY4/D9086h1KCtMxzMYb+/qUOvhULv4BEPH
Y1xZfrnQANd4o/Ls650GZMcaej2v4ys8u3yx6q57jDHqRJ/jCTmxOh7D0PEb
5z5oteQ3l3hDxxW8+02RkjfcIow/vDb8XCgjzNDfOzpu4fuJfy+55BpqNG7e
elXxlz7Sryn3kwOzvXplB+k4HOP/8XXVYVF1z3+LhWUXWFhalhQVu1u5tpiv
jd3YrZiAYgdiYmOLXchry7WwFewW1NeGBSSW/u33eZgzONf7+2sfP4xz5syJ
e87UWevW5JTM6MbRexyNxzCe63u9j8KD6xvyICTG6MTRe0qNtX3WrM9zYzjo
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
l9kxIvaWj1NpSZy0jq9xtGL27F9mTB6g3zpt6rwGOiXDgb7XxP/GrH6Zy9Yb
swcav4zQqrRkXci5Wi7BvUKUWo7aGQambFn70gzp4e/qY5Om2lorOWo30JR/
Wa2zmQObD/B3RbfuLt4m/YC+gN+9NYpelV2M/tSO4TF5xojL5YzsXAJ4qHP1
NYMnJDIc2rnwoHhYqFpJ+JvW+6HLD+qYaQV2m5HNzv64pVEKzkvt6s1Sj8p3
4+k5MK/JmyephZ48PddNL9rW7lqem+A8uT2z0aTMfCee3rPaHk1O2JOh5ul9
c2fTSv590xGH/1c45HGT3bl2PL3HPdp8vKSN0Y6n97IOZ48oJ2dIeXo+/DQj
wjcqR8rTc2azAtWgsGw1T+9ZtXoV1/XLk/L0PrXi9ZwJdkakB/6GEwWPQwrs
eHoevn1h4JHOJj3Q83NW+IKvB/OceHq+dZ/lYfMqn/LRccljr/13O0ctuHcE
cK061s1HPcDftxc8G6Ar8OTpvfh4n/EpFxf58NSOcTmpR0PNXB+e2jGWHXX9
nGbCqf1h8utvd+vPY/mQbHzXVvO7HjoP+QC+62b8Qr1pnlD7RgVFiU1AmXkF
9FrP1CnbClF+WNc9vnSZviLHjaf2rjlvfm27kOvEU/tVZ92dwYONOA9ZvUr3
Kg1r5CIf4D/6ZN0f3Ux6o/aHPYkrrv8oM99YnO1e7UuHMu2yuNzUFlsHmfRG
7SFNv2mP55ThD7897nt32mfCqX2G3/XDOqYMH2j/QcSn+FlGN57aYbw67vdR
5KE8zD/Sy7zwiam/9P6YEPrs3m5zJUfviW42+taBSiVH76evMk9VmGJrFNyj
x6ZF9PhpgfTAx0rmF95GriX3dB1X67F3fYW9kZ0XYf4Hn1rfZpMj4jDPq28b
2103PNH/z/u4FZevj7G/FZjoT+/Lc308t1RvnehP793rdC2c3ltT/jrOflDb
N3Utlez7BPKrcwe2nCV3pec0/kaT0LAxi7BOEOALiyc/GmA6t1O7QUojs7Y/
THqgdobYKSmqSAXqh50D57X6OEjuILCjDj3jcUBuOl9RO0lquS1dfmWqeWpX
CbYYtTQyz46ndpiNK7s9r5el5qk9Z5N82MaIV4Z4ao/aFOXmKM+S8tTOwymf
7eiUjfskyD/T3zyz5JshntrB2l5rdSb2vSGe2sEi/2tz7EOulKf2tOfzfZ+8
+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
c/WM4zX65NgLzjMDzkyeOUOF7wVAuw8HPOGb5aDdG/ikz9y/4mOZuvHsPBna
ga9oh/c+wLvFjOm5XqUl5yIdN7vLho9ZtsLzT/f12tv75uH3BfCgmsk7envR
+53p/Dn4brk7OeifgnY3tTZ2K5+D9kaQ/8Wc7f9NyHUn/bXivrvUrGyR687T
c+ad4oFDhudgPA/Lj6n/akWMCuuNA5+5dRrbfVJh3W/gUxgT1OGmCuuKs/nj
1OjRvByMswL+kV/CM/5Xn5+e33o8jAmvmYNxfYB7X5j3ZLkK63gD/1ktti1J
KMC4NZDnQLWKXucLMG4N8BPSXhfTctwF9JGpFStG2uK9j/lLbYMGjjeNLz0f
bp1oXnGlpzGerq+jeSvSupvo/9SPjvOtrd7ilYvxTqyeluONXikFGJcF9D++
zkp9UuAlGJcpKSfCGpn40/NtvTtPtZ4qfFcX8F2rLo7zs1UK6EdaFBZ/mJko
eB/d9fKUgAG2eE8H+oNW28b5ehoF76NHNyw5fbTADetRl9KnHBp9pVKxJ8OB
/lI9i0CvAieO2ivm66t9NzfhlE+vKp/HTQzFvDzgc1NfoHQz8Qcc+Gx3rb96
Xr4d4w/jmFt8a9mJ32oBXjnv1ePNmVK2XwCfsTVCgz6a6AEHeYydPyU0NslJ
8bf/vPZKMOmB8h8i6+8xPB/rVMPf1dH9HwT8VhP5ddy8h7ZH5v3GOtiAV/wR
djIgH+taw98zl/raHLhuoOcxzieh0+bX17AeNdv3Rp1tJMmUCtrdrn5R2PSm
wZ/qYZRn+dbrTf36k48VF2DWfU5aPtYtZ/Flmyc41cmUCuQ/c9sne2Qm1hWH
3/iA4sVTbhjod5N79+HfuRF2eE8BfpV7+CYu9cZ7Cvy/r1un7X0chvcgFu+z
53moZCHeFwB3O7N2Zao33qfg70PdfdeOWYDnfOBX1elaXJNQPM/D3ztknrP3
9sZ7BND3XNup7yUvtPtBu436uFd6ZFqnf95zTeeqURmNTqnw3RDAh5+QRPez
Q7si/D3ab83Je0zPVmxdvB9ct7VDlpqj9H0il/14koDnXqB/Xtu2aKNpXv2p
ZytuzoMT0ywS8NwL8zxiReG4Wr+l7P/Db/luQ4fuvIXnc6CX6hq/HHsb7Srw
22/ND6/2WWomH+C2HX+NO8HWC/bLoV/b1cWZWP8ZzlcJ73LnbsxCewjLjxlc
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
GuA=
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1: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
dxs7ld8/fmMaUyTeT7L/B8z5Is4=
            "]], 
           Polygon3DBox[CompressedData["
1:eJw13XXAZVXVBvBzh7gDd2DuK/edS3d3d3d3g3Q30t2NkqKgSKOUKCkoooii
oCAWijQKSiMlJd/zm3W+P+685zn79Nln77We9aw1s+128OYHjWma5suTN82k
+futQdM83G2a9cY3zWnTNc0jWV6u0zTz5PeDLH/Rb5rfZnnC2Kb5yrBpph/X
NB8HLxZ8QvaZdaRp5swBVw1ebjTbpf2ttM8VfGLah8EfBS8cfEzwl3pNs37O
u3COPVnwu8G/S/sg7ccF/y/n+1XwaPb7Xc43c/5+Frx42k9K+2w53+w535rB
yzpf9l8tx5slx2vS/sv8XSiLOUxzR5bH5BgvZv8xOc5DWV4s63LrzWT5Ld6t
8zhfP8c7OvtPmeP/x/0HL5Dj355t5nU/+X0/yz/M70vZd6X87szyRzn/H9I2
h+eT/X/dr/OukuVj8zxPyPNdMnhc8KHBBwaPCZ4i+ODgE4OXDp4y+JDgD3K8
83O8N7LuyKxbJn93z7n2yG+5LP8iv5XSvmKn3tskuafXszxV7uPXWR6fv+8G
z53rOSz79/L3geCf5DcuyzOk/cMsL5Ll49M+Ve73v8GLBi+c++2Nq+Mt1D6P
btpfC14g+JAcf/5c39q5lkVz7l7ap0n7nmlfJ+3LZ//Lcz8PpG2NtJ2Y+zk4
eIrgNYNPCu5l+39n+9my/ULZfuqc743gBYOPyjZLpn3/4E7wOmlfPviK4Pdy
jHWD78zxRtN2bLY9K8dbPO3Tpz+slHWrpn2Z4BWCNw9ePXjp4GmDtwpeLXiS
nO8XOd7UwQflGLPnfnbI/SyY408avFi2H832G6V9ldHq9/r/ifm9k22OyPln
yt91su0pOX8nz+T3afswx/l5lj/L378Fz5j9Ds42C+Z4i+V46wWvkOMdP6h+
N3naDsj+L6a/7Jbtd0/7Rmn/NPv/JXja4P3H1zPwLA7Oul9l38PzmyH7r522
k7P/TNl+q1z/vPq67yf4mWw7ffY5wPcSvG3a59dXgtfK8TZN24y5pl94lsF/
SNtm2ee5XMsM2X7zbP/zrFsr23fyvF5I20zZ58Dg8fn78+Cftd/Mztlnlmz/
0+BPsrxQ7nfxHHv9tK2YY08W/HLaxvrO8ny+lPW/CX4kv2my/E7O92i7vF+O
P0W2OyP4Xzn/ocHLZv9lcrxN0r5mjrdc8HJj6h7cyyD7b5jzz2msmjr9pFfX
Mq4dT/5oPNF3snxqnteK2X+V7L9D2tfL/qsErxb85eANgvvZf50cb/bs878c
b9W0r5n2ndO+Ydo/Tvufc/xZfQ855uc5/q87NYYYuxbO9odmuZv2lUar/ZLg
d40jwUulfekcb9u0r+3dBj/WqT49X/D0wV9K+zbBawSvFHxL2j/P/uu32xsv
PbMmy9PlejbJ4txp7+R6Fs26O9M2SfZfOdsv4b2n3ZhvHNoi7bsG7JLfllk+
JH2gl/Xd7Htgns8yef5rZ/8/Zd05Wbdc8Fez77rBZwffl/Ntl/aDcvxvBz8Q
vGvwnsHfCN4m22+ZY+8f/C39LXjl4O2DLwleI3iN4J2CLw5eO3jV4B2DLw1e
MXip4O2CLwqeO3gQvHXwBcEbBK8bvGvw14M3Dp47eO3gy/SX4CWCNwg+K/jZ
XN/3cn37Bl/hHvN3m+Ct8zs4y/em/aXc3425v23SvmbwFcEbBA+CN83f64IP
zW/VLH+Q37XZ92rfvO8mv6+n7dL8Ns/yp/ldk7br9AdjdX4Hp22p/IZZfiHH
vyptnxnXc/yP8/ey4K/7frL8TNpvzPJ/s7xb2h8M3iN4j1zr5ebb3N+Y3N9S
wSd7fmn/do69kbkseLXgi4LXC57G+OF8wZsETwjeIvtvkv33zv7fDF4l6w9J
++H5rZblWdInZvK9Zbv3871umL8bBB+X7a/P9vOlfa7gWfObPcvz5Leg68l2
f8/2C+bvbMFrZfszs/3Swd3g5YLPCJ432y88pvax78JpnyLLK6T99LSvl3Vb
6x/shhxvuuCpghcL/lvwzvm7e/BR2f6qbL9b8F7BxwRfE7x98HbBXwm+MniH
4J2DDw/+zvi6Zte+UNY/Paxv0LfYz7oH8y3Mm/XDLG+cdV/L9nsHM5gOzG+f
cfXN+Hb2y3IzbZ5Z/q7oW8r2X832uwfvF3xC8HXBqwYvH7xF8PnBKwdPHrxu
8Lmef/CywZsFnxc8f/B0wSsHn+Z5BE8avEzwDcGbBc8QvErwtcb34E7wssGn
BE+b6xs/pp6ZZzdzfrOMqXfq3e6f7XfI8qHZ/sZsv1HWfbm9ty/yPGb3N/1t
ybSfmval0ieyupnQlJ1yYr++g37ajjCepn+dlba12UVZN2P+zhM8VX6Tmud8
R1leoal5c/r8FszyMk3NY9Pmt6z5Kb/psnzYoP5+lrF3vxz/9zn+MbmeV7Lu
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
YnPtHHxPU7YYjnaK/J23Ke5212FxwuZ0c/sK2f4Wtm2ez0XZbudhcQTmVHPr
imm/ja2V9ot7ZeO5v6Wbsv12y/Z3dWtONjfvMSyblU3DttllWJy0Odxcvmfw
T7pl47B12Mi7BZ/XlO28+7A4DDYSWwmn97PgLZri+vYa1vsxh5vLcZLH5di7
NsVVeqae7XJN+WZ8vLWy/dlN+X5fNv51yyZjm+FM1nf9TXEpOOKZg1dvijue
yEkEf60prmLrYfmY8/SKD992WD5hr1d8OZt7jeDTmrLFd/L9dsumYlvtMCwO
g83IdtxuWD7oVL3y77YZls84RfvuthyWD6aP6Cts3B2CL27K9uWzOP6dTfky
7B8+1OdTlv+zxbA4Nc/Is9In9c0lm/Id2URso/FN+VL2sa9YC19KH9PX5mvK
t/sqTiPnuS/4sn7Z6Fvn+Lc2ZbuzuT3f25qyxbcalg/oG/At4Hw25gM0xQXx
gbYI/lZTvhHOZ8NuzUfrtGOgsXD69L8fu95hfX9sNrbbPsPqH2w2ttt9ucYP
OjWGPNGOHW92inP0vYsR4IHxwWIHj1rXqRiQWJCxCbeJ43y7fafe7dxNxUbm
1Iea4rBc/yLZ/vSc/73go3o1XorRiEccamxN+7n4gbQf0/YZfYfLKLayGLuG
Lxx8XK/GNPYfO/Dxdm43vvHp+fY/yj7vd8pmeKwd6z/tVMxJ7Imt8E6nOGHj
wY8H1W67J1tbw/5iXGJdxknjpRiMWAwf55Rcz1tN+T4/GZQ9aAz/Yzs2e75i
amJrb/drvjWnmlunGKnn7bkbu5/MMU7rFOc9aPu4vr5wU9wGzhv3Ld4jtsbH
3rNb/YvvvXjwV/ECaT8heIngi4PHBZ8SvH7wb4LXDL6GHR98ZfAH2f+C4OWC
L8RPpP2rfNthxQz5UHypfYcVg+MD8YU2yPaPBq+FE832GwZf1a3+d0PwxsHn
BX+R498UvGzw9XzdtJ/r+ws+O/jTtN8SvFHw74M3Sft3zQ/jK36xevBVwcsE
X+P7YPMbp4MPCX6Sj8sP5IMG/838F7xg8HHB//A9Bi8QfEzwX80f/CIcAj83
eN/gpYO/xZfO8c8MXir4MtxA8OnBSwZfim8IPq1XPjV756GmfG0cxyB4iaa4
j/n58cEvGC96xWns7fk1xXXME3wAvz5471751Pt3yz7ka+Mcdgz+YVNchLlj
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
+1puge3n/vmr1mufyGG374Qu1zPzrjxnz5smmDbYe/P+cOC4cBwRrkiM8aNB
cUFsX/fHn+aj89Vpij4cVL/Rf2iU+eeeqe3t51l7hvLZjIGeLU32uG7lSNFq
G5ONzeLKtGi4M3MXjhPXiTPEHU4RfGqvOE/c5wzBZ/dqTjI34VCuarmVyTvF
geJCzUnmJhwJrsSc6PjOg6vDWeIuR7PurF5xR/ht+Z44JBwlrvJLwWf0ivvB
/8t/xAE5r/PjMHGZd/fr/K4D18Mn4ZuIC17TcjfmXpwqbhW3Y27GoeJS2TBs
GT4t35YPYnw0Tt7a+rbm/qea8n/5omx9nCxulh3HnsPB4w/M8c7nvLgjPoHt
7ceXpbmlvZXjij9lI7ge13Vl61u7npea4hs8R88Tp4vbFQ+gnRVzwAfhYuVh
ysfEyeJ+5DUs0xQHhBuS9yD/AUeEixUXEB/AycrRk6v3fKdyVP+bdU92yqeU
W0oLxjeScyb3jHDpuU7lCMoVnGSk8vPYDPJbvzAmdyoHUC4gjTOts5wD8Tca
ZVplOQTifcZd468cBLkINM20zXIe6cn4ZM7vOmjT5OjJ1ZO/92bWjRmpfFU2
hPzHz/P3r53KgZQLKYdRLuMTncqRxC2Knxmf8EW4NPEa8RucGm5T/iy3CMcp
nnNUUzlY+DjcnbwJ+RM4PNycuI74Do5OfIeWWc4uPpTPxd/h9+AuxLNom+UA
4O/EUfmGNPr4LFyhuVvMQOxAfIb2W44X/hM3KF5Er44jxF2KJ8kHxmHiTsRz
xN9xKG8NSn/wRPCVOd97g4rnP8y+yfIHg9K7iJmfMSjunW38TlOxMTYwWxiH
jktnM2u3Ha6ezcx2xoHiQi8dlL/Cb8H1b9orW0tOAX2Z4zieGIpYCq6U7SXH
gL7NNbk2HDmu/JJB+Tv8nstartX5xFDEUsQG2OJiLmIvYi5iL68EH9YrG8jz
9Fxxsdv2yraTI0JfRYvJd3kgvx17ZSOzlXHg/8+Fw7c0pW/YrVe+xu1N6aHE
nvkycmDpBfkg2m2HW2cjshVprP5fawXLQaGH4TM5v+ugDeWT8c3EzMTO2KSe
j+eEW+bT8G1wRLgi29n+wfx26pXN6v7cJ66Jj+X6XKdYuZiV2NUzWXdwr2JQ
YlGv8cd65WPwNXByuDk2svfnPZ7ZcnXa5cTQ98kpkFtwRH4n9Ytr40uf2pRe
Tmxdfo58KDF2NivbFYeFy+Kj8FWW7hWXJ6dCbsXBTcXnbWd7OST0aHwkvhKO
7vSWW5NPcmlTHBsbna2O48P18dH0D/1ELEnsX96N/BsaALFO+Vjy28U8XYfr
OSG/pXr1nD3vk5vSw+Cm+crH5rdErzgD9+u+z2m5R/kxhzfFQcohkUuyv2+o
Xz62/R0H1y2nRG7JAU3x07QL8mRjkkzUMLgP9yNHiV4Hly3/7dCmOG3PwfM4
qyk9JA3gkk3lVNIziOXxleXM0z/y6WYY29YkaO3bWYKfbsdL2gp5WvK1aCxo
IeTdyb+jiaDVkOslfiOOQ4NKiyqHjt6C1kJemPwwmovRXvnuqzWlx6W5o72b
p6n4Mi2IfHT1EGhCcJJbNhWTFJvEGawaPG2vYpEz9oqrlCNOP8qn59vTmNCa
4ATcr/sWy8Rp2t5+tCRyROSKyOGj7xALkG8nP1ZMAJeOe1Ajgl4X5+D63Qfu
HSeh3Xa4dzklcktonsSPcPXy5RZoirPH7csnlF+I46f5zTQ3sUaEeChNK22r
lBn6b5pM2swFm4oHyGGRy4LKkE8jx09e3ezB3V5pjGmNh03pYWiSaZPTNDFf
BqeCW6Gpoa3xHD1POfn0znJr5NeJR4hL0KLLH5Q/SZNu/hym8al2vqdxzOLE
nG76HbY1vvKg1r5l++I37239ETmH+Mivtv6RHEN8wivtfI+DmHls5ejjJuS0
4zcfbu0N9sl0wc+29gRfAN9A7y8fQI0J/AU9PL0j/2n24D+29gtOAS+OH8c1
yE2SNyh/0ENS0wNfQV9Pb6lGCP5P/gY9pRoj/HH6dfpIenc1GeRcyb2iseWu
qMkhHqqmBb5b/Js+HQdBO6qmBW5CTRJ8tXgyfaocav6/D16+ihxa/AA9vvwa
ObB8Ez6KfAQ5ufgT+RryteQs44/nbPMP5DjjQ6Zs8xVwELgIMbuT21gDLuKi
pvTPcqTx1WqayN9iA7AFxDDEMuTMy49apdUnyYmXr7x0q3eTMy8fas1WTyEH
Xr7Ohq0+SI68fJ71Wv2FHH35UuI3+F99VF+lcaZ1njjmNNWHaYzlCGzaFAeI
CzQGGYv0+Yka6n5p5XGCuEE5CbT9OERcIpuX7esbojGmQaNFwzniHtUAkN+1
Wqs3keOOr5cvMZFPmVDfnpwzuWdy+OVf3dT6h3Ks5Tft3+q/5DTLh9qtjVfK
mZbftU6rB5SDiK+VryF/SQ68/K5NW72MHG7xh8VafZiaA/gw8W35TXLC8bni
ufLx5HCrTbFMqw+T443/XaHVn8npVqtiuVZfKEYoVoiDxcWyydnmNOm0cuYc
c49vnK6ZloLtSPND+8MuY5/RKE3UN/fKl6D/pQP2Mn1bxjS6fWOYsUyOhFgn
G5Wt6puhU+fz8n3FECbGEgalr6bZPDPLnw1K78vH4+v9d1B6XTEJsQk+8UTf
uClu/ZNB5fuwQdminw4qvsuGZEsaI42VNP+0hDQutC44aly1GKvcETkZYq98
KL6UMfnYNg5rbDeHyFmQo7BrUzVyjuiXDcGWsI5G3xhprKTZp32kwafFVwNo
l36N4XxzPrqxfSR/Z2sqfiCOYAw2Fpsz6dbFrOVqyNkQyxbDFMsUwxDLMMeY
a8zJcg7EmNHN8sTFns2x5lrXIC8A/6tWEr28fCJzkLlIDqDcJDUXxMvmb/Wr
5mxztxwHWjFzvrlfzgTtpXtybzhp3LSYqtgqThQ3KsYp1okzxZ3SSNBK4Fxx
rzTk+tKinre+k+vet6l8WHmxbEi2JJtJXq5n7tmLOYg9sInYRnw2OStsSLak
Ohi0n2wstpY8fdqAxbLNYU3ZaHI4xFTFVnHCuGE2AduATSrHRE0P8bjFW32l
miTiofRT9Ms4XuOrcVZsVx/Wl8WYxZrl9LqXa/M7p18xYbkVcizEitU8MTYZ
o+SXrZf9rmkqv1gODU0ObQ4OG5fNhmXL8inl+GzBTmnKJpejIgdQ7gUOGhct
Ji02jUPGJbMR2YpyWGhhxcjFysUQxBLE0OWiyEkRW+ez893lgNDuqkEgn3Tv
Vl/ApmJbyXmhpWWTs835sHLu+KDGE+MKrZYcQ1pyMRyxHDU15IPu0eqX1dCQ
T7pjqz9Wc0J+60atvk8O6WFjq4aE3FI1X+TPbtHqEdWIkY9L/yReqEaHeO8C
bbxejP2UpmJiYmNyYOQqiImJjdEA0AKIAYgF0JC90FQMSCyIRo1WjQ/Nl6bp
+lNTHDwunkaGVkYMRiyGJo02TUxJbIlmjnZOTEpsioaLlouPzlfnm/F1H8/v
5G75FHwLNr68H5qJ85qKSYhNfKtfekIxLbEtmjbaNhwALoBGiVZJjEusC8eB
62CTykvDCbKp1O/CFfpmfDu+Nbnw9FxqJonpzNsanrQQNBG0PzQbDzWVc0DL
QRNCGyLGL9ZPE8g2YiPRBuBwxIYcD7dDE6Z+kjpKtGLacT2/zO8t88tI1R5y
Da5Fjolckx87Zq80drR2NAi0CDR6tHo0CrQKNHG0cTQNtA00T7RPcjjUoqLx
Y5ux0WgL5ODSyoj5iv3ifHA/OC0apu+ZbzpVk+Cf/fJ5+D44LjaimAKbVr0m
sQY5vrQ9YtBi0Vdn3Vadqgn0Qtpe6lc9BTFtsW0aR9oTGhTaKTnFbFM2qlj1
tdl/r07tY18cPNuZDY2bx4/hvtjYbG2aNdo1MUuxSxo4WjgxU7FTGkpaSjFd
sV1c7Ku5n38Zg7rFreBanjfmdCuHQy6HmKbYJm4Bt/N6fjd1S3NHeyemKbZJ
Q0dLJ6Yptolbxj338ruuW5oi2iKaCtoKMQdaNJoRsQgxB74FH0MswvzJF7o/
697oVQxALICPy9fF/eEqX26fgZgEX4XPIlYhtoMrfLHd51bfUKe+Id8STSZt
Gw0KLcptab+0UzWTxB/ESNRbolkRO7nZGNCpddpsY1uaFbELGkBaQDF0sXQx
KLGoiZxnr/qQvkRzQHvgG6UFZ2/5do05tMT4QWMRToOu2DpchzGDVlt8zViC
86LTptfGhRljaN/pI4w9OC45Pepl4L6MEbT0v29q7DCG2Zf9Z2wzZtGO02sY
y/QhWmJ8vL6lD6mVgh/St/QhtVJObqpv0ZDQ5dPns99oRujY6dnZf/RHD2Z5
Sd9XvzQmdPj0+LQnxmi1W/Bnxm59hBZfPFPfwfnj/o1BxiL6n1+nfZW0/6lf
+iVaS/wBvTP9k9wS/rD8EfootezwefJPaHpp92hoaGlwcHKe1FvBzRlj5So8
0vYXnKi8As8YV4oDxAWa48317F33Sn8j9oNTpfP3jnGt5kR5DN7Bla2961mJ
Z9Lf0rzzodQ7o4VXf0JtLvFfejg5GHww9cjoj9jHcjE+aiqWxL5Wi0t+1R2t
vSz34Z2m9NfsZbVR6H/og81papHJnzLX4WDlFNqGPY2jlRegz+Fucb7yKByT
/Y0TlsfhGeGKxYDozvUZsSF6Btp58SN6W/a+3A56HXo/jp7aiOpXyBell1Br
R34X/Ti9BW28eAx9oZgTHb5jikXRjNOO07DQstjng6Y0F44lB4HNoF6c3AT1
OSzLZ1h7pOpZqFVFf7rBSNXjECvF16sXISeBD6eemVwFOQR8SO/k/+uBeFf0
TvTX6nuoBSe+uFZbj4JPad3EXIbROpb8iTXa+g5ybvjT67f1H9g06t/JnVD/
w/J27fzhmtWHU2PEvWw8Ur4on1StDtfAFmITuTb7mHvUEHEsOWVsLvXL5JqJ
DYnlsK/YWb/Luh916hzOJQdK7S45UnKjOEY0u87p3O6Br8xndm+eIVuOTefZ
egZsNTabZyPHSG0Q9dLkHslpY/OpN0b/MRipelo0HbQdE0aK68B50ILwYXBB
OCG+jZoGuBScCu2FGgYcXJwL7QUfgC/At1B7R00PWl4aE1oTNSz4Pnwg2kE1
LtiObEjaQfVK1IKTb6dehXom5nrxMnpa9VbUhqMPlU+oz/D1+fz60uetj6W+
3Vat/hanoH6bXED1U9QaXLfVM8sZxCmox0Y/on6GHL0d2/6p/otjyTdUb+Pj
1kZXL4zeUQ4gG9s1yw3UJzzrndv3pd6Kd79d29/og9nM7kFuoG9Q7ixNlW9T
/E/sUN9gi7tGXAhOxLWLQYlF4UjldOM8cZ9ydOWGGHO3aUqDaiwWExUbldMr
10RMTWxNfSQ5vmoaqW20UjueG6PlCtK0Grut00bzaewXExUbtY+cYJp4tR7k
nNPK08yrRSDnnJbenMCX49OZK9Rkcm45XI/2awyWC4GDMDYbQ2mZcRbGVmOo
XBYchLHVGEpbjoMwttL8q0Wh5oFcALF2sd1hft/p1hgo94DGy9hIw03LTUNG
S2aMo6WmMTP2iaWLZQ/yu7xbYyatNM7EWKq+kL4kP1H9GvlmfMkb83uyXzF3
sXcxaTUkvHNjDQ5PX5BTL7f+wfzGjasaqPgmOZ9yP/VxvhqfTd/3DeD6cH6+
DX2Qr8Zn0zddAy4MJ+baaORxZsZY2nnfCF+ST+nbEeMU61Q/S40JnMCiTWmi
aKPEUMVS1aiQG6HGlm0XaO0HMVOxUzUw5JKIyYrNqmEhdwVni7tVQ0NuC40B
rYEYrhoYYsJiw2Lual7g+HH98pzljogJiw2rcSF3g+ad9p0GmRbZNbgWmmq2
jZi92L28Qbkd+pS+RXNJe0kzII9LPhctgRo3uHMcOm0vG1puGD0D25oPIVdJ
fSm+hfovatLgg9XGVp9IjS78rtrVxjBjgXwAY5v6MThl9R7V/qKBMdbKn6ON
oemSM6D+IK0Xn8Oy+gV8EZoxORDqr9GSsVktH9H6QzRkciDU36MtowGT46A+
HG2YGi9iBOoT0heqf6PmjjHd2D53fhd3asw39vPBaIHUA+Kb0aTRpvmmfFtq
+ODA1fscbfXdagfTKBi71QTCeasPSm9NY0Zrxsfia9HkyltlM+ETacbksKjP
R0vGZ3Xt9F98WfpwtS/Vw6K951OyVenZ+Jrqh9Ee0f+o/8QnlQtLH81XpfmV
F2sdLTDOXQ0TNhcuHkejFp78d9wNH1buLP0Q3xaHpjau/HncGo5N7VX8Pu4N
56QGB5sPF6Xej5iC+pr0hjgqNTzUb8Vd4Ygsq4eBO2Lzqg1In8YW1gfVBqe5
0Df5yHLp6P34zuoFiUmopzps9ZpqxarHZW6lkZb36x5opyd+I93SM/t2+Fie
NX3fRN9rWHnB8oPpZWnI5a3yQehxzfnONUXbX+hV9SV6PLm/amqIOalvSc9v
/FLrVL69fH56frUB1ROTb0ZPr3av/Gn5Y2o8q526fJsPo34JDtA29Pb0+WrD
q9chf03+gHPRs6hvpd6c2sPyu9XfUu/Vt6bennoIagjgEL1D+lH5APrmbO33
Kx9OzEU9Yrnf6nFbVm9gyTb/TUxAvVh62tfamI1zysWXLyfGod6xXHQ55WI2
6h3LNVfPTpt8W/XQ1L/TJj9WvTT18SZq8TqVbydfT0xCPWR6c/kNasnKT1df
Sv6dGIdnKj+Chl3esXdM2y4/gm8ydzsescH0RfW22GZy2MUwPHO57fTFakPR
tKnvpSYJrbA+KL9BTRW1VXBQuCicglqwZzXFNahJIAbinZuv6GvVnlc/Sj0q
NQzEUNyD/Aw1ZsQA/X8B9PJqTonp2YceV80UMUPvXD6G/DoxG/V36e3ZpMYe
9cKMV/TM/q+Cif9nwUjZoGw39SHYpupliQH6RuiZX2g5YPWv1aag53ds9QLU
W1PPS4zQmCMfhb7ftar/Ir9PjRYxRpw+PTe9tb6hfqP6bmrGiGm6Jvpqmjc5
XvLbaeFwYM6tvhluTH6Bd62+nvpiakaI6bFJ1ZLAaeIOLmyK6xSDUwt8k6Zi
c2IAywfP1VRsQAxeLJ7NxfaieVFzBEdAC0M/jntUv0a9M5yw3NSfN8UVixHI
nbq7qdgBTQptipiI2AhNiZpKxkxaEzF6NbXUUxe7Z0OZW+VTsK1oTmg+Tsz+
F/QrR0pOI42p/CIxhWXN9U3FGmgS1AjDEdAqiLmojUq/JBYjpuj/lqAfEGsU
c1cDzDqxeBocNan8/wW0OWJOcqtXayoWJSanjV5DrE7MRuxGfIiWk8ZBDTM+
Me3DruzDpmJFck/EPN3rOk3FQsVM5Qpu2FQslYaOtt+cSFuH45c7Rw+F+6eh
o5PDGeIOaSjUWPNOaStoMGgI2NBsaZomNWXUz6V1wpGr9fq9prhzMQq5a7c3
FbugoaClEGMTaxNjwaXc0lTshU13P9u4KVsPZ6y2AX0lLpmmWe4CzTGtM02l
nE0cEK2lHCE5m+qpy1ehUZVHz2aiXaWxlEePM6C9FBNXE8ycKVZOoyfH05xH
u4fTNPfQ9+I6cXa+laea4vJwCs5Fr4lroElSAwtHQatEQyrH1D3QluJ02ULy
m/C1NEpqbnlmtEtiDmr90k+JRdCAqaGE86INozFSE06foz2iuaTb5IPxxXDm
uHM5GnI1aMTUZMPJ0Y6xMe/N8qKtPyNm4N3RF4kl0HypsWYMpQWjUVIDbeI1
DUpTRlsmJiQ2RHOrDgfORnz2/wASZNOY
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt2HfYjoUeB/D7RfaMSOUgWafsVVKRNCgrRHplZJVVvFZ4kZWd7JlShCSr
pTqnSElIGRVFEmVLhHA+v+s6f3yv530+9/f53fO574fi7Xs27ZEhSZL/SGa5
I1+S1AT1ZFDWJHktT5L8UyhJsvITKUnSX85ksYxv5zfwArr55S79F/huXva6
JLnO+9UFkuRsQe9zWAdvof+0blcZaPmr+pf4pLxJ8qhOM0k1/yY+hufKmSRH
rTOH15xys888Z1l2c07zi1KRDWbf6Hc3p5H9OM5v4b35l/wPPpKNk6Pm9+Gb
+Rnblsc680sJfjV3kvTlvfQfMOeUfmlz0vW/5U2tdyf7TuryhfwiP64/hv0p
ZXka/4rn1r/KStjf2nwE38OL8Awsq9TkI/le3oR3YB2lP3+FX+DdzH/Y9rxg
1knbOYTv4PfF8WRd5QH9WfwUL+P4n9Y77XNX5aT9+4TX0K9l9v3SVn+a/jH+
i84TZrSWvT63T1517s7wBWye/MXOyVJe05y7zbhXnjRnqjlHzTmkn6Y7SY7r
npAl+n87zg1tQ1vpym7Rn6TfU78oKyZleUY+kM/hm+zvXHMu8Iuy3Jz7rbeZ
dTaX7tbbU77mrXhX10dyvfX4+0nLW3r9JOabsTL2Tfdl8/8wv5xl/7BL8gif
xH/j1Xhhn71JGvNx/BdenZ/XPSsP8Qn8Vz7L/P9abU3+qW0cw3/mtfRXsLck
VX8K/51X5dXMriqN+Fh+gH9oTmtzLuvX56P5T7yyfiHdgtKUj+cHeSV+Ic6J
NOcT+SG+35xWrKXstj175BXHp5F+JzPaSJr+G/opjtUV52W2Y79NDumm8jXm
1NNfYsZi6aY/l//J8/IUM67wKnwo/47/aU4ZM85KQX7KrFO25Tb9Q7q/Sl++
QP9v/bt47dgneZrP4Wf4Mz5TyIyBvofFzEh4P55PP5NuDqmlP5zvivsDP2f2
aPlDfwDfxm/nt+t2kyH6r/Mr/DH+ICsjdfgifplfsP0trLe/9RY0pygfy2vr
19VtIl30Z/PTfLTtnGvzUqWc/ot8P6+oXyXuhfKY/mR+mJfgZdnj0ovP43/x
I+Z8Zb1b5KA5T/DVPL9+Zt2MUl1/GN/Jy/N8LG9c3/wlfoTX5Y1YQ+nAZ/AT
/Kz5bzg2S+NaN/+KvOV6uEe/e5xb6aQ/U/+kfh3ewIz60p5P58f5UnNm29f5
MtaMinwmL6ZfXLeYlJSKvoPf82P2J4fP55SPraOoz2Vh75qT1/sHZYs5j5mz
Qn9QXCuWl5M7eS0ZajvX8Cy6DWQra6H/lv7PvCk7Z+4o/ihfyjfyEvE95RN5
E/4mP8Cf4h3ke96Sv8178+a6baQCv4YP4nn8HZdfNikuxSQ3+CHuw3EP9n6S
9831l+uvivska2LZDt6YL+Gr+Wl+QcbwRnwxf5rfz+6L+XFeXHdpvAuvwxpI
SZ6i358/y+uzenIrz8Sf53v4Q9bZTHbyZnwZz+y8HI57kuRyDnrxjbG/Mt/f
57yW1NlveUavWZ23g/7eJT/F+Yp7q96LMd85qS+Nza8dzx72l+9LedZAmrCm
Mtr5OmbZQJ8fIYdZGzPWWtc5ve1xbOQbKWT+M7Ed5lSwbJD9v0u/kHQ0o0ec
3zieUppl0B1gTjqvpD9Y/x5eR4ZZ71y+XXdGPINZO/11+ufNr6hfWe7ld8tg
3Qb2uXU8A6WdpNr/8/rLLHvTnJkyQreCOTP4r7yz2X3i+PBWfCX/jbdjbWU/
f5y/w7/k06wz3Xa+zVfI5+yi7XmZT5c1bK3MtP2X+FQ2VP8dtlpm8H4+U4qX
lmqsehx/XsD2Z7Hdt0l5KSelWF/9krrPm1NFt2rsr/43vIZtrC4fs/dkC7ts
vbP0h+tvYitlE/+Hz+AzZT37ULbyzVLRjDvlM7ZB5pj/Hb+HVZb3Y1/lW7ZN
qrIKso59JLP0r5o/3+xh1ruRrZIv4hq3D63sS4u4v0kr5+Ws45lmWXvnpK1U
0q0cv0HN6WJ5qt5e83+Unv7uzE6YfyW7e5B1XK9bWHrrn+QJG2C9N7Ab47cg
b29+Vp5NrmX55Tl+mA8wt58cYK2d31W2ZyDvZFRHqcHvkPQ4DpLL3896PWVd
Keb10e+kn9PfueSm+P7GtRLXlORm/WxPZlZE0ny2Dc/Er5HsLIf04jslSzwn
LG8b59r623lNlQy6GSWr5dmkZ/wuinPpOFyWlPgeSXfeOn4Xsr7WmzHue9KD
n7bN2c0YwluxG+zvKNufwTE9EPdO2SOFfX+7WfaGOd/G94Wd12/P3tUfFr+3
4zsU9yx+LU/n6/hQli5T4/rkc/gIPpmNlwfi+POhfCgfzAZJXZ6PD+GL+EG2
U3rzSnwWX8h/YIntmRDXCZ8d90/p5++tXhPZZR+/jvuh1yPosByS533mNr3R
vJAZ2aWgzInvHn/F/N16uySNlWVTzXmN/8IOyAB+K58Wv2/N+Zntkx+ln2X/
tmwkL2Bufskj03k1Pjyem95nivuyTOFV+Efmj/X5F2UZu5MtiP2I54VebdnM
G/DX+O54vrDH9Rfwh/kivpgfj2Np2Ze8Pn81/h0U171zml82W/a1nGYnJA/L
K5+zL+J3PZtvzg5ztkkvc8qY87I5I/lLcR+Wh3lB/gIfxWfFM1Pq8wJ8GP+U
FzPz5vitHM/9OMZ8OJ+g20wa8uvi2PDxfBlbKa3j+xvnio/jS9hieTSeI3wE
78Ars6XSgl8fx54Xd58p5V5RRIpKZdf3D3yD/uj4TSHz9Gvqz+d97PNR9pP8
LoMtKxe/6fXTbfsRKe4YPcs2xXmXHv7e4PWEznjLM1hnj/g3Kv/M6yX+WZxr
3sv7vnyL1xzeH+NZvC7XOR/HwPvt1vmIzus6E/nb//93+zO8JJ8cz1neK+6D
kmJ7OvIP+Ip49sS/L2ScfsP47sbv9jgvuovkMu/A3+P74t+/bE1ch+Z04h/y
vbwxWy5X9Z/i78fvZ76KvRPbrd+Zr+cr+RXrXMsz8y5xLcdzma+LZ4Vk4135
x7w/b6lfW/4V9z0+mM/mn7MN0o2X5lP4+7xwzJbJcR/m8+L4x/NNd6tslo3S
I65HxzSb851L8sS/w5z3H/XfNOeUzjEZplfenOl8B5/j3M+N/7/g9fhCPpmv
1V0hT/BS/CU+jb/H3pX2vBgfx9fzXLaxSBxrfjufy2fyT3Q/kM68BJ/Ip8Tx
ZGvkSf6v+C3Gp/Ph8QyUAvxmPoGPieeK2R/x9bLQshrx2yV+j8U9KZ5VrDgb
r3+j43Bj/F6X+xz/UXwf/x8nf2ap
            "]]}, Annotation[#, "Charting`Private`Tag$15515#1"]& ]]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJwV2HmcV9Mfx/GrPUr7QllKpFVIi9CoVBQSokiplGjfkSltU9M2TZsWLdqn
mhYVIrRItGiTSkiWlJRd5Pfj+fnj83i/zvt+zuece+bec893ynXo2bJHjiRJ
Ui9Kkpw0rUiSzCyQJCVLJ8nFpZLkdVwNv5k/ScblSpK36Bty3uRX4e/NlyST
FZhAd4t0nE4Pi4IKfkpT5W/kD6YZYhMeQvOpv0ad6uqMujRJFsjdVChJXnDt
LTmj6FzxDZ5Ht8m9Rs2tNL++6+kN+ubB2bgGzotX4Yr41RLuyXwPRl/xEf9m
/m56qzq7aCH579Oa/Gzj7zTWSjpf31/pdv3m4JLqHCieJJPwKf5m/mx8Mf8Q
zsQn+e/EnHEJ/pFYS5wH79d3HR1pDd+mk1zbYKyJkSOO4VfoDtdelfMh7VzU
muAudJprh+TMinGt1fuupxQ2N+1P+NPpK/zt/Pr8rtov8+fTneZ1Ae+gGXL2
0Y+s80r3vQt/gD+mOazJHrpcn7/lZ9Mx8tfFOsj5gpaS8xVtZ07Tza09TZe3
R/5Y+prxh/DX0vExHn8VneLaLDw15iWO4Bl0stiHM2masZbJ3WiskXgO3oA3
qDVCzfX0NuPXF5nai+LvoO9iOk7/tXgQ7S9W4hfjb+HaGrw07ln/hfrtpCe0
y6rzdTy/xvqS7jdWSffTpGCSPO15qOHZaIC74kv5t+OncEH+e9auMy7CT+F3
wVfzi+HW+B9jl8dtcE451XA7XEDOO/o+ia/EhfmP4f/Jr4Afx1fxi+JHcVVc
C3fAlXBl3DHmg7eo0wn3okPNf4n598dpeBke7r4ycDYegV+OtcBj5MzAa3Ee
c7tBzfbqVMGP4354oJzRcrLkXG6s37Qb80fyBlvPEfR7c77Av4s/RjuNP46W
kX+e34hfEV+n5hM4h/pVcFtcGt+Nn8HF5ByQXxtvp1XjOaRF+B/SOvznjLVO
/efpWWNUl/MjHai9gj8gnnNxUH4t+Rl0vuvrzX89f56cdfQ4r7i+39EjojA+
Sj8TRfDnNNNaHaN79f2G5ucfoJeZzxl1H1T/N7UKmv8D+BecFzfHp/C/cprg
su7xPn43XAY3x8+Gr04efC8ujg/Jfwif1jfhN8VncW7cDJeTUwK3wj/yc+J7
8DX8MviRWFs6zTzL0hL8w2o+zJ9p3otjf6CT3NcndI/7Wuf6QbwLv0QHyWnk
vTgvRntHXqe/i3T8Rqj5H8fj6JfxbuONNFX7IB5D22gfM4cL9Buxg/89bSia
8f8xzt+xL/J/pX9GPv6DdhBn5fxFW6qVyk+Ld077fv7/9R0b77l53sl72b28
SMva66rH+yX/JtrB/Q/lX8GvoX0j/0Y6UhzFo2hH18+p+S19MuaJH6D9xUVy
TtOfxKf4Z3rK9e/FSXFGew//R3qHWMxrEDliN/8HOlW0wp/Et0eswIeC49sl
tojNvA/EJnHCta30a7rNte1xPZR3qcghmrm2gXcv/dY69LYOd+O7RDa/Oc0Q
LeROoc+IvPgr+plYh4/Rz8Xr+As60xpOptdbqyN0Nf84/UXsw+foPWKl+o3p
d2In/yS9T2zkP0K7WdPl/B60pfYu/oN0nniUf5g+FOvDfzjWVbzGP0rbxfz4
j0WuOIxbx/giS84Buim+l3gvbRJ95TSlj4uvcNu478jD98f3U7SXv5ou8b78
Zq1uMLdK4g9cmb5nDc/hzXFmsQ4b6Bbvwnj8TnxX8M36z1CzBm2rzxQ1O9Be
2sVwb9pdFIp7p31EcdyXrop3Wd+O8ltp78U96TL+eeOm8LtpF5D/LF3D/yG+
ZXSROIOz6ATz2Wo+W81nNF6L38dj8Rv4XTw79rU4t9D9sSfiYbSTMc7Gty/O
DMZoY6wZcY7Td2OcVfTtF99LOQvpxDg/8Lfxt8mbJX8r3SIm43djbeWdlL8g
5mkPeVv+e/JnuvaEnFm0nyiFB9BL6Hn3/ocY5N2cwKvgecumA13bTTPjHceT
4r0Wj+G58c0X9WJvoWmiER5Nx4qmsRfFuxhrij+OuvQaUV4M065J02lV61AR
V6NX0SvFFaKKqCwqxTnG3AbLLWNui2mXOF/QOfGM4vn0rzjPikNiiXZH/gI6
Md5JXns6TZzAT8T81ZxOq6i5LJ4V+Uvp0yI37hp7Q6wXXhl7GS0jLhdZ2n3p
crow+uBV9Kl4P9XvFHMUF3DnWBN/i9n+Fq/5WxS1/+/Tbmn/r4OHmsdwXB5f
hjNxizi/4Ym4Av9KnBHnZ7U6qJmP5op3DOePvU7ObDmT5PxgnOv5p2kB1zrj
S2I9PBODjZtbznXaw/nVacGYPy4a9yiew+XjHRK9cfF4r81nnPpj9b3FWM/j
dHwFvhi3wIXkdZVfmN7Kn8AfH99B7SH8cvRedabGc8bPJecF88mDu5jbUJwP
N+AvlLME18StcG98rb6P4F54MN6EF8ZZCG/EC/DQOLOqUxQ3it8v/Hk4xdiL
4mwafyM5qXLy8pvI2SxnMR7On8YvFmc8NVvwu8dvqDj/8+viuvx+/Bfwfv7n
8VsFf0Fbq/8lLRf7rJwe/BFxnuYVx3cZ623+ItxXzno8HzfHk/E43DjO63gM
vt5c09WsRgvr+4E60/lLYr+JPZN/s/yu8gfyO9O6nsOn6I3x3OtbmV6r79Vx
/ogzrXYq/ypaiz+Yn8bPiv1GzZv4ddTsw3+e343eGXtgrIWojTvFuVDcjp+m
tWLPpc/Jv1z/QeqXobXVf5E/Os6uuCZOxfXk94/3OZ5teS/Jv5bWlZPGH8Vv
LWcRnoK742w8GzeUsxTPwn+bc5M4z9C7Y334q/n3xLkUr8Fd9c3CM/Ft/Ew8
Oc7z+jSM8wy9jl+OPzXOaebRMn5oxx7J/8yav8Kvjm+VMyzuJfZbOVVpaTEA
X0b/VCsFn6fV5NeJs478kvioOnPit4D5rOXPxf/Ke0D+RfE99JwMkpMr3i85
PeUMwuPj9y2/FP4W/4UbxvlczZO4Pm7D745z4NyxD+DSce6l/dU/RevxM9Rc
wZ/qO1In9iZ7US99F/i796Z3ylkgZ5Wc49o/6ZcSvxHi7Mjvi9vy+/Bz4mP4
NL4Df0d7xJmNTlH/ltiP1W8av9/1XSqnduzXcurSr/X9XW4DfjM5O+WsjH3J
WI/iPriWvDHyK8V+IubievHdEMNwxfimqTPE/PvQm9RprG/P+B2kdqb1XWUO
zfl7+Nn8Aeq/iV/FK1zfoe9t6qTImc9fFs+bWtP5z9BL4p1Vawj/jPwKcdak
9flz5GfxT7jeLn5303Ou1cQ/0Z/FLfiX+O0V60JXm08PdUeo35Pers5MdZar
82z8j4Dfjf4HbmB7pA==
            "]], 
           Polygon3DBox[CompressedData["
1:eJw13XWcfVXVBvBx7gBz4d7fzB24zCUUaZWUEAQRAzAAwVaQ7u7u7u4O6Ubp
li5JaVAUgxIEEUFR3+fLOu8f5zNn3b1P773iWc/aM/u6W31vy+GhoaE1ph4a
GsnfjSeGhrbPzsndoaFTB0ND34m8U+QTIx8ZebPI50W+NPLpkZeOvFLkI9tD
Q8/1h4aWjbxq5N3Svm/a54s8d+Rz0v7btJ/VGRp6JBe8anRo6NaxoaFD83e3
yCOtoaFfZ/+C3tDQG5EvSL85cvxRka+LfFTkmSJ/K+dbL+c7Juc/PPKVOeaQ
tB+W7YjsL5/2NdN+YNoPTvtL+W3GnHsi2wvZ/3baN0r78Wk/Iu3bR74m8nWR
z4n8TPpMSd+xbM9m//JsR+bcB2e7Ivsrpf82nj/P80qe58j8dlTaWun/WPa/
lvbV0n5wzndgzjdt5D+kbZ/Ie0X+XuTd0n5ljv9Tjl818maRr4r8x8jfjbxx
5KPS/6j0/+Lk0NBPI5+U9hfSfnvew6w53x9yrafz/nZN/1vTflv6n5/+v0p7
O+1/TPtTad8y8ja5vz9F/k3kXdL/VyN1jGOvSvtf0n592h9M+3l53ztE3iq/
z5Pz/Tm/fzrnmznby75Zfv8g7fdk/4n0fzJ/p01bv7nmHmk/dLi+5f1pvyzy
UNoejHxf5OlyzT9F3iX3u3fOv3DkBXMvu+f5XszzPZJ+U6V96myPZn/RtC+Z
9lPS/nzavxr5J5H3zfH7ed70eSfX+1u2O7K/ZN7XD33f9H82/ZePfEvk30f+
b+Qlc/w3Ip8V+aXIv8rzvpbjns29LZLzPZ/9V3Kuj7I9l/2vp/9a6X9IrnfQ
oN6zd3dfttuzv1vap8n+itk/L+3fyPUejPynnP9/Of9Nef4Zmnf3ZK7x8169
b+/9M+l/eeSXI98Qef7IG+Q8X8zxZ+T4BceHhpbL+a6I/FTkD3K+b+Z6a0c+
Iv0OS/8zctxDzdi8JeffIu0Xpf3R9P9n+v81v38+118021vZfzXbvNlfONub
2d8n/e9P/ztyvitzvr/lt0XStlC2t/VN+4xpfzbn+zDn2zfyQ5HvSv+r0v8n
kY+IfH3kyyPfn/uZqzn3c7mfedI+SPvzOf5fOf6xtC/WnPvFtN+R558n8l8i
H5v2EyKflufZL/1mz/n2zvGP5Ph7c/4LI5+b359O+9Xpf0eOPyztd6X95rRf
nfZZIk8b+fVcb2jGoaE9Iz8V+e3Iw5H3iPzryHem/wXp/27Os0Su/4Vs72T/
3lz/7/n7fM69eNrPiXxyrrd/rjub9x35xcg/j/ypyKdEfi7yeZE/HXnHnP/K
nP/fud50ud52ka+L/NvI00b+cuQfRd4r198z/Q+O/KLvFfmKyCvle/828ofp
307/H+fvPbm327N9J/s7pf9NaX8/+6Mz1nVd/+bc8+1jdV/u75eRb4t8f+7v
c60a48fk/W5jzuf4X+Z6Z+V6B0R+OvI7Od80Od+hke+M/ErkTuRrcvzZOd+B
Oe9n0//R/F28eVcv5Pzbpv8v0/+anO/stO8euR35jRz/iRy/VeSLI1+W9jPT
vknk3SM/lPZ/5H6+nee9J/JfIk+V/mfnen90/7nO59J/0/S/JO2X5/jTIu8V
+fHI90e+KPKKOf6GyH/P8VPPWPPIfLo29/eY8dEre8PuzGx+5vh10//X6f/3
XH+pHL9h5J9HfjnyCmlfI/JpkX8XeZnIq0Q+LNc7NMevE/k0+jvyGZFPyvmf
yvnPoZcjfynn2zrtF+X4P+T423o1tp/JvXw+7Zvn+AvT/mTa30/70um/aeTz
I/8+8n5pfy7ywzn/xen/eo6dL+97gWxvZP9HaT/U/af9EvYwxz8c+dUcP5Ln
vzD38Vbu5/b0/VWu+Uzkr+fY/0T+XeRvpv9j6f/X9G+l/3Np/27a/5f2l9N+
WuT7c/xlkW8m92q+mXefzPWOjfx45LMjzxJ5udzP6jnfAbmfQyIfkd9/kfZL
c/xNOf6pyF/J+f8Z+beRV07/XdL/sVz/vX69N+/v6bQ/kvYnIn8j/f8V+aXI
/87fFSIv1/z2ARub/a825/yQzTc3mmdcMeffIud/MPdzae5n/8jPRL478mWR
H6J3m3f5+7Ead8bf3dn+nP010/+47F+Y/iel/3b57Yn0fzLbttnfkB3JPmdp
o+xv4r1nf+psG2d/q2y3pP22bD/K/vdznrG0bZH9GaPPl4j8bNp+EnlK5O9G
7qR988j9yL1c/520vxj533k/i6f995F/Frmb9uUjvxt5g8gTkT+d73mJ9xH5
GvYx7W9HXi9yL+3b6JfzP57fts7+D9I+/UjtT6Z9y/x9Km03t+oeb8p2VNr/
Fvl32f9utgez/3q2dbK/bI5/K/vrZn88x69unrD92dbK/hfT/kKzP5b2zeh9
36pVz7i+ee9bNc/AbrKfm2Z/+vGym+zne80zsHPs3bnZXyTtl+fvjpF3oFPa
Ne6N/wey/bFdfhP/6bzsLzpefiv/9YrIi4/XPDafj438+cg35+/R/NdsN7bL
792+OfcXvL/ID+devhd5zvGap+br5tkuaNc8N9+3zXZx9s/llzbnWjr9V448
VTM2Zog8W77XRTnfspF/2S8/lj97YeTF0n5o/n458hf4ONn/VPqfk/5LZ/8X
6b9T+n+e/Y8813jpLfprq+Yc/FL+6ZbZLsn+Gem/P//Wt0n/jSIvHXn/yLNF
XjPy5yLvGfmT46VX6dd3ffvx0qv067XZ/tUuu8Q+vdGMgbP42ZE/MLbSf7/o
h3szn5eMfFW/7Db7/WbkVcdLb9Ff/zA3xsuOsWc3Zvtnu+wm+/nbnH+1dtlx
9rzrm7fLbrPfr2V/5fHSk8819/ZD95vrn5ljO/l91UHZ1Rebc/9ovPwA/sCz
zTOye+zfk8Z8u+wW+zXaXIOepC8fbZ6BHnmm6bvKePlBDzW64zvjpXe2aMbC
9yIfH31zW97HJdE3N45V3LFRM3a+lPbr8/eQyC817/Afuf+zcv9T0u+79E/+
Lpe2g9I2R/ovEv2wQOS18vuOaT8kv38t8peab7pGfp9hpHTV7Ol/Q/4exj9q
3vmWab+/mcufTvvB+fv1tC3fXGO9tC/2/2Mv7etE/lTknSLPGnlHeiXyeLbt
23Uf7me37M+S9s/l/t7P816c594h93e2uIe/kfal0v7DyJPNsYPIJ02JXzFS
Y9BY/Gm2f7dKt85s/qZ95rTNkm31tH0z2yeasTBT2k9J+ydH6h7d6wPmcPZP
5SNk/9psB3q2Zg6clj4H8Feyv2SOfzl//5frfZTtuXbFCeKFVqOT+EH8oduz
/cHcnKzzOe9f+uV33tW0rZjzLZP2fSL/IvKf0/7TvI99I98S+U3x8WR9b9/9
1X7FneLPFyJ/O8f/YKLmq3l77KDsAHvw91b1WX2i7t9znJj21SIfYzxFPmFQ
fhJ/6XHfdbz8Tv7n1cZYu/z8+xtduVLafzxR+oreOi7H35C/1zd9v5X2r0zW
+DGOXuuXn8/fZxu+mfbvT9T39Z2PyfE/nCh9QC8czb/OeL4n4+GL6X91jl/U
fGzmdifHr5G/L0d+qbFxG06Ufqfn3+1X3CH+6LsG+5H2c7J/T/bfTvsd7Rob
s2b7VfZ/mu1537KxsV/P/Z+Rtruy/1b6v5J5+Km0fbKJofkh/JFds93aLj+W
P/tM9lfI/T1N77qfbL9pl9/H/7s7+8uNV1wjvpmpOWaN3N8Jxgvdket9NvLs
ke+N/Ld++X38vwuab8QP548be9/I+daaqPFrHL/Tr7hP/PfjbCfQqfyY5l6W
H6/ruN7p2e5s13N63jObe1wl59su+6fkuOPzPT4/UfaDHdljUHGyePm72Y7O
/p75fd7s75P9z4xXnPKj5tqfjXwMvRb5+yNlQ8Xx4vmjsj83e2LORF4x7Se2
C/eB/6zgntqFC63aXGse42ui8AS4wj6Diut/0nzrhdN+uHkR+VvZDmuXDvC9
ffdlx+u5tmts3RLjNe/Mv/0anSPOF+8vm+3kdsUd4o91sj3YrjhAPLD+SPkI
cK3zmravjhcuA5/ZYKR8ELgN/GaTkfIxfp8xNEued5Dtt9nfL8fPmbZd0jZf
jr+YHxn5vshfiXxCnvOuPO+F6Xt97MGBmR83Rz4lv/fz/J80XnOuxV2rX3GI
eORndBpdP1n+Cr/ljX7Fd19K/2P1gY1NFN4Cdzk55/vqZPlz/LrX++XXHteM
lS+PF04AL9g52yPt8uNXb97V/OOlt+ivvRudCQdZq/mWC41XXHdxc+zXIq89
Uc/ruU/J9demB/nnIzVGTou+nmOk3pF3tVD6v8c+5n4PGBTOA+9Z3JjO/gIT
NR6Ny/0HpeeOaebqMrne1hM1P83Tj8RTaf9Lrvdqti93yybBlmBMbNUmeV+n
5HpH5/2vm/7r9Qq/g+OtE3m1yNtF3jfyGpHXjLy3+D/ympG3j3x65GMjbxh5
s8in+n6RN4q8Q+QrIp8ZeePIW0c+L/JJkdePvGXkcyOfHHmDyD+LvFPk7fL8
rTzf6r3C6+B2w5E3jnxc5H0ij0ZeKN/ztVY9Ywd2068YhI85c+S7+/XOzUlY
2xq9wlfhrGulbSTH7xr58MhrR14n7QdF3iXnH8n51+0VfgfHmyryhpGPjrxX
5Gkirx9558jbRJ468hb8rcjH53zr5XyP9ivmEGN8Jtc/O/JMkXc0P9L3jMij
5lzk53sVo96WY/86XLHryWn/RLti0kd8q37FgGLCxyPvEvmWyOc3+NDv83dN
/gJ9nv3fZfsp/8k7EE/OkHcaearIp8Kfco5veTfGYuSne3Ws/qdHfjDbD+mF
/PZp2FK/dBoMF5b7UL9ivMcij8Cm+uUT8WnmjHx+5LnpoLT/Pue+IPK85pD7
i3whm2AeiZki/zzy7JH3Em8ZK5HnoFfZRPeWbce8m73zzJuk7eF+xaR8vDlg
Wf2K4cSYc03UM3m2DXP8Mzn2iGyP5vhF2JG0vdMr/UMPrZT3d0+/bLAYs8s2
ZHx8mP2ns80Au0r7l9qFCRzca2LMyIebM72KScQmfFa+q5hGbHN+5PcjP9Cv
GFCM+6mc74bIy7VrDBlLN0b+VrvGvLG/aK4/Xfq+z0an//UwmbRfHvmDtF8b
+WuRLxBTRr4z3/g6sXyOvyjPdHuv8Ec45KJ5vhPT/79pXyW//dpY7hfGCYO8
z9zqF4YAI3nAu5F3yP7s2e7O/thk4aVw0yPSd3yy8Bi4zJGRT8o2xCbCqz1/
r/B3OPzCuX5vsvBXOOxR/fKB+EJiFLHKv8cqVrq3sQGXpH3ByPul/c9pvzTy
ApEPhZlGvinySr4lPCTyrZFXiXwrDCfyHf3CDG+K/F+2JfLKka+L/GHkW2DI
/I7I/4YN5v5+k/07s02T931vv2J0GMP0sMB++VQwi7bcQb9ifjH+aOTbI3+/
XTHyVJHv6xdGwofvR/5Mzn+39wEzgU2n/XNpP4oOy/Uvj7xQu8aksXlZ5IUj
n5L2v0W+OPL8kY+L/GavYkrv64TYkVUGFed5l0vkt3/lXX44VraTDZ2uW2Pe
2BeD7ZPj3+/UXFwsv30wVjZW/+Nzvu/A9/uFeYiRPsGXi/wRXCnyw7DebNtm
f9KY589Fv2weueebygfl/FfDG3PMNcbmWNkCNuGYtG2ePhfA5tiYnGuLyBdH
PmhK2X9z3Fzf2tiDf0b+eeQD0z4e+dqc7xy+Q5MT+2Xk0yNfSMdH3qxf7Udn
v5f+W0a+aLTu6YBc76ROXfv8/HbDWNko93dAzj9FPm2sbNvpDeZ99VjZKjbr
YNjeWNk6Nm/fyFv1K0cmB3FIr2wq27pfztcelE1lW9kwtoyNdPwhObY7KBvE
FrFBbBGb6voHpL0zKJvFdrFJbNMluf7B3kfkHdNn2349/2ENvrtdv9p3avBJ
NpwtZ2PZ2gvH6v3u2OS4tu5XDpGNY+suTvtBrh95+05hmL7PL4cL23ykU7mC
z2a7N/sPZ/ti9pekX7J/d6/yJ3QMXSO/pO97Df7u+PnpygY/5wN4v/vnfU2X
+30/+8u2yqdzzE5pv8HzTan8w/aRfxH54CmFN2/Tr/vdocmPyqkaL7c0mPcO
ab/G+55S+O2O/dKXh06p/IUcCnv6fIPx7pz2myIfPqXyGXII5D80OQ85Bvfz
apPzgG/P3jyP/M2f8tuWzXz4c/peNVa+wZlNDuGKsRofpzQ5nl37Zf+PmFL5
Xjaf7YdLLzkoHU1XyxstFXnG6JMftErn0r2T8n2t8hn4Dmwm2/lG+n95UD4D
3wGu/EV4euRjW6VT6BY+CF/kE7CFQdkAtgBuvsSg/InVxJL8l+xPP1n4Mxz6
+Bz/mnfc6INX82yDtK/fKh/njOZ9bNoqnfHnTvkrazX+yCv8k17h23wcvs4M
OX7lVukcumdisvBtNoqterBXeDpc/Qu5v37aV22VjWPr+Bx8j//C0QflY/A1
/hN5hUH5YHyxjyIvH/lVNrFVOplu5jPwHd6B28un5fyHt8pn4bvIjxnrnxTb
RX6Zf9wqH4YvMzN8pFU+D9/nRf5nq3wivtFrkY9plU1j2x6K/O1W+TznNe9z
jVb5bO8a0znfTq3yIfmSfEzj6aC0TTsoez1ncz+v533+plff6tORz+2XzWQ7
/5l+Kw7KhrAlI/ne3x6UDWKL/pX25SIfFPnB4bJBbNFbfKhW2WS2edbcz8mt
sllsl/m/VHO9N8bKx2Nf2JmvDcqGs+V/l4cZlI/H13s78rKDGkPGkm/q206Z
rHy7vPvhabuxV/ljeeT5BuV38532SftFYxWXiE/2pd9HS2ftb66Nli6jI/cy
10ZLd7IFx/LXGxs1Pxstvsv9P94vHBgWN1+2vbK/ft7TEmK1duGB8tNis0Wz
bdituIHuPiTnuhQfoVO+4WGRLxsrHYtPsNdo6d7Z83yXtsqHu7bR/eKRXZpz
bMpGNbaF/WBz2d4Zc63vD8qH48uNRf5B5Pf40K3yUfmq4pSjGy7I5WPlI/IV
e+n/Q+Ml8oJ828jfE1/l7zJ5lgPahYfDOWGJs4mJ2+Vj87Xhqtun/4KRF4q8
hxgg1/vCROGncNQnIi8xUXgt3HbX9F9qovB2uPtug4rZxG7i1PUGFSOJleRl
thuUz8X3kufZOPIik5Vv4lPxrWZK+3D6fzvtm6Z9cqLwULjoJoPywfhi8ha7
RN65V/m4Ixp/gk/Dt4ED7zyo7yvXsFS2LbK/WbdyPW9m2xwWPFF4MFx4p0Hh
GmL3uWBm2f9S2r+Z/R3TvnvaF58svAZu8xTfaqLwaTj1b/i+E5XfkOd4sl/v
H3b9lWybupfJwpfgTE/3636+GvnAduHVg4nKt4l5xb478hnFs53yX/hE+EJn
j5avxOfl+84GV0r7PDn/ja3yifnGc0W+plUxiFhkVvh9q3y64W7FHGKPT2b/
xzl+vsnKd/GB+cJ8br73Z9O+xqB8ZL6yPN86keefLDySD82XnjPyZa2KgcRC
c8tft8qn59vPG/mOVuPTG0/sXZ73uMjPRJ5xovBquPV/Iu88UXgt3Pbng4oJ
xAaDyKtF/sj3b5XPz/cXk4nN5oTzpH3ebvn+d2X7TLdiArHBzLD4QcUQYom5
I/8s8gKThe+JicXGC04WvgNzgD18drLyhXxovvTUE8VfEJOITdh8/I5jRssX
4BPgFxw3Wr4CnxPf4qjR8kXhJvCTi7KdOlo+7hnZP220fF++9B2R72x82t3d
b+Nr85f38n3gNY0/7Hft542Wb755r853aONvbtUr/bl9459uQ780vi974y/5
xNHyjYdhAq2KgcRCMAHYwIJwskHFPGKf+SOvCX/tVmz9TLZFuhVzef++w9qD
iqnEVvKo6w5KD9KHJ4yW7y3GFGtOwmXTPkfe99WtipHFytv2St/T+/xJmBBs
SB5ys8gLT1b+VYwn1nNf7u9eOrRbMa5YVwwtlhbjinXlzO+MfFi/OHW9yLfA
jth4NmVK8TUO7RfGjqN2s7nXqb64d4+OlU1j29g0tm3/yE/xjacUvwQHgPxk
w6m4Odtkq7DVx8eK0+F607eK63Fwjv8d32hK8adOzTlfGi6fl+97eq+wAT4v
3/fEyM8Mlw/Nlz6mV7GEmEHscHivYikxhdgCxsGesWuDQXHeXG+mVmHWh/QL
A3aPN/E1ehU78Mn55veO1b24J5zGe8bq2u7h0k5x4h6O/IlWYbZ3R7438ocN
JtqdrHyFd+rdeqfeLR7ggoO6pmt7TwvI3/SK7+gb+VadycKn3aN7nW6y7t0z
eHe+oe/jOy2U46edrHfrHfu2Z/aKD4cXd2C/OIKPZ3+aVnHYxHxiPzy0yRy/
T7/aj55S/MF9+8URhInARnbv1/Mdlfa50r5b5LtgKZHnZJ/HSv5Hk0Pcq1/v
5/Lsz532vfvFERzO+X7RK1xUbIl7+YB3yQfM/nSt4hD9olN9cQl/nbb9+tV+
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
JitoOL4Ybx3fQW0BOW/yv0Vt6JDjxdWTovYcVE8t16p/Lf/JuL48H1Em/Kz+
M/B+/G/E94D20lmZ2eP+Uc9fPNN5juk7ItYp2tM01vYHcc7GO88zK96fci5h
V6mW/ILGXRPrBzyb3CxxjeP9E/e6+blT/k59B/NkxLpNv2WxhuXfYrsgfyPe
wnK+j+8jXgK/gR7E8+Or8UH4Lt7tdIAuqT+3+pfIKshbmJbE+shYA/mv5T+D
nabqcgrI+S7WsXgh/QtTY7wIvgFfJ+ch3odps5yf5Hwc6zT+/LwFqCF/If71
sY7FE+xKfMPwovhGvGesT/AdscakE+q8Rp2VzcMemR/yrDFWlVizacvwX7Z9
jmrLKSbnB55Tjn2CfUiX4nuu70z891gvYcPoCn4an4b/gr+CNaeT+An8C3wI
vtE99Xms+eRfxefH/4Vxi6mvKD2DFzfuJvwCf4O4tnQdnuBf4+fwSVh9yodf
ljMXP49Pxh6nAvG/is/Dz+CfYgPosnou4XPw2sZtasx34/+R/275h/Dn8eXm
6nj8G9q+NZ4/GY1s94pvDo3hv4f/MM9z+EKexTQFfwA/hjfG07BFNBa/F/89
vi/4bdh/aCpeDT+BP4W3kf0qDY//ZfxorH9cr1z2x8U6WXtR/Wn4RTVNx6ZR
STwr/xL8H3wqNoOK4NnwdPwQ3h8bTBfMwyk5U/Gj2lLO92n8WXqbTsT/Kn8/
2+/RGfsn+abw78O7Yr3ino7/KnwyfkRbRE47vCW1oiOO/4mXwO+1fx91p+N4
bzkZ7ofR9lPUeYHvq5jPWKOag1LUWb93aKT/xFT+dfyd4xnjyeS8FvA3xwfH
mhEvjmfGF0UO3g6fiZfAs+CL8b/x2fEvS0Xxa/CFsV4yzznsp+Ln1fe3embj
TeJ/EJtD4xy/j/8IXhWvp8aDeBe8LL4d/z9LpY9n
            "]]}, Annotation[#, "Charting`Private`Tag$15515#2"]& ]]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJxF3XeYJVXVNfAGpgtooOG93TTTRMmKoCBBkuQhZxDJWUGQJGL2VV8TiEjO
CIhKzjlLzjlLhiENcSQMGb71m7N5vj/O07XvqVu3bt1T56y91trVc++418Z7
TtnX17fT1H19Y/J3s+G+vl90fX1/Tdsw2zukvZ/tjwf6+l4f6ev7buK3E7+b
+NXEH+TvB4k/THs/299L/yfZ/ijbb6T/+4k/15/4lcS7J34r8XuJX0u8eeI3
E78zmGOP9vVdNNTXt3zit9L/TPovTPytxG8mfjrx1tn/1cRvJx6f+IW0SQPt
/Tvn/bsOt/NxXi+nb93Ezyd+I/FTiddO/GDiVxM/mXi+xNck/l7ev2Pev3Di
qxO/lnin0fa6/hvSdsn2NOn/e7Z3zPaW6f9q4hsT75R468QrJn7U+3P8x3P8
ryT+t89L/7bpXzLxXYlfT/8T6f9O4tMSP1Hn7ziOd1PaztleJP03Z/u72d4u
/V9PfHni8Ym3T7xp4gcSv5LjPTvSrovr81rafwfa7+T3ekfL9mO9vr61+vN6
2i9ybefKMS7IsfZN38/z/tHEY9N+kr6fps2e7QvT/9P0/yT9cyT+ZuKfJf5p
4nkSL534F4l/NdLeu1ji1/rbMX6Q9nS270vbfKh9xs/S5hxtn71TXnsifXen
bZrtH6bvRznWo4m3T7xz2uPZvivt29n+Rr7vrb5/9nko+37JmMnn/TzxLxI/
nu+3ZvZ9J+032f+NtO+5fsbcUBtDxpYxZmwZ769ke2Jeey597/jeie/KMY/J
sZ/O8dbPsd5L+9/0zZrXlkrfT7L/j7P/z/PaxPT9N+1n2f5l2tvZnpT262zP
lv0XzP4PJt5mqB3jV2lP9dqx9/N90/bLaz8eatt759gv9rfXdkt7Jtv3p23m
Xsj5PpTzm5B9/pN9l018f+KXXLPEN6c9nO2X8pnfzmffkviBxNsl3izxrYkf
dW8k/k7imxI/5PMSbzraXtf/mPs127el/z/ZnpDtzdO/Q/4+buwOtDF9X/qf
GWjj03i8P/FzA+3+2SHxHYnvTLxN3S+3J34k8faJtxhtx3B/XNe1Y/8l33H6
rn2e/sMSD3ft/Hz+HYk3SvzPHOOEkXaOn+XafN5f5+6apf+s9J+c/lsSb5z4
H4mPS3x94rUTr5V9l83xrki8hvst8XKJb0v87cT/yv7HZ/+rE6+VeJ30fyv9
N+a1B9P3QuJNEp+S7fXSv37a37N9Y/ZfJ9trp3/59F+XePXENydeIfG9ef9N
2W/rup/vTnxj4q0Sb5P4TueYeMvEWyW+JvFd5sLE6yW+PPGtA22+WDPxtYnv
du8nXj/xVYnvMFcmXifxlYlvN/clXjvx1YlPHmjfZ93Ek3J+f8n5PZD42MTL
ZDzd43pnn0ey77/T7nFvpH8D9376b0n/C3nt4ZE2Jz7v8wfaXPliXjsu22vU
fL5c9r8v+79sTKXvirTbzL3pXyv9DyZ+cqDNp+bbbfP33sT3pT2f7evTf/9A
m+82Gm1z4tO+z0CbK69L/0kD7XpvmP5L/GaJN088LvHFvkPiLRKvlvhS94h7
J/Hq5rbE17l3Eq+S+DJjxtydeI3E5ye+1rVIvJK5JvENvkviVc2diY9IvFri
lRM/m+u5U77vuXnt7+n7H8dI316J90r8Uu75zTNWn03b3VjJa+ul79jEsxub
iddK/LvEsyYeSTso2wenzZztdUfae+w7R9qa2V4z+/85/cOJ/zs2n5nPOy7x
3Ik3TP/6ziXxQonXS7yBeyPxfIk3SLxR4n8m/rJ7K/Emif+VeOHE7+R4Qzne
iYnnT/xW4hkS/zrxoHvDmpr9F0g8XeJR4ynbf02bLdsrpa1o3kpbwfyddk76
rkpbOdtb5P1b5f0XJl4m8SaJv+3eTvyles8l2b6ivx1ry/Rvlv6zEi+X+IOc
z4w5n98nXjbxu4lnSnx84gXNxYnfmCHXJPG85oK8f9O8/2+JF0m81Ug7pmMt
n7ZE2tnpuzptlWyvn74Ns/8piRdI/GGON3OOf0bibyb+aGx7zfbSaf35vee1
lhufee/z+b03zr6Ppe2Y/hnS/5X03554u8RjEs+d+NbEmyTeMe9ZJu/dJ/EG
iT/NsXvpPynxVxNvm/410n9g4rGJP07/rOn/R+KvJH42n7dJtv+TtkPiT9I/
kP4/JV7N75V2bravSVs727OkHZLtG9LWzPbmMEnaktleKm0w57dQ3r97PnO3
vD5j4vMS/yDx7omnTbxA4nvy/u9k/4HEX078QOKtEm+dfTbOvqcmXjXxLjBh
4jsTb5l4mux/bvbfxfyRvqkTz5f4e9aUxLtq1vrsvzU8kXiPxPMnvjLftcv+
55hr8trO6Zs+8TyJ70j/Ftl/usT/ye8/JvFGib+ffXbKvrcl3jjxCznGutl+
Lu37Q+27b5n+8/vbNdg08SyJ50w8T+JT076e+3sxa0S2FzYn5/P+mH3+lH0X
SfzvxAcn3j/x6dnna9l30bTTbKd/5fQfkv4D0r9o4lUSH+Y3HWn4d4Xsu1za
+dm+wO+Q7aUr/qo5LPv/X/b/Y+Hj5av/XGPXPZbtxa2BztUalP0PNUdk/386
RvoWsSZm+//Sfpv2u7TfGw/ZfyRtX1gkrZftRczx+f57Jt47x9jH+pd4j6G2
78LpH9/f3rOvOS/9XeJtE88Ms6b/pcQ/tJYnnt8cn3if+sz3sz2hv53LYulf
Nf2H5xh/GWmY8pdpc482rDmU9rX0P5L998r++6RvN2tR4r0Tn5m2UL7bwmnn
ZPu8tG9me5m6PiemLZDtMWkHZPvL5nzzhzk3x9o/r02VvhnlQNk+ynfM9tRp
R2f7KzC++yn7/z77f2O0zf3WgIMSfy/7PJlzeSpt12zvAVOnb0FzXsbae7kf
h7P/aYm/lv4/p02ZYw+mHZ7tSel/PuN19vR/HRZxP+b9ZyZe1LVK/0jef3ri
xRJvJodK/6GJF098rHUhx5or7Zhs/zGtL9vTpR3hu+d8v5X3/y7v+W3eu1Di
lRL/OfEfEv8t+yyYffvT/mTtcU93DZPBZgtm/xWy/x+y//9l/wPzWpe+KdL+
kO350r98+n+T/l+n/2BzXtcwHCx3fNrc2Z4n7bhszySHyv57Zv89s/+8MIP1
JfH/Jp7fmp74t4l/k/ic/N0j7/1+2tnZfiDH2C7bZ2T7pPSfZq1P/J20U7N9
Vd57oLGUdvVgu2cOyvY1g+1e8lf817Rrs71M2i8HWj4jrzl8pH1X33np0TYW
YX85gDEp55ALyYnkInIbuYicRI4jZ/LdfEe5lJzJ3GaOk0stm7+/8l3TLnaf
pv+obI/L9lLw70ibK8wZ30x8ROLjE6/pXEfbHOLedo+bW9zjxqYx6t43p/it
/ebmGnOS39pvbq4yZo9MfP1gG8t/HWn3nntw8cQHJz468Q2Jlxhtc5y5zRxn
7jNGjWVj2tg90hgaaHgavj4k8bFwceIlEx+V+MSBhofhbb+x7+86+O39xuY2
c5zf3pg8sH5HY/XN3BtzJf5S2onyk9xTi+bzX8/rt+XzT0zcl/i1xLcmvjPx
UvLBxHcnfjt/V4I95GzZviT9vWy/lO3r0r+QMQcv5dh3JX4o/avI/9J/T+Iz
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
a8AU6RvN8YaGGueKG8cZ42J5InhpXGPXWg0Mb4TfyG812SMx0H4jvxWPAq+C
Ghu1NDw4vDPGsLGM48Xt4nhxvzh4WgZNAzeP48VN45Bxvzhq3DCOGHfNU8ML
4zfx2/DE8N74zfx2PDi8H76j7zpz4ukTT5Hv97de88/RV+7OOZ6Zc10NJjH2
E/9jtHk4eGtnrPHL88HbYTybW79ReM2aYG3gOeFFtKZZ2+C5yV7brq0VX3iS
Z6u1iyeEV8WaaG3kKeYtnlRrK88x77E519y7ROU3c9f6zfPCq+M38lvx5PDC
uKauLQ8Pn49r6tryNPM248xx5zhX3DcOHBd7hjl3sOWPtGucOO4Wh4sr58Hk
LTXGjXUeTl4gv4nfhgeVV9OYNrZ5fHmDYBBYhAeYF9iaYe0w55urzdnWAjUA
ztG5qaXkgeWFhSlgCx5PviEYB9bhSeRNtEZYK3gWeRfN6eZ2Hkj8FT4N1y0/
5cVxT7g3lqr8cY7CC0tW/kmzod1sWniaBkYL26TyERgCloDpYXs5kdxoo+Ib
8B9zVj4iH4DP4UEeWOui9VE96PqVr8CL8pcNaz6Ub89S+RT8L1+Q7+PscHdq
uNRyqRGz5lnr+A0d0xpu7fZZNABaBc2CNmBNtdZac621PK68rjQCWgFNgPZB
A6EVqOE1Jo1F9RswICwD08CGPhOOgWecCw8lLyVMAVvAPLAETAELwRDWdms8
bMEjzytPQ6Ql8tDz0uOUcEvrVb4jv5PvmUPNpWq81Hqp8VLrxS/DP4Jzxb2a
w8xlaubUzsmx5Fpq7NSuqWFTe6fGSq0V/wh/Cc4Z96zmTu2dGj21evxL/Dfe
471q+NTy8efwN5mDzcXrDDRvKg/qugOtRo7Xg+dD7ZxmW02d2jrcOS2Ip2hw
oGlCYq/j1mlGtKMnyn+kZk1tlxovtWwTRlotvpr8nYdbDb7aczXoavPV4Kl1
U/OmNk+tnto8NXpq9tTrq9/nn9ptuNX0exaAZwKo9VfDr7bfPvbFWeOucci4
ZM8IcA4+27MDPENArTI/t2cLOAfncnfX/Fn4ePwxfh6/jEOm9dP8Pys+Hl+N
D8c30w5oCTxfMw00TUHsddoC/y+/rhpDtYZqCtUW8o9NrpUcamuj+gX+dX52
9QxqENUi8tfyK6uRVCvJv8zfrqZSbSXNhnbzZPm71EPwc6kZUzvGv8SvpYZQ
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
hTwKxp9xyLvAU8A7w0PDa2DeNH/yKPJC8iTwJqhn4UekyeB6cb60Ghwxrpif
U/0ijYZWwzMz2Tsz1LwKPAu8JzwWvBY8M7wzOGNaEE0Il0yTpE3KUeWq9Bna
kJxabk0z4oXgiaAleV2/mii1UzQm2hENifbE88LrwvPCC0Mzoh3hFHAL/H/8
Vupzjx9tnDhuXI0MLz6PCq+Kmh2efjmGXOST0v8/pRt0LYd5onIOuYf6FTkM
zhlX+LfSK3DOH3XtmfS4aDkErPRK5VCe+e/57HvRNEZbfQJ/+Q9oPqPtGf7q
Ffag8Yy257n73wB7us9Hm7+AP8EzXzz7hWeBd0F8ceJ38/fjrp3DjwYbRy53
er/8CDgeXM9+NLDRViPD67R7zYc4NdzafTSf0caB+n7vJb5wtHkYeBneqM/3
OT7vnfrOP6jz+bz8FzvW9bQenDPa6oH4MybSeEbbdXV9P6wccbc6v7fKb+H6
4vbtf95o48v473cvvIRPw5/BT/xrnpnnfwT43wCepUfzon3x76v/wInhxtSD
qI1Zq2KcGa2M55/3ngdfrdK4itUE8P+7nrQHv9cpo1Uj0LUxoXYAp4xbfr2+
n+fn+V8TD9XvPa7Ohya3ep2P2hzPcN248mLHUyOlpkD9gXqVN+vzcHy4vr1q
PODocHV71PjhR/E/ETx774LR5l/BT+5bv5/X9ftfCZ7Vx+/CP7NfjR/+GX6X
9+p6G0P+14T/fWFs4TddX9f57NH2ff0+NBjcOk4SN7lnjd/F63rg3GesfN3x
HPfcGl+e5Xdi6U3WVGurejV1IzQ2WpsaBrUENE/ap/oK9QM8ErwSaujU3ql/
U2+gfkF9G4wD66iHUIfn2eqexe+Z/Gra1N/xI6unUG+nXkc9j/oV9TM8V7xX
amzU3qjfU3/mebj8nOrJ1PPxd6ofozHSGnmWeZ152njb1ESo1VGDplZDzYba
NDoqbVU9hjo2miHt0HfwXa7t2v/mUJ+nTs//Jri2ttXEqT/yvGb+YfU2PCW8
Jb6T7+bZ9VcWdlMj6H5Xa6fmTq2c34cXZlea32ibE82N6gMn/++DXtMefUff
1RxprlSPqA5xiZoPeJzU8vkN/BbqF9Ur0kRpo66Za6ceRf2dejt+cJo4bVyN
FK83zZp27Tv5bjRx2rjfxG/jmrq26n/Uv3iP96p3Ug+Eo8ZVfx/WGm31KOqD
1KuoT/Eb+i3V/6inoQHTgtWjqG9RT6TeT/2J+ha/md9OfYt6IRoxrdh38F2M
SWOTv129DI2aVo2/V//Dw8jL6JiO7Tf326u3UZ/DQ85LfkfhI5523m3+Yv5g
nnRed35hXnWebvMJ/YD/WP2PejD1QRfW8XiZ+X151Xnqedt53Pm9ae60d+/x
Xp5M3kzXyLWimdPO1fuoD/qwzuf+wnMT6vgP1nqqXlN95+s1fvif+aE9j8Tz
R9SDqufctX4PNY9qH3ngeeHVLKpdpP/zm6r5UvulRkytmJoTzyZSr6IWxTNo
3HvGk1pQNZZqLdVEqo1U46KWRU2L2heeb88q4dfgd1Vjo/aG35g/Wc2LZ414
5ohaGDWaajX5C/gRPBPJs248r0S9jJoHz57yfCZ+dTUOvOz85vzvngmhNkP9
hHoLGA1WU/OhNgaGg+XUhKjF8IwJz5JQn6G+AuaEPXkkPXsC5oQ9PYPCs6s8
c0ZtjBoZ9R6eL64GRu2LZ4nztKvVUbPD665GxLNq1Ieo54ARYUWePbUpMB/s
p6ZZbYoaI7Ud/Pj8+2pQ1aKqUVWryrPPO89Dz19vDTLXm/OtTdYga6M10tpk
zFj7jFljyZpibYEpti+8BCPABudWszbAFfpoVrQrz4q13ljjrfU4E3qgMWVs
mcPc+9ZYa6M10tp7dmECGpxjWZOsldZMa5Vrps5L7ZFraQwby9YscyMMZC4x
p8BGarbUEvBP86urUVBbpcZK7YKaM7Vc/O/82WrK1G6ph1AfBEPD0mqkPBtE
faQ8Wj6t1lSOLheXk8vd5WiwljnWXAtTwELWXGsvzCaXNaeb2+XcsBbMBcvC
DLADDAi7uGdhYfUc7mXPJ1YzNfm53iONU5EjqI/yLFc1eOZC85daaDUq1hrz
s/ovOazcVI4qt1XDp5ZPzYvaly+euSTfk+vJYeWucli5rZxX7ikHlQv7n0Ry
STml2ho5rrxWfiv3lRPLleXMcmU5q7xafi2X9YwjzzpSw6OWxzN8PMtHjYRa
Cc/w8SwfNRJqJdTRq6/HieBGeER5nXFYuCwcEu4Mh4ZbUm/vPfZVK68+X72+
Nd3abs6Ty8ppzYWeeeXZV2pG1I7Ikc2N5ki5s/9J43/TqMFRi+MZQZ4VpGZD
7YZnWOECcAJqkQ6v309Oo5bEmmHtwCnIta1p1oJjC69Ys6x1ZxT+MKfDGjCH
ud4aBBudUngEpoFljq71GqaAhc6v9VhNtdpq9X/q/dSYqzVXL8APZ8xM/t8K
NZaMKXWE6gmNNWuUte+4Wn/U9KnlU9On1s8zFtTyqelTX6cG0LMX1NupDVTz
p7ZPjZ9aQJgLlji88InxbW3COcj9YATY7sjCY9Z0WOCsWo9hAmv7mbX+WbNh
SxjTWg4DwhYHF/6AMWCPQwqvwKCwAwwxfc131ko1abgQNWBqwdRHqj+EeWCF
Iwo/wBzWWmsuLAJDwK7wH2xxXH0fa661/dga3zDBpLr//P4whHr400rfo2fx
LvHU0zJpFjz1+GleWZ4e+tANpUfSK+mf5xV/TT/C//Oc4/Ync/wDTY+lF9AH
6E23l95KT6V3/qv0G/oUbxVPGm8aTxP9gIeSl5KeQA+gH/O6Tf4fJCNNL6X3
0rPoB/Rc+jI9g15r/lerxEMh9zut5ns5tVz59FpvcFBy7TNqvZAjyh29ps/z
zzxvbGLd7/wf/Aryb/m2ZybID+nT9Gh6L/34jtJfeeBuL72ankJvpAdfXXrF
ZM/WSNNb6C/0DXrkM4UfeQ55+54rfM3jx0s4/gv8P9i8huYAc5U5y9xgDlMv
Lj83t51Qeh39kB5oTjDXmHPMFeYMc4k5xVxiDnLtXENzkznQ3GiONDeqR/f8
ju9X/k//41Wm39AjzVHmVmPQWDTHGuvGvLnXnG0uM6eZy08tfOCaurYnlZ5I
36R/0rxoazQxGgmPJO7ZMxN5J/kN+Id4AnkzX6x8kAeTd9N+9sdZe1bpf4rf
4YHkxXy0+FoeS97Iu0p/4UnkjaSn09ZobLyND5YeSc+k1/Av8X/xIPIm3lN6
Kc8xb6L/0cD7xePFZynHlmvLaber9dj6K4fHjf+z8AXM/EStD34L/qbJ9ZS1
PnnGm3q/w2v9UG+p/vKwWh/UA6r/m6NyZrkyLMHzhOPB7cj/5fS4IZyRXH/u
yuHkbg/U+mgs4XzUjntNnihftK8cWi4oJ5SPygnl5nJ0ueLkHG+g5YRyvwtG
//9z/53L0TUfyiHkNgfUeq+eUn3jnwsPeF6I54ccWOud+kb1kPsXvvC8D88T
OajWf/WS6jH5pfj9eJR4lfj/PG+FR4xX7Kha/9X8q/0/ptZbOZHc6JBajz2/
5ZnCK9Zv9beeJ3Jw4RH1yZ7voubHs5VoSLQkz8jBMeAWPJ/mb4VH5TxyI78D
bgXHok7ovMJvODBcC7wL+/Iw4EZcP++xLy6Hh5GXkb+Z3/miwoM4fFzghYWn
cTa4nn8VvsUh4hbPKTxIk/EZZ30xPgeaT43HTK4qZ+0VXraPPlzPiYV/zQly
uVMK3+MscVMnF/6kqdAWPI8Hr4Jf4Q93TfAU+IoFCk8bb+Ywcw2NijZFo6Jd
0bBo8TR52hZNirZF46JV0cBoXzQw2hgNjHZGQ6ONwcO4QRwhrQeng4vASeBD
aGy0MRrZZD9ncTB31rlfXL8XDhIX+f8AGB28yw==
            "]]}, 
          Annotation[#, 
           "Charting`Private`Tag$15515#3"]& ]]}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0ktIFXEcBeBfbSyu+MLQKDQre0ClmT2ohdvaJj0EExWyJPCKVlD2Iohy
YxGFhRCmFBW1LhS7tAiKMpIIpbJ2ERUuXEgEad/g4nDOx1zm/meYsub03rYF
ETEsK6RM8rMiVuumvIhyvZO77Ea7WXbwKT5st8gQj3KVG9XIK/7Iu+xKecpv
uMKulgy/5232dhmz77vPXdmTiujmAbtVNvAZPmZ3ymY+zyfsk1LLV/mcvdU+
qy9wl97Cp3Vv3vzzNXBG3+Lnup5H9HJnuGIv04POltIXebG+w0X6Mi/Rt7lQ
X+IC3c8/krPxd32Pv+k0f9EP+Zc+zj+Ts/E7/Tb5TfLedJ/7PC6M+Ms37Rvy
hGd5MDmDPOIZ7refySinF0Xst/cl5+AJ1xvsFhngSe6we+QBT/E1+7qsyY/Y
uDBik6yzK3R1dkSuLuYcXcnlej2v1VVcqku4RNfxQb2bD+hD3KRr+ahu5Tq7
3W6TI5zWn/3/nPcxqZd6hgn9jz/pUv6afJB+O66LeEz/cf2DXsnZrmXsF5LL
U669tF9LAU/zsD0iKf7NQ/Yqt83Jmv/O/wNT6WAI
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0l1oT3EYwPFn5sJisy2lmBa5GC7EWouYKblVu1a0mhl7sXZh0/aXlxm1
pL2G1kSkrEyJC7GJRlFYK28XVqO22EjIsuJzcvH0fT6d0/mf/XZWlteV1aZF
xD1zbF5EyuzJiWjW1gURx7WBr+kFvq53ODM94g0v1rucrW95zvUB/qPP+K8O
8lcd5m9akRtxeX7E0wzP1PPmoT1Pl5merIhGzrevSK7zUV5nX2N6+Qivtq8y
F7mPN9n3ZUYU6gku1hrerK28VQ9wqZ7i7VrNX7z7tCmxT+qUWb80YguP2B+b
Ai7gR/Yxs5Y38mv7rNnAO/i3faHnFvIuzrKPmJ08xE+Sv9U0OYNhfWDa7eM6
550+6Bke0xkeTd6V3+kPfq9tnNJb3KKVfEWf81Wt5Rs6yv1azl3Jb/Fue4d9
m/f85f9RosXmu71IXyxyTrrcvY3JuXCL5nNKZ/iQ5vJ+neAKzUiereO8V5dw
vU7yQc3mKv3IdVpj8pxHj372fXRrOk/be+1nk3N17ydus580P3mCTye/597b
vqUmvqntrg3oYR7UDr6v5/ilXuJX2pnz/zv/B5Ttbaw=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0ktIVAEYR/EvskCjKXoQPQiNXEQFPcSoTVYg0oPB2aUWKIVtmqHCVuFe
CFuItGvRJlpEVEOomYQ9VkG0M2MUhFAKqXGKUauh36XFn3POFZzLN1PXlctk
V0TEsFWqI75URUysjSjhypqIIpZt0d5uiNi7KmIM9+Fr3I1DWIfPcRde2RhR
wG4cwO3Yj5vxDrbgOJ7Gl3gSR/EEvsDj2GTDfCT5v3bBuwzhllTEM+zQedyp
32Cnfoe1ehDP6Lt4SM9jj/6ODXoOr+sD/CtftFv6qF7iaduvl92hlT9dHfFB
X/T3PB+xGd2tx/mYTepO/YpP8UvJe/F5K/KiZ9/4T1vQJV3iv5NnuqyXeMX+
2mc7tcltbJK34DQ24xS24ixm8Ag+dq9GfILH8Af24S+8jB+xA99jO37CXPI5
eA0LeAN77KZdtUfeKePdsvy8PdBp3cbP2X19Vqd5vY3y255tS27E+/hWviO5
ke7X1fyPm+Z1b3JjXrE5PZHckHfZQ92g2/lhu6dr9UFe9r004x7dhAt6DaZ0
DU7rdbhep7CgZ6v+/77/ASAEcU4=
         "]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
        GrayLevel[0.2], 
        Line3DBox[{1806, 1807, 3834, 1804, 5332, 1805, 3848, 5973, 1802, 1803,
          3847, 5972, 1800, 1801, 3908, 5990, 1827, 3839, 1828, 5336, 1829, 
         3841, 1830, 5337, 1825, 3838, 1826, 5338, 1835, 3844, 1836, 5376, 
         1951, 3916, 1995, 5396, 1994, 3915, 1932, 5368, 1931, 3918, 2001, 
         5395, 2000, 3917, 1959, 5381, 1933, 3890, 1905, 5358, 1904, 3880, 
         1906, 5363, 1900, 3879, 1901, 5357, 1902, 1903}], 
        Line3DBox[{1809, 1808, 5333, 1799, 3833, 5967, 1793, 1794, 3849, 5974,
          1845, 1846, 3850, 5975, 1810, 1811, 3837, 5970, 1824, 3840, 1823, 
         5335, 1822, 3851, 1840, 5340, 1839, 3845, 1838, 5339, 1837, 3977, 
         2004, 5397, 2002, 3920, 2003, 5398, 1993, 3914, 1929, 5367, 1928, 
         3919, 1927, 5366, 1926, 3923, 1910, 5360, 1909, 3881, 1908, 5359, 
         1907, 3889, 1918, 5362, 1917, 3885, 1919, 1920}], 
        Line3DBox[{1945, 1946, 3894, 1947, 5374, 1948, 3896, 1956, 5383, 1962,
          3899, 1963, 5384, 1862, 3858, 1861, 5352, 1880, 3864, 1878, 5347, 
         1879, 3878, 1884, 5348, 1882, 3866, 1881, 5981, 3865, 1874, 1873, 
         5983, 3901, 1966, 1967, 5984, 3902, 1968, 1991, 5994, 3913, 1988, 
         1987, 5392, 1992}], 
        Line3DBox[{1950, 1939, 3891, 1938, 5377, 1941, 3892, 1940, 5378, 1892,
          3872, 1890, 5353, 1891, 3874, 1812, 5334, 1813, 3870, 1887, 5349, 
         1888, 3871, 1814, 5968, 3835, 1815, 1853, 5978, 3854, 1854, 1858, 
         5988, 3906, 1979, 1980, 5989, 3907, 1981, 1974, 5386, 1975}], 
        Line3DBox[{1952, 1944, 3893, 1942, 5373, 1943, 3897, 1936, 5372, 1937,
          3900, 1965, 5385, 1964, 3898, 1949, 5375, 1877, 3863, 1875, 5346, 
         1876, 3867, 1883, 5351, 1889, 3877, 1899, 5355, 1898, 3876, 1897, 
         5995, 3922, 1973, 1972, 5986, 3904, 1971, 1969, 5985, 3903, 1970, 
         1989, 5993, 3912, 1990, 1977, 5387, 1978}], 
        Line3DBox[{1955, 1954, 3895, 1953, 5379, 1896, 3875, 1895, 5356, 1894,
          3873, 1893, 5354, 1860, 3857, 1859, 5350, 1886, 3868, 1885, 5982, 
         3869, 1857, 1855, 5979, 3855, 1852, 1851, 5980, 3856, 1856, 1872, 
         5987, 3905, 1976, 1982, 5388, 1983}], 
        Line3DBox[{1957, 1916, 3884, 1915, 5380, 1958, 3927, 1996, 5393, 1997,
          3926, 1998, 5394, 1999, 3921, 1934, 5370, 1925, 3887, 1924, 5365, 
         1867, 3860, 1866, 5344, 1865, 3859, 1863, 5343, 1864, 3976, 1986, 
         5391, 1985, 3909, 1984, 5992, 3911, 1821, 1798, 5966, 3832, 1797, 
         1795, 5965, 3831, 1796, 1820, 5977, 3853, 1849, 1847, 5341, 1848}], 
        Line3DBox[{1961, 1912, 3882, 1911, 5361, 1914, 3883, 1913, 5382, 1960,
          3924, 2005, 5399, 2006, 3925, 1935, 5371, 1923, 3886, 1921, 5364, 
         1922, 3888, 1930, 5369, 1871, 3862, 1868, 5345, 1869, 3861, 1870, 
         5389, 1832, 3842, 1831, 5390, 1834, 3843, 1833, 5991, 3910, 1819, 
         1818, 5969, 3836, 1817, 1816, 5976, 3852, 1844, 1843, 5971, 3846, 
         1842, 1841, 5342, 1850}], 
        Line3DBox[{2008, 2007, 5400, 2011, 3930, 2016, 5401, 2010, 3928, 2009,
          5428, 2104, 3969, 2102, 5424, 2103, 4005, 2174, 5468, 2173, 4003, 
         2172, 5467, 2145, 3989, 2144, 5463, 2167, 3999, 2166, 5464, 2080, 
         3952, 2061, 5415, 2062, 3950, 5999, 2078, 2072, 3947, 2071}], 
        Line3DBox[{2013, 2012, 5402, 2015, 3929, 2014, 5429, 2101, 3968, 2099,
          5423, 2100, 3970, 2108, 5427, 2111, 4002, 2170, 5466, 2171, 4004, 
         2113, 5430, 2114, 4000, 2168, 5462, 2169, 4001, 2115, 5431, 2077, 
         3949, 5998, 2075, 2076, 3951, 2079}], 
        Line3DBox[{2030, 2029, 5425, 2105, 3973, 2106, 5426, 2107, 3972, 2112,
          5433, 2117, 3974, 2116, 5432, 2118, 3990, 2146, 5465, 2162, 3997, 
         2160, 5460, 2161, 4006, 2165, 5461, 2164, 3998, 6003, 2163, 2074, 
         3948, 2073}], 
        Line3DBox[{2038, 2037, 5457, 2155, 3995, 2154, 5455, 2153, 3994, 2152,
          5458, 2151, 3992, 2150, 5454, 2050, 3941, 2049, 5447, 2137, 3985, 
         2136, 5446, 2110, 3971, 2109, 5440, 2126, 3982, 2133, 5441, 2094, 
         3961, 2026, 5405, 2025, 3934, 2023, 5404, 2024, 3953, 2081, 5421, 
         2092, 3959, 6001, 2093, 3960, 2064, 2063}], 
        Line3DBox[{2042, 2041, 5410, 2040, 3938, 2039, 5409, 2036, 3937, 2035,
          5448, 2138, 3987, 2139, 5449, 2048, 3940, 2047, 5412, 2053, 3944, 
         2054, 5413, 2052, 3942, 2051, 5438, 2123, 3975, 2122, 5436, 2098, 
         3967, 2087, 5419, 2086, 3955, 2084, 5418, 2085, 3966, 2031, 5407, 
         2022, 3933, 2021, 5996, 3935, 2032, 2070, 6002, 3962, 2069, 5417, 
         2068, 3963, 2060, 2059}], 
        Line3DBox[{2046, 2043, 5411, 2044, 3939, 2045, 5450, 2140, 3988, 2143,
          5452, 2142, 3986, 2141, 5451, 2058, 3945, 2057, 5414, 2056, 3943, 
         2055, 5437, 2124, 3984, 2135, 5443, 2134, 3983, 2125, 5439, 2097, 
         3965, 2096, 5422, 2095, 3964, 2034, 5408, 2018, 3931, 2017, 5403, 
         2020, 3932, 2019, 5997, 3936, 2033, 5416, 2065, 3946, 2067, 2066}], 
        Line3DBox[{2159, 2157, 5459, 2158, 3996, 2156, 5456, 2149, 3991, 2147,
          5453, 2148, 3993, 2119, 5434, 2120, 3978, 2127, 5444, 2129, 3979, 
         2128, 5445, 2131, 3980, 2130, 5442, 2132, 3981, 2121, 5435, 2090, 
         3957, 2089, 5420, 2088, 3956, 2027, 5406, 2028, 3958, 6000, 2091, 
         2083, 3954, 2082}], 
        Line3DBox[{2181, 2180, 5470, 2179, 4010, 2184, 5491, 2208, 4021, 2209,
          5483, 2212, 4022, 2206, 5480, 2205, 4089, 2357, 5551, 4088, 2356, 
         2343, 5542, 4079, 2342, 2350, 5546, 4083, 2347, 2348, 5545, 4082, 
         2326, 5534, 2321, 4070, 2319, 2320}], 
        Line3DBox[{2202, 2199, 5476, 2198, 4017, 2200, 5477, 2182, 4009, 2183,
          5489, 2224, 4029, 2211, 5482, 2210, 4091, 2360, 5552, 4090, 2359, 
         2361, 5553, 4092, 2358, 2345, 5543, 4080, 2344, 2349, 5547, 4084, 
         2311, 2312, 5533, 4071, 2325, 5535, 2327, 4072, 2323, 2324}], 
        Line3DBox[{2240, 2241, 5502, 2250, 4039, 2252, 5503, 2249, 4038, 2228,
          5493, 2227, 4030, 2234, 5496, 2233, 4044, 2260, 5507, 4045, 2255, 
         2254, 5504, 4040, 2253, 2186, 5471, 4011, 2185, 2188, 5472, 4012, 
         2187, 2369, 5556, 4095, 2362, 2363, 5554, 4093, 2365, 2302, 5526, 
         4063, 2301, 2297, 5523, 4060, 2287, 2288, 5520, 4058, 2291, 5537, 
         2333, 4074, 2330, 2331}], 
        Line3DBox[{2251, 2248, 5501, 2247, 4037, 2226, 5492, 2225, 4032, 2236,
          5497, 2235, 4031, 2232, 5495, 2231, 4042, 2257, 5505, 4041, 2256, 
         2190, 5473, 4013, 2189, 2223, 5488, 4028, 2222, 2221, 5487, 4027, 
         2220, 2364, 5558, 4097, 2371, 2300, 5525, 4062, 2295, 2296, 5524, 
         4061, 2298, 2299, 5529, 4066, 2307, 5538, 2336, 4075, 2334, 2335}], 
        Line3DBox[{2264, 2263, 5509, 2195, 4016, 2196, 5475, 2197, 4018, 2201,
          5479, 2203, 4019, 2204, 5490, 2219, 4026, 2217, 5485, 4024, 2213, 
         2214, 5484, 4023, 2215, 2351, 5549, 4086, 2353, 2346, 5544, 4081, 
         2340, 2341, 5541, 4078, 2339, 2337, 5539, 4076, 2310, 5530, 2309, 
         4067, 2308, 2313}], 
        Line3DBox[{2265, 2266, 5510, 2262, 4046, 2261, 5508, 2193, 4014, 2192,
          5474, 2191, 4015, 2194, 5478, 2175, 4007, 2176, 5481, 4020, 2207, 
         2216, 5486, 4025, 2218, 2354, 5550, 4087, 2355, 2352, 5548, 4085, 
         2328, 2329, 5536, 4073, 2332, 2338, 5540, 4077, 2316, 2315, 5531, 
         4068, 2314, 5532, 2318, 4069, 2317, 2322}], 
        Line3DBox[{2290, 2289, 4059, 2293, 5522, 2279, 4055, 5517, 2280, 2284,
          4057, 5519, 2285, 2286, 4096, 5557, 2370, 2366, 4094, 5555, 2367, 
         2368, 4103, 5564, 2376, 2375, 4099, 5560, 2372, 2177, 4008, 5469, 
         2178, 2258, 4043, 5506, 2259, 2276, 4053, 5515, 2269, 2267, 4047, 
         5511, 2268, 4048, 2229, 5494, 2230, 4034, 2237, 5498, 2238, 4033, 
         2239, 5615, 2501, 4160, 2503, 5617, 2505, 2504}], 
        Line3DBox[{2294, 2292, 5521, 2281, 4056, 5518, 2282, 2283, 4065, 5528,
          2305, 2303, 4064, 5527, 2304, 2306, 4102, 5563, 2381, 2379, 4101, 
         5562, 2380, 2373, 4098, 5559, 2374, 2378, 4100, 5561, 2377, 2277, 
         4052, 5514, 2275, 2274, 4054, 5516, 2278, 2272, 4051, 5513, 2273, 
         2270, 4049, 5512, 2271, 4050, 2245, 5500, 2246, 4036, 2242, 5499, 
         2243, 4035, 2244, 5616, 2502, 4159, 2496, 2497}], 
        Line3DBox[{2424, 2423, 4124, 2429, 5584, 2427, 4123, 2428, 5596, 2445,
          4132, 2446, 5593, 4138, 2454, 2398, 5571, 4110, 2392, 2393, 5570, 
         4109, 2396, 2397, 5573, 4112, 2402, 2553, 5641, 4180, 2552, 2487, 
         5608, 4153, 2486, 2485, 5607, 4152, 2484, 2492, 5612, 4157, 2493, 
         2512, 5620, 4162, 2510, 2511, 5623, 4164, 2500, 2499, 5614, 4158, 
         2498, 2495, 5613, 2494}], 
        Line3DBox[{2426, 2425, 4139, 2455, 5595, 4141, 2458, 2459, 5599, 4145,
          2450, 2449, 5590, 4134, 2448, 2452, 5592, 4137, 2453, 2517, 5624, 
         4165, 2516, 2518, 5628, 4169, 2525, 2526, 5642, 4181, 2554, 2547, 
         5638, 4178, 2473, 2472, 5602, 4148, 2471, 2467, 5600, 4146, 2466, 
         2480, 5604, 4150, 2476, 2477, 5618, 2508}], 
        Line3DBox[{2431, 2430, 4125, 2432, 5585, 2433, 4136, 2451, 5591, 4135,
          2443, 2444, 5589, 4133, 2447, 2400, 5572, 4111, 2399, 2395, 5569, 
         4108, 2394, 2555, 5643, 4182, 2551, 2550, 5640, 4179, 2549, 2488, 
         5609, 4154, 2483, 2482, 5606, 4151, 2474, 2475, 5603, 4149, 2478, 
         2509, 5619, 4161, 2506, 2507, 5621, 4163, 2513, 2515, 5622, 2514}], 
        Line3DBox[{2435, 4126, 2434, 2442, 5587, 4130, 2439, 2440, 5586, 4129,
          2418, 2419, 5580, 4119, 2416, 2417, 5583, 4122, 2407, 2406, 5575, 
         4114, 2405, 2404, 5574, 4113, 2403, 2533, 5631, 4172, 2532, 2536, 
         5636, 4176, 2540, 2541, 5635, 4175, 2544, 2545, 5639, 2548}], 
        Line3DBox[{2437, 4127, 2436, 2441, 5588, 4131, 2386, 2387, 5567, 4106,
          2390, 2415, 5579, 4118, 2413, 2414, 5581, 4120, 2420, 2422, 5582, 
         4121, 2421, 2538, 5632, 4173, 2537, 2539, 5633, 4174, 2534, 2535, 
         5637, 4177, 2546, 2543, 5634, 2542}], 
        Line3DBox[{2438, 4128, 2401, 2385, 5566, 4105, 2384, 2383, 5565, 4104,
          2382, 2391, 5568, 4107, 2388, 2389, 5578, 4117, 2412, 2411, 5577, 
         4116, 2408, 2409, 5576, 4115, 2410, 2529, 5630, 4171, 2530, 2531, 
         5644, 2556}], 
        Line3DBox[{2461, 4142, 2460, 2457, 5594, 4140, 2456, 2463, 5597, 4143,
          2462, 2465, 5598, 4144, 2464, 2520, 5625, 4166, 2519, 2522, 5626, 
         4167, 2521, 2528, 5629, 4170, 2523, 2524, 5627, 4168, 2527, 2490, 
         5610, 4155, 2489, 2491, 5611, 4156, 2470, 2469, 5601, 4147, 2468, 
         2479, 5605, 2481}], 
        Line3DBox[{2558, 2557, 5649, 2566, 5648, 2565, 5650, 2567, 5663, 2580,
          5659, 2579, 5661, 2582, 5660, 2581, 5703, 2630, 5702, 2628, 5700, 
         2627, 5701, 2629, 5727, 2651, 5721, 2650, 5719, 5720, 2649, 2652}], 
        Line3DBox[{2563, 2562, 5647, 2564, 5667, 2588, 5666, 2587, 5665, 2586,
          5664, 2585, 5741, 2669, 5740, 2634, 5705, 2633, 5706, 2632, 5704, 
         2631, 5726, 2648, 5718, 2647, 5717, 2646, 5722, 5723, 2654, 2653}], 
        Line3DBox[{2574, 2573, 5655, 2570, 5652, 2569, 5651, 2568, 5654, 2572,
          5653, 2571, 5658, 2578, 5657, 2577, 5747, 2676, 5746, 2640, 5710, 
         2639, 5709, 2638, 5712, 2641, 5711, 2637, 5707, 5708, 2636, 2635}], 
        Line3DBox[{2576, 2575, 5656, 2561, 5646, 2560, 5645, 2559, 5669, 2590,
          5670, 2589, 5668, 2584, 5662, 2583, 5716, 2645, 5715, 2644, 5714, 
         2643, 5713, 2642, 5724, 2655, 5725, 2656, 5728, 5729, 2658, 2657}], 
        Line3DBox[{2592, 2591, 5672, 2594, 5671, 2593, 5676, 2600, 5687, 2615,
          5689, 2616, 5688, 2614, 5686, 2613, 5732, 2661, 5731, 2660, 5734, 
         2663, 5733, 2662, 5752, 2681, 5755, 2682, 5753, 5754, 2675, 2674}], 
        Line3DBox[{2601, 2599, 5675, 2598, 5695, 2623, 5696, 2621, 5693, 2620,
          5692, 2619, 5691, 2618, 5690, 2617, 5730, 2659, 5737, 2665, 5735, 
         2664, 5736, 2666, 5745, 2673, 5744, 2672, 5748, 5749, 2678, 2677}], 
        Line3DBox[{2612, 2611, 5685, 2597, 5674, 2596, 5673, 2595, 5694, 2622,
          5699, 2625, 5697, 2624, 5698, 2626, 5739, 2668, 5738, 2667, 5743, 
         2671, 5742, 2670, 5751, 2680, 5750, 2679, 5756, 5757, 2683, 2684}], 
        Line3DBox[{2686, 2685, 5758, 2687, 5763, 2692, 5761, 2691, 5771, 2706,
          5772, 2707, 5774, 2709, 5773, 2708, 5809, 2750, 5808, 2749, 5807, 
         2748, 5813, 2756, 5839, 2783, 5840, 2769, 5825, 5826, 2768, 2767}], 
        Line3DBox[{2697, 2696, 5764, 2695, 5770, 2705, 5769, 2704, 5778, 2715,
          5780, 2713, 5776, 2712, 5784, 2720, 5820, 2762, 5819, 2761, 5818, 
         2760, 5817, 2752, 5810, 2751, 5812, 2755, 5837, 5838, 2779, 2778}], 
        Line3DBox[{2700, 2699, 5765, 2698, 5768, 2703, 5767, 2694, 5762, 2693,
          5779, 2711, 5775, 2710, 5777, 2714, 5861, 2806, 5860, 2759, 5816, 
         2758, 5815, 2757, 5814, 2754, 5811, 2753, 5835, 5836, 2781, 2782}], 
        Line3DBox[{2702, 2701, 5766, 2690, 5760, 2689, 5759, 2688, 5785, 2718,
          5782, 2717, 5781, 2716, 5783, 2719, 5824, 2766, 5823, 2765, 5822, 
         2764, 5821, 2763, 5834, 2780, 5843, 2785, 5841, 5842, 2784, 2786}], 
        Line3DBox[{2776, 2775, 5831, 2774, 5833, 2777, 5832, 2772, 5828, 2771,
          5827, 2770, 5830, 2773, 5829, 2609, 5682, 2608, 5681, 2607, 5684, 
         2610, 5683, 2604, 5678, 2603, 5677, 2602, 5679, 5680, 2606, 2605}], 
        Line3DBox[{2801, 2802, 5859, 5858, 2805, 5867, 2809, 5864, 2796, 5851,
          2787, 5844, 2788, 5845, 2789, 5846, 2741, 5799, 2742, 5800, 2740, 
         5798, 2738, 5796, 2728, 5789, 2729, 5791, 2725, 5787, 2721, 2722}], 
        Line3DBox[{2803, 2804, 5866, 5865, 2810, 5869, 2811, 5868, 2790, 5847,
          2791, 5848, 2792, 5856, 2800, 5857, 2736, 5795, 2737, 5797, 2739, 
         5805, 2746, 5804, 2730, 5790, 2723, 5786, 2724, 5788, 2726, 2727}], 
        Line3DBox[{2807, 2808, 5863, 5862, 2795, 5850, 2793, 5849, 2794, 5852,
          2797, 5853, 2798, 5854, 2799, 5855, 2747, 5806, 2743, 5801, 2744, 
         5803, 2745, 5802, 2734, 5793, 2735, 5794, 2731, 5792, 2732, 2733}]}, {
        GrayLevel[0.2], 
        Line3DBox[{2867, 2868, 6014, 3857, 2873, 2878, 6025, 3870, 2903, 2918,
          6033, 3878, 2917, 2916, 6032, 3877, 2915, 3130, 6111, 3976, 3129, 
         2846, 6009, 3842, 2845, 2859, 6013, 3851, 2858, 2842, 6008, 3841, 
         2841, 3097, 6098, 3966, 3094, 3018, 6066, 3931, 3017, 3082, 6087, 
         3953, 3081, 3090, 6092, 3958, 3061, 6081, 3062, 3947, 3067, 3072}], 
        Line3DBox[{2869, 2870, 6024, 3868, 2901, 2904, 6026, 3871, 2905, 2896,
          6022, 3866, 2895, 2914, 6031, 3876, 2913, 2973, 6049, 3909, 2843, 
         2844, 6010, 3843, 2849, 2840, 6007, 3840, 2838, 2837, 6006, 3839, 
         2836, 3025, 6068, 3933, 3024, 3022, 6067, 3932, 3021, 3089, 6094, 
         3959, 3086, 6088, 3085, 3954, 3063, 3064}], 
        Line3DBox[{2908, 2909, 6030, 3875, 2871, 2872, 6027, 3872, 2879, 2880,
          6015, 3858, 2876, 2877, 6020, 3863, 2892, 2885, 6017, 3860, 2884, 
         2888, 6019, 3862, 2887, 3131, 6112, 3977, 3127, 2851, 6011, 3844, 
         2850, 3103, 6099, 3967, 3102, 3101, 6097, 3965, 3098, 3096, 6095, 
         3961, 3095, 3092, 6091, 3957, 3077, 3078, 6085, 3952, 3065, 3066, 
         6083, 3949, 3073, 6082, 3074, 3948, 3070, 3071}], 
        Line3DBox[{2910, 2907, 6028, 3873, 2906, 2911, 6029, 3874, 2874, 2875,
          6021, 3864, 2893, 2898, 6023, 3867, 2897, 2882, 6016, 3859, 2881, 
         2883, 6018, 3861, 2886, 2852, 6012, 3845, 2834, 2833, 6005, 3838, 
         2832, 3088, 6089, 3955, 3087, 3100, 6096, 3964, 3099, 3027, 6069, 
         3934, 3026, 3091, 6090, 3956, 3079, 3076, 6084, 3950, 3075, 6086, 
         3080, 3951, 3068, 3069}], 
        Line3DBox[{2927, 3882, 2926, 2940, 6041, 3889, 2939, 2923, 6035, 3880,
          2922, 3032, 6070, 3937, 3031, 3034, 6123, 3988, 3142, 3157, 6129, 
         3994, 3037, 3038, 6126, 3991, 3005, 3006, 6063, 3928, 3009, 3029, 
         6100, 3968, 3104, 3119, 6104, 3972, 3118, 3121, 6105, 3120}], 
        Line3DBox[{2931, 3884, 2930, 2929, 6037, 3883, 2928, 2925, 6036, 3881,
          2924, 2942, 6042, 3890, 2941, 3035, 6122, 3987, 3141, 3140, 6121, 
         3986, 3139, 3156, 6127, 3992, 3155, 3158, 6128, 3993, 3007, 3008, 
         6101, 3969, 3105, 3107, 6102, 3970, 3106, 3123, 6109, 3974, 3116, 
         3117, 6106, 3122}], 
        Line3DBox[{2932, 3885, 2921, 2920, 6034, 3879, 2919, 3033, 6071, 3938,
          3036, 3039, 6072, 3939, 3040, 3049, 6130, 3995, 3159, 3160, 6131, 
         3996, 3001, 3002, 6065, 3930, 3003, 3004, 6064, 3929, 3016, 3028, 
         6108, 3973, 3126, 3125, 6107, 3124}], 
        Line3DBox[{2946, 3891, 2945, 2956, 6044, 3896, 2954, 2955, 6048, 3900,
          2962, 2990, 6057, 3921, 2989, 2934, 6038, 3886, 2933, 2978, 6050, 
         3914, 2977, 2980, 6051, 3915, 2979, 3047, 6075, 3942, 3045, 3046, 
         6119, 3984, 3108, 3109, 6103, 3971, 3114, 3115, 6115, 3980, 3136, 
         3143, 6124, 3989, 3147, 3152, 6137, 4000, 3168, 3180, 6145, 4006, 
         3179, 3178, 6144, 3177}], 
        Line3DBox[{2949, 3893, 2948, 3000, 6062, 3927, 2999, 2995, 6059, 3924,
          2994, 2992, 6058, 3923, 2991, 2984, 6053, 3917, 2983, 3044, 6073, 
         3940, 3042, 3043, 6078, 3945, 3012, 3013, 6074, 3941, 3010, 3011, 
         6113, 3978, 3134, 3173, 6142, 4005, 3145, 3146, 6139, 4002, 3153, 
         3154, 6125, 3990, 3150, 3151, 6132, 3161}], 
        Line3DBox[{2951, 3894, 2950, 2958, 6045, 3897, 2957, 2998, 6061, 3926,
          2997, 2996, 6060, 3925, 2993, 2988, 6055, 3919, 2987, 2986, 6054, 
         3918, 2985, 3041, 6077, 3944, 3051, 3050, 6076, 3943, 3014, 3015, 
         6120, 3985, 3132, 3133, 6114, 3979, 3135, 3172, 6140, 4003, 3171, 
         3174, 6141, 4004, 3148, 3149, 6133, 3997, 3162, 3166, 6135, 3165}], 
        Line3DBox[{2952, 3895, 2943, 2944, 6043, 3892, 2947, 2953, 6047, 3899,
          2961, 2960, 6046, 3898, 2959, 2936, 6039, 3887, 2935, 2938, 6040, 
         3888, 2937, 2982, 6056, 3920, 2975, 2976, 6052, 3916, 2981, 3048, 
         6110, 3975, 3128, 3138, 6118, 3983, 3110, 3111, 6117, 3982, 3112, 
         3113, 6116, 3981, 3137, 3144, 6136, 3999, 3167, 3169, 6138, 4001, 
         3170, 3164, 6134, 3998, 3163, 6143, 3176, 3175}], 
        Line3DBox[{3052, 2823, 3834, 2822, 6004, 2817, 3833, 6504, 2813, 2812,
          3846, 6508, 3707, 2853, 3853, 6514, 2829, 2828, 3912, 6530, 3713, 
         2974, 3913, 6531, 3714, 2969, 3907, 6526, 2968, 2967, 3905, 6524, 
         2890, 2889}], 
        Line3DBox[{3054, 3053, 3946, 3056, 6079, 3055, 3962, 6535, 3060, 2856,
          3847, 6509, 2819, 2818, 3850, 6512, 2825, 2824, 3836, 6506, 3705, 
         2816, 3832, 6503, 3703, 2830, 3904, 6523, 2966, 2963, 3901, 6520, 
         2891, 2862, 3854, 6515, 3708, 2863, 3855, 6516, 3709, 2865}], 
        Line3DBox[{3058, 3057, 3963, 3059, 6080, 2857, 3848, 6510, 2821, 2820,
          3849, 6511, 2855, 2854, 3852, 6513, 2827, 2814, 3831, 6502, 3702, 
         2815, 3903, 6522, 3712, 2964, 3902, 6521, 3711, 2965, 3906, 6525, 
         2866, 2864, 3856, 6517, 2861, 2860}], 
        Line3DBox[{3084, 3083, 3960, 3093, 6093, 3030, 3936, 6534, 3020, 3019,
          3935, 6533, 3023, 2970, 3908, 6527, 2835, 2831, 3837, 6507, 3706, 
         2839, 3910, 6528, 2848, 2847, 3911, 6529, 2972, 2971, 3922, 6532, 
         2912, 2894, 3865, 6518, 3710, 2826, 3835, 6505, 3704, 2902, 3869, 
         6519, 2900, 2899}], 
        Line3DBox[{3212, 6158, 3717, 4022, 3217, 6160, 3718, 4029, 3231, 6170,
          3211, 4019, 3210, 6156, 3205, 4015, 3204, 6175, 3723, 4031, 3236, 
         6176, 3724, 4030, 3235, 6174, 3722, 4034, 3240, 6180, 3727, 4036, 
         3242, 6277, 3424, 4123, 3423, 6262, 3426, 4125, 3422, 3735}], 
        Line3DBox[{3218, 6161, 3216, 4021, 3215, 6169, 3189, 4009, 3188, 6157,
          3209, 4018, 3202, 6153, 3715, 4014, 3203, 6177, 3237, 4032, 3234, 
         6173, 3721, 4038, 3238, 6178, 3725, 4033, 3239, 6179, 3726, 4035, 
         3241, 6261, 3736, 4124, 3425, 3737}], 
        Line3DBox[{3232, 6171, 3191, 4010, 3190, 6155, 3716, 4017, 3208, 6154,
          3207, 4016, 3206, 6185, 3729, 4046, 3233, 6172, 3720, 4037, 3243, 
         6181, 3245, 4039, 3244, 6296, 3740, 4160, 3497, 6297, 3741, 4159, 
         3419, 3734}], 
        Line3DBox[{3279, 4059, 3278, 3270, 6194, 4056, 3271, 6295, 3495, 4158,
          3496, 6299, 3501, 4163, 3498, 6298, 3480, 4150, 3479, 6287, 3471, 
         4147, 3472, 6316, 3524, 4175, 3525, 6312, 3528, 4177, 3529, 6321, 
         3515, 4171, 3516, 6309, 3518, 3519}], 
        Line3DBox[{3296, 4067, 3297, 3298, 6204, 4068, 3292, 6201, 3282, 4061,
          3283, 6199, 3287, 4063, 3288, 6229, 3345, 4094, 3346, 6232, 3359, 
         4101, 3360, 6294, 3483, 4152, 3484, 6289, 3488, 4154, 3489, 6313, 
         3532, 4181, 3509, 6305, 3510, 4170, 3399, 6248, 3397, 4114, 3398, 
         6255, 3413, 4120, 3410, 6254, 3376, 4107, 3375, 6240, 3367, 3368}], 
        Line3DBox[{3299, 4069, 3295, 3294, 6203, 4066, 3293, 6202, 3280, 4060,
          3281, 6226, 3348, 4096, 3349, 6230, 3351, 4102, 3361, 6293, 3494, 
         4157, 3493, 6292, 3481, 4151, 3482, 6315, 3530, 4178, 3531, 6317, 
         3511, 4168, 3392, 6247, 3393, 4113, 3394, 6249, 3400, 4121, 3414, 
         6257, 3409, 4117, 3408, 6253, 3377, 3378}], 
        Line3DBox[{3300, 4070, 3301, 3302, 6205, 4071, 3303, 6207, 3311, 4078,
          3306, 6206, 3307, 4073, 3308, 6227, 3350, 4097, 3341, 6225, 3342, 
         4095, 3347, 6233, 3354, 4099, 3355, 6231, 3357, 4100, 3358, 6288, 
         3487, 4180, 3534, 6318, 3535, 4182, 3513, 6306, 3504, 4165, 3505, 
         6304, 3508, 4166, 3418, 6259, 3412, 4119, 3373, 6239, 3374, 4106, 
         3371, 6237, 3369, 4105, 3370, 6243, 3387, 3390}], 
        Line3DBox[{3304, 4072, 3305, 3314, 6209, 4076, 3312, 6208, 3313, 4077,
          3284, 6198, 3285, 4062, 3286, 6228, 3343, 4093, 3344, 6235, 3363, 
         4103, 3362, 6234, 3352, 4098, 3353, 6290, 3485, 4153, 3486, 6314, 
         3533, 4179, 3514, 6307, 3512, 4169, 3506, 6303, 3507, 4167, 3416, 
         6258, 3417, 4122, 3415, 6256, 3411, 4118, 3364, 6236, 3365, 4104, 
         3366, 6238, 3372, 3388}], 
        Line3DBox[{3309, 4074, 3267, 3268, 6193, 4055, 3269, 6196, 3275, 4065,
          3291, 6301, 3503, 4164, 3502, 6300, 3499, 4161, 3468, 6283, 3469, 
         4146, 3470, 6285, 3476, 4156, 3492, 6311, 3526, 4176, 3527, 6320, 
         3523, 4174, 3517, 6308, 3403, 4115, 3401, 6250, 3402, 3407}], 
        Line3DBox[{3310, 4075, 3276, 3277, 6197, 4058, 3274, 6195, 3272, 4057,
          3273, 6200, 3289, 4064, 3290, 6302, 3500, 4162, 3477, 6286, 3478, 
         4149, 3475, 6284, 3473, 4148, 3474, 6291, 3490, 4155, 3491, 6319, 
         3520, 4172, 3521, 6310, 3522, 4173, 3404, 6251, 3405, 4116, 3406, 
         6252, 3395, 3396}], 
        Line3DBox[{3337, 6222, 3732, 4089, 3339, 6223, 3733, 4091, 3225, 6165,
          3719, 4026, 3213, 6159, 3184, 4007, 3183, 6182, 3728, 4042, 3248, 
         6184, 3252, 4044, 3251, 6186, 3730, 4048, 3256, 6188, 3731, 4050, 
         3261, 6273, 3448, 4132, 3447, 6269, 3738, 4136, 3454, 6276, 3460, 
         4139, 3459, 3739}], 
        Line3DBox[{3356, 3330, 6217, 4082, 3328, 6216, 3329, 4084, 3327, 6215,
          3326, 4081, 3323, 6213, 3324, 4085, 3226, 6166, 3227, 4027, 3228, 
         6168, 3194, 4012, 3195, 6150, 3185, 4008, 3181, 6146, 3182, 4052, 
         3264, 6246, 3391, 4112, 3389, 6245, 3379, 4108, 3380, 6270, 3455, 
         4137, 3456, 6275, 3458, 4144, 3420, 6260, 3421, 4129, 3440, 6265, 
         3441, 4131, 3439, 6264, 3438, 4128, 3435, 3436}], 
        Line3DBox[{3430, 3429, 4142, 3464, 6278, 3463, 4141, 3462, 6280, 3453,
          4135, 3446, 6268, 3445, 4138, 3457, 6271, 3260, 4049, 3259, 6189, 
         3255, 4047, 3254, 6191, 3253, 4045, 3250, 6183, 3247, 4041, 3201, 
         6152, 3200, 4020, 3214, 6164, 3224, 4024, 3223, 6163, 3222, 4090, 
         3340, 6224, 3338, 4088, 3318, 6210, 3317}], 
        Line3DBox[{3434, 3432, 4127, 3431, 6267, 3444, 4130, 3443, 6266, 3442,
          4143, 3465, 6279, 3452, 4134, 3451, 6274, 3386, 4111, 3385, 6242, 
         3382, 4109, 3381, 6244, 3266, 4054, 3263, 6190, 3249, 4043, 3187, 
         6147, 3186, 4011, 3193, 6148, 3192, 4028, 3229, 6167, 3230, 4087, 
         3336, 6221, 3334, 4086, 3322, 6212, 3320, 4080, 3319, 6219, 3333, 
         4083, 3332, 6218, 3331}], 
        Line3DBox[{3437, 3428, 4126, 3427, 6263, 3433, 4140, 3461, 6281, 3466,
          4145, 3467, 6282, 3450, 4133, 3449, 6272, 3384, 4110, 3383, 6241, 
         3262, 4051, 3258, 6187, 3257, 4053, 3265, 6192, 3246, 4040, 3197, 
         6149, 3196, 4013, 3199, 6151, 3198, 4025, 3220, 6162, 3219, 4023, 
         3221, 6220, 3335, 4092, 3325, 6214, 3316, 4079, 3315, 6211, 3321}], 
        Line3DBox[{3544, 3543, 6326, 3542, 6338, 3561, 6339, 3559, 6336, 3558,
          6335, 3557, 6334, 3556, 6333, 3555, 6379, 3593, 6384, 3598, 6382, 
         3597, 6383, 3599, 6392, 3606, 6391, 3605, 6393, 6394, 3608, 3607}], 
        Line3DBox[{3549, 3548, 6329, 3537, 6322, 3536, 6323, 3538, 6344, 3564,
          6341, 3553, 6331, 3552, 6332, 3554, 6390, 3604, 6389, 3596, 6381, 
         3595, 6380, 3594, 6396, 3611, 6402, 3613, 6398, 6399, 3612, 3614}], 
        Line3DBox[{3551, 3550, 6330, 3541, 6325, 3540, 6324, 3539, 6337, 3560,
          6343, 3563, 6340, 3562, 6342, 3565, 6386, 3601, 6385, 3600, 6388, 
         3603, 6387, 3602, 6397, 3610, 6395, 3609, 6400, 6401, 3615, 3616}], 
        Line3DBox[{3570, 3569, 6350, 3573, 6375, 3589, 6372, 3588, 6371, 3587,
          6370, 3547, 6328, 3546, 6327, 3545, 6411, 3625, 6413, 3624, 6410, 
         3623, 6427, 3630, 6419, 3629, 6418, 3628, 6422, 6423, 3635, 3634}], 
        Line3DBox[{3575, 3574, 6352, 3572, 6349, 3571, 6374, 3583, 6364, 3582,
          6363, 3581, 6369, 3586, 6368, 3585, 6403, 3617, 6404, 3618, 6412, 
         3622, 6409, 3621, 6420, 3631, 6421, 3633, 6424, 6425, 3637, 3636}], 
        Line3DBox[{3578, 3748, 6356, 6355, 3577, 6353, 3746, 6354, 3747, 6359,
          3751, 6360, 3579, 6357, 3749, 6358, 3750, 6485, 3814, 6486, 3679, 
         6483, 3812, 6484, 3813, 6488, 3817, 6489, 3680, 6487, 3815, 3816}], 
        Line3DBox[{3632, 3761, 6431, 6430, 3763, 6432, 3639, 6429, 3620, 6407,
          3758, 6408, 3619, 6405, 3757, 6406, 3580, 6362, 3754, 6366, 3755, 
         6367, 3584, 6365, 3576, 6351, 3567, 6345, 3743, 6346, 3566, 3742}], 
        Line3DBox[{3641, 3640, 6434, 6433, 3638, 6426, 3762, 6428, 3627, 6416,
          3760, 6417, 3626, 6414, 3759, 6415, 3592, 6377, 3591, 6376, 3756, 
         6378, 3590, 6373, 3568, 6347, 3744, 6348, 3745, 6361, 3752, 3753}], 
        Line3DBox[{3660, 3782, 6537, 3784, 6541, 3664, 6539, 3785, 6546, 3790,
          6548, 3791, 6550, 3670, 6549, 3792, 6559, 3689, 6558, 3688, 6557, 
         3820, 6564, 3824, 6575, 3829, 6578, 3699, 6571, 6572, 3697, 3825}], 
        Line3DBox[{3663, 3662, 6538, 3661, 6536, 3783, 6540, 3786, 6554, 3795,
          6555, 3669, 6547, 3668, 6545, 3789, 6570, 3696, 6569, 3691, 6561, 
         3690, 6560, 3821, 6579, 3830, 6580, 3701, 6576, 6577, 3698, 3826}], 
        Line3DBox[{3666, 3665, 6542, 3787, 6544, 3667, 6543, 3788, 6552, 3794,
          6553, 3671, 6551, 3793, 6556, 3796, 6568, 3695, 6567, 3694, 6566, 
         3693, 6565, 3692, 6562, 3822, 6563, 3823, 6573, 6574, 3700, 3828}], 
        Line3DBox[{3678, 3810, 6482, 6481, 3811, 6496, 3685, 6495, 3676, 6469,
          3672, 6463, 3797, 6464, 3798, 6465, 3652, 6450, 3777, 6451, 3651, 
         6449, 3650, 6448, 3645, 6438, 3767, 6440, 3643, 6435, 3642, 3764}], 
        Line3DBox[{3681, 3818, 6494, 6493, 3675, 6468, 3673, 6466, 3799, 6473,
          3804, 6474, 3805, 6475, 3806, 6476, 3659, 6461, 3654, 6453, 3779, 
         6457, 3656, 6455, 3649, 6446, 3776, 6447, 3647, 6441, 3769, 3770}], 
        Line3DBox[{3684, 3683, 6492, 6491, 3674, 6467, 3800, 6470, 3801, 6471,
          3802, 6472, 3803, 6500, 3827, 6501, 3655, 6454, 3653, 6452, 3778, 
         6456, 3646, 6439, 3768, 6444, 3775, 6445, 3648, 6442, 3771, 3772}], 
        Line3DBox[{3687, 3686, 6498, 6497, 3819, 6499, 3682, 6490, 3677, 6477,
          3807, 6478, 3808, 6479, 3809, 6480, 3658, 6460, 3657, 6458, 3780, 
         6459, 3781, 6462, 3644, 6436, 3765, 6437, 3766, 6443, 3773, 3774}]}, {
        GrayLevel[0.2], 
        Line3DBox[{4193, 5333, 4183, 4184, 6004, 5332, 4191, 4346, 6080, 5417,
          4353, 4352, 6079, 5416, 4349, 4350, 6093, 6001, 5891, 6088, 4359, 
         6000, 5889, 6081, 4354, 5999, 4357, 6086, 4356, 5998, 5890, 6082, 
         4355, 6003, 4429, 6143, 4440, 4441}], 
        Line3DBox[{4217, 5341, 4213, 5244, 6508, 5971, 4185, 5229, 6511, 5974,
          4190, 5232, 6509, 5972, 5875, 4336, 6533, 5996, 4328, 6067, 5285, 
         5403, 4329, 6087, 4331, 5404, 4330, 6090, 5303, 5420, 4358, 6085, 
         5301, 5464, 4434, 6138, 4432, 5462, 4431, 6145, 4428, 5460, 4427, 
         6135, 4425, 4424}], 
        Line3DBox[{4219, 5342, 4192, 4188, 6504, 5967, 5872, 5233, 6510, 5973,
          5876, 5299, 6535, 6002, 4351, 4337, 6534, 5997, 5888, 6094, 4364, 
         5421, 4363, 6092, 4335, 5406, 4334, 6084, 4348, 5415, 4347, 6083, 
         5300, 5431, 4389, 6134, 5327, 5461, 4430, 6144, 4436, 4435}], 
        Line3DBox[{4220, 5248, 6516, 5979, 5878, 4197, 6505, 5968, 5873, 6022,
          5258, 5348, 4238, 6032, 4243, 5351, 4228, 6016, 5252, 5344, 4229, 
         6019, 5254, 5369, 4274, 6056, 5278, 5398, 4310, 6051, 4273, 5368, 
         4272, 6077, 4344, 5412, 4343, 6078, 5298, 5451, 4415, 6127, 5322, 
         5458, 4419, 6126, 5321, 5456, 4326, 6065, 4323, 5400, 4322, 5282}], 
        Line3DBox[{4223, 5249, 6519, 5982, 5881, 6026, 4241, 5349, 4240, 6033,
          4237, 5347, 4236, 6023, 4234, 5346, 4230, 6017, 5253, 5365, 4266, 
         6040, 4264, 5364, 4263, 6050, 4271, 5367, 4270, 6054, 5277, 5395, 
         4316, 6073, 5294, 5449, 4412, 6121, 5319, 5452, 4416, 6129, 5323, 
         5455, 4421, 6131, 4423, 5459, 4320, 5280}], 
        Line3DBox[{4224, 6014, 5250, 5354, 4246, 6029, 4244, 5353, 4225, 6015,
          5251, 5384, 4292, 6046, 5270, 5385, 4293, 6057, 4315, 5394, 4314, 
         6060, 5279, 5399, 4319, 6058, 4258, 5360, 4257, 6042, 4253, 5358, 
         4252, 6070, 5289, 5409, 4339, 6072, 4341, 5411, 4338, 5290}], 
        Line3DBox[{4233, 4222, 6517, 5980, 5879, 4221, 6515, 5978, 5877, 5255,
          6518, 5981, 5880, 6031, 5263, 5355, 4249, 6111, 4227, 5343, 4226, 
         6018, 4232, 5345, 4231, 6112, 4318, 5397, 4311, 6052, 5276, 5396, 
         4317, 6075, 5296, 5413, 4345, 6076, 5297, 5414, 4342, 6074, 5295, 
         5454, 4420, 6128, 4418, 5453, 4321, 6063, 5281, 5401, 4324, 6064, 
         5283, 5402, 4325, 5288}], 
        Line3DBox[{4239, 6024, 5259, 5350, 4242, 6025, 4196, 5334, 4195, 6021,
          5257, 5352, 4235, 6020, 5256, 5375, 4267, 6039, 5268, 5370, 4265, 
         6038, 5267, 5371, 4275, 6055, 4269, 5366, 4268, 6053, 4288, 5381, 
         4287, 6122, 4411, 5448, 4410, 6123, 4414, 5450, 4413, 6130, 5324, 
         5457, 4422, 5325}], 
        Line3DBox[{4247, 6028, 5261, 5356, 4245, 6027, 5260, 5378, 4285, 6047,
          4291, 5383, 4290, 6048, 4277, 5372, 4276, 6061, 4313, 5393, 4312, 
         6059, 4289, 5382, 4256, 6036, 4255, 5359, 4254, 6035, 5265, 5363, 
         4262, 6071, 5291, 5410, 4340, 5293}], 
        Line3DBox[{4248, 6030, 5262, 5379, 4278, 6043, 5269, 5377, 4284, 6044,
          4282, 5374, 4281, 6045, 4280, 5373, 4279, 6062, 4286, 5380, 4259, 
         6037, 5266, 5361, 4260, 6041, 4261, 5362, 4250, 6034, 5264, 5357, 
         4251, 5292}], 
        Line3DBox[{4299, 5386, 4298, 5275, 6531, 5994, 5887, 4296, 6522, 5985,
          4187, 5230, 6503, 5966, 5871, 5236, 6528, 5991, 4203, 6007, 4201, 
         5335, 4200, 6008, 5240, 5337, 4205, 6089, 5302, 5419, 4362, 6097, 
         5307, 5439, 4401, 6117, 4403, 5440, 4402, 6115, 5315, 5445, 4409, 
         6140, 5329, 5468, 4438, 6139, 4380, 5427, 4379, 6109, 5312, 5433, 
         4384, 6105, 4377, 4376}], 
        Line3DBox[{4301, 5387, 4218, 5247, 6514, 5977, 4214, 5245, 6513, 5976,
          4215, 5246, 6512, 5975, 4189, 5231, 6527, 5990, 5886, 6068, 5286, 
         5407, 4327, 6066, 5284, 5408, 4332, 6069, 5287, 5405, 4333, 6091, 
         5304, 5435, 4396, 6136, 5328, 5463, 4433, 6137, 4388, 5430, 4387, 
         6133, 5326, 5465, 4426, 6132, 4383, 4382}], 
        Line3DBox[{4304, 5388, 4303, 5273, 6526, 5989, 5885, 4295, 6521, 5984,
          5883, 5271, 6523, 5986, 4199, 5237, 6529, 5992, 4207, 6010, 5242, 
         5390, 4216, 6013, 4212, 5340, 4202, 6005, 5238, 5338, 4208, 6099, 
         5308, 5436, 4397, 6118, 5317, 5443, 4378, 6103, 5311, 5446, 4405, 
         6114, 5314, 5444, 4408, 6142, 4370, 5424, 4369, 6102, 4367, 5423, 
         4366, 6104, 4375, 5426, 4374, 6107, 4391, 4392}], 
        Line3DBox[{4305, 4300, 6524, 5987, 5884, 4302, 6525, 5988, 4297, 4294,
          6520, 5983, 5882, 5272, 6532, 5995, 4306, 6049, 5274, 5391, 4206, 
         6009, 5241, 5389, 4211, 6012, 4210, 5339, 4209, 6011, 5243, 5376, 
         4283, 6110, 5313, 5438, 4400, 6119, 4399, 5437, 4398, 6120, 5318, 
         5447, 4404, 6113, 4395, 5434, 4371, 6101, 5310, 5428, 4368, 6100, 
         5309, 5429, 4381, 6108, 4373, 5425, 4372, 4390}], 
        Line3DBox[{4309, 5392, 4308, 4307, 6530, 5993, 4198, 4186, 6502, 5965,
          5870, 5235, 6506, 5969, 4194, 5234, 6507, 5970, 5874, 6006, 5239, 
         5336, 4204, 6098, 4361, 5418, 4360, 6096, 5306, 5422, 4365, 6095, 
         5305, 5441, 4406, 6116, 5316, 5442, 4407, 6124, 5320, 5467, 4439, 
         6141, 4437, 5466, 4417, 6125, 4394, 5432, 4385, 6106, 4386, 4393}], 
        Line3DBox[{4447, 5470, 4446, 4466, 6155, 5477, 4462, 4463, 6157, 5479,
          4459, 4460, 6156, 5478, 4468, 4516, 6182, 5505, 5895, 6183, 4530, 
         5504, 5894, 6192, 4531, 5506, 5896, 6190, 4539, 5514, 5901, 6246, 
         4624, 5641, 5964, 6318, 4744, 5640, 4727, 6307, 4728, 5642, 4723, 
         6305, 4724, 5627, 4625, 6247, 4626, 5631, 5959, 6310, 4733, 5633, 
         4732, 6308, 4731, 5630, 5957, 6309, 4730, 4729}], 
        Line3DBox[{4467, 5476, 4464, 4465, 6154, 5475, 4461, 4458, 6153, 5474,
          4457, 4513, 6175, 5495, 4514, 4515, 6184, 5507, 5897, 6191, 4540, 
         5515, 4536, 6187, 4537, 5516, 5902, 6244, 4621, 5573, 4622, 6245, 
         4623, 5643, 4726, 6306, 4725, 5628, 4720, 6303, 4721, 5629, 4630, 
         6248, 4627, 5574, 5936, 6249, 4631, 5632, 4635, 6251, 4634, 5576, 
         4632, 6250, 4633, 5958}], 
        Line3DBox[{4471, 4470, 6158, 5480, 4469, 4477, 6223, 5552, 4483, 6163,
          4482, 5484, 4480, 6162, 4481, 5550, 4493, 6167, 4489, 5487, 5893, 
         6168, 4494, 5556, 5920, 6233, 4603, 5564, 4604, 6234, 4602, 5562, 
         5925, 6294, 4699, 5612, 4697, 6292, 4687, 5603, 4684, 6284, 4681, 
         5600, 5946, 6285, 4682, 5601, 5947, 6316, 4740, 5639, 4741, 4742}], 
        Line3DBox[{4473, 4474, 6222, 5551, 5917, 6224, 4595, 5553, 4594, 6220,
          4593, 5549, 5916, 6221, 4592, 5548, 4487, 6166, 4488, 5558, 4596, 
         6225, 4597, 5554, 5918, 6235, 4598, 5555, 5919, 6232, 4601, 5563, 
         5926, 6293, 4698, 5620, 4685, 6286, 4686, 5619, 4679, 6283, 4680, 
         5604, 4688, 6287, 4689, 5605, 4690, 4743}], 
        Line3DBox[{4496, 4479, 6161, 5483, 4478, 4476, 6160, 5482, 4475, 4486,
          6165, 5485, 4484, 6164, 4485, 5486, 4453, 6151, 4454, 5488, 4448, 
         6148, 4449, 5472, 5892, 6150, 4452, 5560, 5923, 6231, 4600, 5559, 
         5922, 6290, 4692, 5607, 5950, 6289, 4691, 5606, 5949, 6315, 4683, 
         5602, 5948, 6291, 4695, 5611, 5954, 6311, 4736, 5635, 5960, 6312, 
         4735, 5634, 4734, 4745}], 
        Line3DBox[{4499, 4498, 6171, 5491, 4497, 4495, 6169, 5489, 4490, 4491,
          6170, 5490, 4492, 4472, 6159, 5481, 4455, 6152, 4456, 5473, 4451, 
         6149, 4450, 5471, 4445, 6147, 4444, 5469, 4442, 6146, 4443, 5561, 
         5924, 6288, 4693, 5608, 5951, 6314, 4694, 5609, 5952, 6313, 4739, 
         5638, 5963, 6317, 4696, 5610, 5953, 6319, 4737, 5636, 5961, 6320, 
         4738, 5637, 5962, 6321, 4747, 5644, 4746, 4748}], 
        Line3DBox[{4524, 5501, 4523, 4526, 6181, 5503, 4529, 4518, 6178, 5498,
          4517, 4522, 6180, 5500, 4521, 4672, 6273, 5593, 4667, 6268, 4668, 
         5589, 5941, 6282, 4669, 5590, 5942, 6279, 4675, 5598, 4651, 6260, 
         4642, 5580, 4611, 6239, 4612, 5579, 4605, 6236, 4606, 5568, 4614, 
         6240, 4615, 5930}], 
        Line3DBox[{4528, 5502, 4527, 4707, 6296, 5615, 4708, 4520, 6179, 5499,
          4519, 4655, 6277, 5596, 4656, 4657, 6269, 5591, 5943, 6280, 4677, 
         5599, 4678, 6281, 4676, 5597, 4664, 6266, 4663, 5586, 4662, 6265, 
         4613, 5567, 4610, 6237, 4607, 5565, 5927, 6238, 4608, 5928}], 
        Line3DBox[{4534, 5509, 4533, 4532, 6185, 5508, 4500, 4501, 6177, 5497,
          4504, 4505, 6176, 5496, 4511, 4512, 6186, 5511, 5898, 6189, 4538, 
         5513, 5900, 6241, 4617, 5570, 5932, 6242, 4616, 5569, 5931, 6270, 
         4670, 5624, 5956, 6304, 4722, 5626, 4646, 6258, 4629, 5575, 5938, 
         6255, 4643, 5582, 5940, 6257, 4638, 5577, 4636, 6252, 4637, 5939}], 
        Line3DBox[{4535, 5510, 4510, 4503, 6172, 5492, 4502, 4507, 6173, 5493,
          4506, 4509, 6174, 5494, 4508, 4525, 6188, 5512, 5899, 6271, 4618, 
         5571, 5933, 6272, 4619, 5572, 5934, 6274, 4671, 5592, 5944, 6275, 
         4673, 5625, 4647, 6259, 4648, 5583, 4645, 6256, 4644, 5581, 4641, 
         6254, 4640, 5578, 4639, 6253, 4628, 5937}], 
        Line3DBox[{4579, 6210, 4578, 5542, 5914, 6214, 4580, 5543, 5915, 6212,
          4583, 5544, 4584, 6213, 4574, 5536, 5913, 6227, 4556, 5525, 5908, 
         6228, 4557, 5526, 5909, 6229, 4599, 5557, 5921, 6230, 4559, 5527, 
         5910, 6302, 4719, 5623, 4717, 6300, 4715, 5621, 4713, 6298, 4712, 
         5618, 4710, 4711}], 
        Line3DBox[{4581, 6211, 4582, 5546, 4590, 6219, 4591, 5547, 4585, 6215,
          4577, 5541, 4572, 6206, 4573, 5540, 4555, 6198, 4554, 5524, 5907, 
         6199, 4553, 5523, 5906, 6226, 4547, 5519, 5905, 6200, 4558, 5528, 
         5911, 6301, 4705, 5614, 5955, 6299, 4714, 5622, 4716, 4718}], 
        Line3DBox[{4587, 6217, 5331, 5534, 4568, 6205, 4569, 5535, 4571, 6209,
          5330, 5530, 4565, 6204, 4566, 5532, 4563, 6203, 4564, 5538, 4549, 
         6197, 4550, 5537, 4541, 6193, 4542, 5522, 4544, 6194, 4545, 5521, 
         4552, 4700}], 
        Line3DBox[{4589, 6218, 4588, 5545, 4586, 6216, 4570, 5533, 5912, 6207,
          4575, 5539, 4576, 6208, 4567, 5531, 4560, 6201, 4561, 5529, 4562, 
         6202, 4551, 5520, 4548, 6195, 4543, 5517, 5903, 6196, 4546, 5518, 
         5904, 6295, 4702, 5613, 4701, 4706}], 
        Line3DBox[{4709, 5617, 4703, 4704, 6297, 5616, 4649, 4650, 6261, 5584,
          4654, 4658, 6262, 5585, 4652, 4653, 6276, 5595, 5945, 6278, 4674, 
         5594, 4659, 6263, 4660, 5587, 4665, 6267, 4666, 5588, 4661, 6264, 
         4609, 5566, 5929, 6243, 4620, 5935}], 
        Line3DBox[{4790, 4791, 5664, 4796, 6335, 4780, 5659, 4779, 6341, 4807,
          5670, 4809, 6343, 4766, 5653, 4765, 6370, 4857, 5692, 4846, 6363, 
         4847, 5689, 6367, 4854, 4871, 5699, 6378, 4863, 4864, 5827, 6483, 
         5027, 5028, 5772, 6449, 5035, 5036, 5782, 6459, 5049, 5050, 5780, 
         6457, 5054, 5779, 6456, 5055, 5100, 6548, 5798, 5098, 5097, 6555, 
         5805, 5114, 5110, 6553, 5803, 5108, 5072, 5073}], 
        Line3DBox[{4792, 4793, 5665, 4797, 6336, 4789, 5663, 4788, 6344, 4808,
          5669, 4802, 6337, 4768, 5654, 4767, 6371, 4858, 5693, 4848, 6364, 
         4849, 5687, 6365, 4850, 4862, 5694, 6373, 4859, 4860, 5828, 6484, 
         5037, 5034, 5771, 6448, 5033, 5058, 5785, 6462, 5056, 5053, 5778, 
         6455, 5008, 5762, 6439, 5009, 5095, 6546, 5796, 5096, 5111, 6554, 
         5804, 5112, 5107, 6552, 5802, 5071, 5067, 5068}], 
        Line3DBox[{4798, 4799, 5667, 4804, 6338, 4760, 5648, 4749, 6322, 4750,
          5646, 4755, 6325, 4756, 5652, 4764, 6375, 4865, 5695, 4821, 6349, 
         4811, 5671, 6345, 4810, 4817, 5674, 6348, 4816, 4841, 5833, 6489, 
         5004, 5005, 5763, 6440, 5011, 5002, 5760, 6437, 5001, 5022, 5770, 
         6447, 5025, 5768, 6445, 5026, 5077, 6541, 5791, 5074, 5061, 6536, 
         5786, 5062, 5087, 6544, 5794, 5089, 5082, 5083}], 
        Line3DBox[{4803, 4801, 5666, 4800, 6339, 4762, 5650, 4751, 6323, 4752,
          5645, 4753, 6324, 4754, 5651, 4763, 6372, 4861, 5696, 4866, 6374, 
         4822, 5676, 6351, 4818, 4815, 5673, 6347, 4814, 4840, 5832, 6488, 
         5010, 5007, 5761, 6438, 5006, 5000, 5759, 6436, 4999, 5021, 5769, 
         6446, 5023, 5767, 6444, 5024, 5069, 6539, 5789, 5070, 5075, 6540, 
         5790, 5076, 5086, 6543, 5793, 5088, 5080, 5081}], 
        Line3DBox[{4805, 4759, 5647, 4757, 6326, 4758, 5649, 4761, 6329, 4776,
          5656, 4775, 6330, 4774, 5655, 4773, 6350, 4820, 5675, 4819, 6352, 
         4813, 5672, 6346, 4812, 4839, 5685, 6361, 4842, 4843, 5831, 6487, 
         5012, 4998, 5758, 6435, 4997, 5003, 5766, 6443, 5015, 5014, 5764, 
         6441, 5013, 5765, 6442, 5020, 5063, 6537, 5787, 5064, 5065, 6538, 
         5788, 5066, 5078, 6542, 5792, 5079, 5084, 5085}], 
        Line3DBox[{4885, 4886, 5706, 4890, 6384, 4882, 5702, 4881, 6389, 4910,
          5715, 4896, 6385, 4897, 5746, 4960, 6413, 4959, 5737, 4946, 6404, 
         4947, 5731, 6405, 4948, 4963, 5738, 6414, 4961, 4832, 5681, 6357, 
         4831, 5121, 5808, 6464, 5120, 5146, 5823, 6479, 5142, 5139, 5819, 
         6475, 5138, 5860, 6500, 5207, 5174, 6558, 5845, 5175, 5203, 6569, 
         5856, 5204, 5199, 6567, 5854, 5042, 5038, 5039}], 
        Line3DBox[{4891, 4889, 5705, 4875, 6379, 4876, 5703, 4883, 6390, 4911,
          5716, 4898, 6386, 4899, 5747, 4958, 6411, 4945, 5730, 4943, 6403, 
         4944, 5732, 6406, 4949, 4964, 5739, 6415, 4962, 4834, 5682, 6358, 
         4833, 5123, 5809, 6465, 5122, 5147, 5824, 6480, 5143, 5141, 5820, 
         6476, 5140, 5861, 6501, 5208, 5176, 6559, 5846, 5177, 5205, 6570, 
         5857, 5206, 5200, 6568, 5855, 5043, 5040, 5041}], 
        Line3DBox[{4928, 4926, 5723, 4924, 6394, 4920, 5720, 4918, 6399, 4940,
          5729, 4942, 6401, 4895, 5708, 4893, 6423, 4980, 5749, 4982, 6425, 
         4984, 5754, 6431, 4994, 4996, 5757, 6434, 4990, 4830, 5680, 6356, 
         4828, 5149, 5826, 6482, 5151, 5153, 5842, 6498, 5156, 5158, 5838, 
         6494, 5161, 5836, 6492, 5163, 5214, 6572, 5859, 5212, 5210, 6577, 
         5866, 5221, 5219, 6574, 5863, 5224, 5185, 5187}], 
        Line3DBox[{4929, 4914, 5717, 4912, 6391, 4913, 5721, 4921, 6402, 4935,
          5725, 4933, 6395, 4905, 5711, 4904, 6418, 4974, 5744, 4973, 6421, 
         4978, 5755, 6432, 4991, 4988, 5750, 6426, 4987, 4824, 5677, 6353, 
         4823, 5154, 5840, 6496, 5167, 5168, 5843, 6499, 5164, 5129, 5812, 
         6468, 5126, 5811, 6467, 5127, 5215, 6578, 5867, 5227, 5226, 6580, 
         5869, 5222, 5188, 6563, 5850, 5183, 5182, 5192}], 
        Line3DBox[{4930, 4916, 5718, 4915, 6392, 4922, 5727, 4934, 6396, 4932,
          5724, 4931, 6397, 4907, 5712, 4906, 6419, 4975, 5745, 4976, 6420, 
         4977, 5752, 6429, 4985, 4986, 5751, 6428, 4992, 4826, 5678, 6354, 
         4825, 5166, 5839, 6495, 5165, 5159, 5834, 6490, 5128, 5125, 5810, 
         6466, 5124, 5814, 6470, 5131, 5216, 6575, 5864, 5225, 5228, 6579, 
         5868, 5217, 5180, 6562, 5849, 5181, 5189, 5190}], 
        Line3DBox[{4936, 4887, 5704, 4884, 6382, 4874, 5700, 4873, 6381, 4880,
          5714, 4909, 6388, 4903, 5710, 4902, 6410, 4955, 5735, 4954, 6412, 
         4953, 5734, 6408, 4952, 4972, 5743, 6417, 4971, 4838, 5684, 6360, 
         4837, 5117, 5807, 6463, 5115, 5116, 5822, 6478, 5145, 5137, 5818, 
         6474, 5134, 5816, 6472, 5135, 5171, 6557, 5844, 5170, 5169, 6561, 
         5848, 5179, 5198, 6566, 5853, 5196, 5195, 5202}], 
        Line3DBox[{4938, 4937, 5726, 4888, 6383, 4878, 5701, 4877, 6380, 4879,
          5713, 4908, 6387, 4901, 5709, 4900, 6427, 4957, 5736, 4956, 6409, 
         4951, 5733, 6407, 4950, 4970, 5742, 6416, 4969, 4836, 5683, 6359, 
         4835, 5130, 5813, 6469, 5118, 5119, 5821, 6477, 5144, 5136, 5817, 
         6473, 5132, 5815, 6471, 5133, 5191, 6564, 5851, 5173, 5172, 6560, 
         5847, 5178, 5197, 6565, 5852, 5194, 5193, 5201}], 
        Line3DBox[{4967, 4965, 5740, 4794, 6333, 4782, 5660, 4781, 6332, 4787,
          5662, 4786, 6342, 4777, 5657, 4769, 6327, 4770, 5690, 4855, 6368, 
         4845, 5686, 6362, 4844, 4851, 5698, 6377, 4869, 4870, 5829, 6485, 
         5046, 5044, 5773, 6450, 5029, 5030, 5783, 6460, 5059, 5060, 5784, 
         6461, 5052, 5777, 6454, 5017, 5016, 6549, 5799, 5092, 5090, 6545, 
         5795, 5091, 5113, 6556, 5806, 5106, 5103, 5104}], 
        Line3DBox[{4968, 4966, 5741, 4795, 6334, 4784, 5661, 4783, 6331, 4785,
          5668, 4806, 6340, 4778, 5658, 4771, 6328, 4772, 5691, 4856, 6369, 
         4853, 5688, 6366, 4852, 4868, 5697, 6376, 4867, 4872, 5830, 6486, 
         5047, 5045, 5774, 6451, 5031, 5032, 5781, 6458, 5057, 5051, 5776, 
         6453, 5048, 5775, 6452, 5019, 5018, 6550, 5800, 5094, 5093, 6547, 
         5797, 5099, 5105, 6551, 5801, 5102, 5101, 5109}], 
        Line3DBox[{5186, 5184, 5223, 5862, 6573, 5218, 5220, 5865, 6576, 5209,
          5211, 5858, 6571, 5213, 5162, 6491, 5835, 5160, 6493, 5837, 5157, 
         5155, 6497, 5841, 5152, 5150, 6481, 5825, 5148, 4827, 6355, 5679, 
         4829, 4989, 6433, 5756, 4995, 4993, 6430, 5753, 4983, 6424, 4981, 
         5748, 4979, 6422, 4892, 5707, 4894, 6400, 4941, 5728, 4939, 6398, 
         4917, 5719, 4919, 6393, 4923, 5722, 4925, 4927}]}}}, 
     VertexNormals -> CompressedData["
1:eJztXUuubEkNvIJVoK66Emtg2IM7YgMsAQmmjBn1FnoFqGdsgHkvAPotgkGv
A6R+R4K8stJ2hu3wKb9JqeKe57TDYTvrl+e3f/zLH/70q7e3t3/85u3t1/99
fPzu+9///a///vH59fEhPK5/fwqP2v8v2Tm9HmVnd92pP15c62+1n1b8G6X/
O31p7Wh5Xu1647XqC42f6uF6fCeJSxvfzv8qPgfvhaN1XqWf0364678s+UL1
N60ednxr/7+VZ+316Hytc9Y6H7VxnfKe3QdQ+43ofJ3O0Sz+0XpG7Q+7zp1X
nSNs8wvtD6tOuvp52k/Q9cOi2+y+4Y27i267zSMW/1F1odVP9H6mmodqPJr/
6rnjjZOlD6N5zurb2f3Hyi+LPr36qdKtNg+s80urK+l9FdT7LdbnbH2VvR9m
9x82P9nxKt6s60ZdH73v6oKj+xiKty78d/HzNO9Z87Ern9r4s3nu0udZ7KP7
oTf/LHq2xtXF/52/rPqcdc/Wjd6fZO9/ovqV9DqbJe8suFUXVXnfrWP9fuCq
D/S+pQt++v3Y7v2nGo/yE6XP6D4QPR/vUqd37T9suLUfZv++oCrvrHrL7vOs
PFj5idqnRffzat7Y8ssWb/S+7tSfu9Qvab/6GPwXXMjD9vqn8Xqtfa2d9XoJ
9/Lj9fPUjnT9qT9oflD2tXHt7KPyhY53p1sWP1nwb8j8ia7fqD7j1SeqHrvo
lr2vZvU3rX688zda/1Y9e/tMVD/31q9Vn956j9Kn8P3Ybb60etvFG1W/2Tp5
P8xLtJ9Z8/rVcPT8eoLtd+GBDc/aV7Dg1nhfjR90XaD7BqtOXhW35r1qnzA4
ph4H58zL1Mvgo58+ePc5uPq/87Pr3GHlH5WX7HxJ/pz6+Qyyj+Zn52e2Dld/
pLi0eHQfuB6l9yFRebzeB0brauf/jmft+9jW/KJ4i/ZzrXerPqv7czQufd7E
9nl3Nq7Vv1ZXUXOwi/0sP0/nzoqj8iucGxy+r8jq59X7jWo/d/pZ/d/FFeWn
dc6y8ezVg9efXb60/nj7D3sfqJovVv69vEXrJ4r/7Pyi1rXyHN3P0f5X5aWL
P6c8Z+nhbvXLVkdZ/Gj34VFzORqPmjvRc3NwznqJXne9vkvdRc8jlP2q+VjV
B9D6YdHVqf0v337357/98POP//zl8ePt6z8J/+kr/hMJbvXTGu+XjR2r/Wx/
djyg/DnVCWrdwWPwbJ2z9ZlqPWfXb7X/KJzN/7vq/HQeWe13q8eouAbnxCfv
nDyj98nRflbtt1n6NhvONo+q9Fb9+uKueJd8ZceVNRey3/fI6levpkM2/6P3
D6dzYXTr47O6/7DtT0ZvsfVetb/tksfBBx988MEHH5wfZ9tvdNmn3RUfPu+B
s9U1Gw9sft7V/8EHH3zwwWvx+X7U4BH6YfOzql6681y1rvC7mPX3NuvvJj9d
L/1/lP1TfLX/LvxdwiV7Ox6y74ut9VNrR7of+m69rHircC/PKH609bheV81b
VLxR+tfWu7U+UPGu9Xmqt51eTv1/9b5xinvrGlUX1f0zG5f2A1l2tPsWtK6i
+nCU/9F59NbdXeul2h+tH1n5qp5fqLlgvQ7F287/Kr1p1z3lLVs/0XNk3Zdq
X1ez9LfofKH1zM7nqoNqf1jxqjx2nY/RdVS9z0Hxyd4fuvHPws9d8s7eZ7R9
B+3nTv/Xc+lzBta8SPsBK0/S/2fhYecn6xxkq7sofqL3Dyx926vDKN6y6qI7
Xl3XXeod5U+UHW8eu/Ks3bew9tWb1d0HChfWc9t5CNdLODouq//eeLPjivI/
2/71/B1sX7Kz4t58VekE5f8pb2g7Fx6lB6kvRevtNC/vgv87flY+T+Pd9XOv
btf7vVbVY3ccPWe1fGrXfTrts9VjFzx6H9Jln3MXHqriffU6ugvOnsfqfjL4
PfLIrvOJK0cnXvtWnrPm8rKeuO6K79Z9LPbX15XrulYeJH/W133r69yoelnj
Yq8vlJ9SfrW6XfOVVdfReTmtd1S81vpar9f2h9U+uu68/Fv7m7cfevsqGw+o
eVHd37z15Z1H0XUaVe9V/KP88fKG4qGL/k/xqM9NqnXYbV/RFdfyvDxvw+dp
f7Pq0Du/ouYOqr661WNUfk/9957z8y8yHHU+Ett9dqT7pGj5Yb2/Ept+svUW
zc8XI76riyoeqnAWPVjziMKtunq1+kL12y5zpBrvqgdU3+7SZ9h4Q/G5q69o
frrOr8EHH7yufqv6zF1566ITNj8HH3xwnv5w1/3hq+2ftX4Knxd8ei58TqD+
exZ++vx63J1ro+Xj9Nw5rb+D5+gKZV+yG2XfqitJx2h9au3t6io6XyidaPtF
tD7ZeKvOS3Vdd+3z2nhY8nLqBxv/Ufph7Q/e+rpLXtj5ZI83er5Y+UD1qyoe
dvtCrx6q47rr/uRucwG17s7Oad135Tmrfrvo35ufaj+z9JCV99282T124ZMN
r6prtv7A0p+rdaiNF90nT3lG1503zuq8Z+v/emR9/5atvtj7Ybf5xeY/Sx67
4VF9I0sP3n2Utn9G10UX3Wb7id7nsMeVnN8PNlzwd3v98v8+2XkIdiTc6v+p
fW28UX5GrWvNYxYP0fnV6tAabzQ/3fi3+r/mxXuOyu56q32v/h//v054vWv7
KosOWfXM0p8Hr9Utqz6j9y2j88EZ8W5zR6qju9fX9Rx1Dl5W3qvywr5Ps/qP
XpeFn9Prnxs7Wn2udth1ez3uXgft+oaVf+25yk9nXF36ZzRu1WFUX0Lrx+p/
Vr+16t+6D4net2TVdbb+rX1yx8NuXkT5r50v3nl0Or+i+wzan128Xv2g+DzV
Lcvc9Obdyj9bn8/CUXXHxieLbu+Cd+FTq0NUP4nuS1n5ys6vljfWc2NYzlPt
dg4MC/9Z5wixnOuO0me1ftjOiepS79n6rK7HqnMm57xorP/s9ZV1brmWn6zz
0qv6+eC98Lv2PTaeB7+3Hqped2jP2xRev4t/312/s3N6LqUWt/pl5KHsfTDB
r/L35U7XFfJV9v6klWfU9Re+fl5c3VcHH3xwnn1CFzts/Aw+uAbv8nrh1L52
36/db1+P6zn2u/2/d90ofOcfyv7Ki/X116k/Vn/R5+eg7KBen1bpLSq/KNx7
PnxWvFF12kUn6LjQfz/Ftf3xVG93yW90Xlj6EtrPqHlUrasu+WLJu3Xf5c1v
l7xU79PWOeCdSyy8seWXDUfP951+rPWeld9TnaP1n6TnDwkX/t+HYFe0I8Sl
xnd+nuKodbVxrXzu7FuvP/VTqF+zfasdSW9afqTfWaPzLtQnXJ8SD2g9RNcF
C17F587+3XjuhrPy7+3DWfOiql6q+uFuXe1ckPYD74sd69zMzheLPlF6XnHv
eQve/VL2fiN6/5O9L7Lm12q/eo5n8yzhXc7nqcalPo/SW7ZOgvS/2l37yvH1
0nVa+yse/fmsFJ/1eqFeYX568VP+2XBrvqJ0jsJZ60XLM9r/V9M5Ss9r3tF5
sfqZ9b2arHWtfGTpuWrd7P7m5Vn7dxYevHMKpd/sOkLrOWoeWet+ty7L3GTt
G+zrssWl7SuvypuVn1P72Tysv0uI6tve75l0x637CRadW+2j6wLNz06H0Xqo
0vnd64tVb1n1suunbPyz4af7JVT/7IIf1sXH4DH4w4gveYL5I+Tf7T/q+rvj
Uh7R+T31R3s9Kr9ddSL0XRE/rfco/rVxReVX4i1bV7vvKWl5QPXzqLlwqs/B
MXq7O1411077arWfbPxMXQyekUfrvPP6w1Lvq/9PI57d97T8a/O4xqX10/p9
crb7/UXhy3MxX2j9X8+9983U+rPkM6w/WPn09kmt/r3Xo3mQ1kXPhV1/sPrj
5Q2Nn/LmrSNrv62eg9X+dImrG2/aOj39XUyUzlnq5e46yc5Llzo93W/cRc8r
Lp0fa73vkvW+RdHXo+Ky4qj7TN0Vt+a3+r57UXrw6pxFh7u6y77valWfidZ5
9fnkqHPLo+6Xx8rP4Fg9dPGzy/04ovtw1Hystt89v1H7mar7IFftS6P9eTX/
2far0fu0qtcF1XOTXW/R+88u8Xrx7PlejbP32+71m7U/Z3md3u2+8FX7Z5b5
Ve3n4IMPPvjgnDjb/O2Ov1q8w/Nr+t+Ft+F58MEHH/w18XmfZPBMfPYnObyh
6p2df+F73ev3wj/9XYtLf0fZ74Zfj6f3g9Dyaf3/p/Gi9WO1r41Xq1NvXNE8
DF7DM6qPRfVDaZ3odaPypb3eG1d0P2TDT+NC64dNn8V9Zvv7Nev9F9B1wd5X
UX2yOt71Oinv3vtxaOO12j/V587f7Lq29qksPZzyU6X/3fpZ94e663xnw711
zj5HUHHt7KDv3xHND3q/oeXZuq72+uux6r4S0ThrvbDZZ+ufUfsQEvwjC38U
rbvET2M/6no0zyy8ec+HXO2v/Aj1nK7P0zxKcWXlkQ2vinenNxZ+WHR7V7xb
H+6On85Tb76kdS98nS+n9k/PST6dCyiepfOBvfW18izxv8NRdae1370vTR/j
wnf5Zedfquss/6PsS3mx1mPXfQXb9/rYzsFgO+8o6/uZ0XjU906/gNftgmfH
K/GMwq35tdph/d5y9rmp3c4XYssjm//sfTK6P1Th3ris9RXND1t/Y5uzgw/+
v3j2Odh3iYstX138H3zwwacPTFy+uLR2hPdL1/d518+RttejcOu6WX5ej6jv
i0pxoPxfP7812il73z7785cuuPS5Npuf1fphiUsbrzePl32hjo/tdMsXi//d
eMuKq/pzZ6FOyvY5VhzlJ5udHX49Rv9Ox7ofQ+3fDvdpsHWzeNbyyFJ3r1bX
aPva+jntD1r7Xn+89c6qZ8k/FvvW513q1Gvfykt1XOj5WK1nL59o3WbHVd33
Zp8Qy3O1PlnyyDZftH+31kc1z1363s10+MGKP4y41r7AR1hcj+b2rXyu/qw8
767P4mfnZ7XOq3X7anh1HXXD0TqM4p+9rqPsW/lE8a+1s5sLWvuo609/z56t
qx3PzyWu0/xa9Yy+/rHEpd1voObpbl0tn1o72nhP6y67n2t1e8oze3+umlM7
XaH7xl3xqn0Fuh5P49XykPU92Ojfs7PdV6jr7zHZvl9drYfuOPvvkdG/747W
FYqHu/alLnGx5Yutfk/rCHW+TXRc0edIZJ1ToY2reh4NPvjggw8+eAYuvN+y
vj/y6VF4X//T/5Ps7PD18w2tP7vnp/5449rxJl1/6r+WH6+f0TiLP9fzq47m
PJlaP1FxsfHchc/ucWW///AfBAIs0w==
      "]], {
    DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 1}, DisplayFunction :> 
     Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]]}, PlotRange -> {{-10, 10}, {-10, 10}, {-10, 10}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"x", "+", "y", "+", "z"}], "\[LongEqual]", "1"}], 
       RowBox[{
         RowBox[{"x", "+", "y", "-", "z"}], "\[LongEqual]", "1"}], 
       RowBox[{"x", "\[LongEqual]", "y"}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757260811130456*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"0e77ff25-9caf-458f-9130-ec82af83ef37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{"z", "\[Rule]", "0"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7572608111324883`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"16757dfe-a355-4b64-b162-100e8110af75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox["k", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "k"}], ")"}]}]]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"4", "+", 
     FractionBox["4", "k"]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7574183937191257`*^9, 3.7574184341891947`*^9}, {
  3.757418521694728*^9, 3.757418523272423*^9}, {3.757418591410692*^9, 
  3.7574185999811597`*^9}, {3.7574186430748615`*^9, 3.7574186754233255`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"490bd331-42ea-43df-b821-858b8d3c18f6"],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellChangeTimes->{{3.757418405237136*^9, 3.7574184345203085`*^9}, 
   3.7574186003584995`*^9, {3.7574186615499153`*^9, 3.757418677054858*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"808af526-8d98-4947-b3c0-ab9449eb7158"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"kx", "+", "y"}], 
           RowBox[{"=", 
            RowBox[{"-", "2"}]}]},
          {
           RowBox[{
            RowBox[{"2", "x"}], "-", 
            RowBox[{"2", "y"}]}], 
           RowBox[{"=", "4"}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "\[DoubleRightArrow]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "44490bfe-c06d-4efa-9598-50de2ddfa474"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"k", "1", 
        RowBox[{"-", "2"}]},
       {"2", 
        RowBox[{"-", "2"}], "4"}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     FractionBox["1", "k"], 
     SubscriptBox["R", "1"]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"2", 
        RowBox[{"-", "2"}], "4"}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     SubscriptBox["R", "2"], "-", 
     RowBox[{"2", 
      SubscriptBox["R", "1"]}]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "k"}], ")"}]}], "k"]}], 
        RowBox[{"4", "+", 
         FractionBox["4", "k"]}]}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d7520c05-a8db-441b-a1ca-c90bc1403b4d"],
 "\[DoubleRightArrow]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["k", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "k"}], ")"}]}]]}], 
     SubscriptBox["R", "2"]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", 
        FractionBox["1", "k"], 
        RowBox[{"-", 
         FractionBox["2", "k"]}]},
       {"0", "1", 
        RowBox[{"-", "2"}]}
      }], ")"}], "\[DoubleRightArrow]", 
    RowBox[{
     SubscriptBox["R", "1"], "-", 
     RowBox[{
      FractionBox["1", "k"], 
      SubscriptBox["R", "2"]}]}], "\[DoubleRightArrow]", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", 
        RowBox[{"-", "2"}]}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "960621b2-be4e-42fa-aebb-59f9874db38a"]
}], "Text",
 CellChangeTimes->{{3.757418186141907*^9, 3.7574183846524935`*^9}, {
  3.75741841610295*^9, 3.7574185023030567`*^9}, {3.7574185743102336`*^9, 
  3.7574185743102336`*^9}, {3.757418689376557*^9, 3.7574187392830534`*^9}, {
  3.757418777953926*^9, 
  3.7574187876097884`*^9}},ExpressionUUID->"006ce9ab-296c-4e61-9291-\
0719f5261d79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", GridBox[{
      {"k", "1", 
       RowBox[{"-", "2"}]},
      {"2", 
       RowBox[{"-", "2"}], "4"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowReduce", "[", "A", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7574170598966694`*^9, 3.7574171104441047`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"33c4add3-7412-4f35-8600-2ded349fbcda"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7574170883891153`*^9, 3.757417111804984*^9}},
 CellLabel->
  "Out[8]//MatrixForm=",ExpressionUUID->"6657a037-292b-43b5-96d5-\
ebadf124c2e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"k", "*", "x"}], "+", "y"}], "\[Equal]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "-", 
       RowBox[{"2", "y"}]}], "\[Equal]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.757417881220991*^9, 3.7574179263116326`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"f6466e9c-8114-4aef-8cdf-eacfc344dbb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "0"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "2"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7574179085828342`*^9, 3.7574179267134066`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"96205366-390a-4b6d-baff-6b342dd08667"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xMin", "=", 
   RowBox[{"-", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"k", "*", "x"}], "+", "y"}], "\[Equal]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "-", 
       RowBox[{"2", "y"}]}], "\[Equal]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.757417951959478*^9, 3.7574179882353225`*^9}, {
  3.7574180768076677`*^9, 3.7574181060132113`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3c634a36-ed45-4e7b-84d5-5a49e211ea3a"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJx0nXk4ld33/80kGjVoTiWNFGnUkSalWYMGqTQPSCqNFM2j0oRUmhNNlCTn
pEIloSQyk8yZZ873+X1+3mu79rnO88+5npfV2muvve5973sPa/ddY7tgnZyM
jIyOuoyM/H+/JSN7OUzICxOs/njsaxtXGVGu4zytUd2SBTKpOf4NXUXETZsc
z+vvTSfupvMuSGUnk4/ZmR47uU0yyacv3XXtXHkYyV8YWz4jt7+M6Kmh3/QZ
WiKShx7wPu8+WXtVpQmWGVVP7qAoLxozZF2MT/tcwaxQ7XsKKrnENfodHtYo
m0562hS5Tdh7RpbsgfypZ2tEBXflJOwEh/7H7tHTF5mlk/2wB3rOdzk3cNBH
SQ550ZNBUe9uBJL+QZHpm4a/bhKucp0WmPAvQgj5ofW7en6NbCSuop4++9K9
NEGsh55/Z6UGYfK5s0MPyqSTPLipzT8HTYN4IfTbvT81bbIDk4efYSfqtSrm
vYOKWyDZCe68X/5A5U1/4k1qscc6tS4V3NQtn3o2P0IIOyEPrjtcPXbLrwYh
5GU8utma9blPeta42t5fql5F7X5eyfLyjE6ypB/8bOVgxc3rZJl8bZSww807
pCesXj3iett6Jp9ds+NkoCzxeR0NFfbUhQvhH+iBneCPmt6elJ9bKaj5tWFQ
1+HxxKleZ8xyNH5/JQ479WQrZhe8FglhD/wM/RQn/VPGHe3/k/jTpYGaA94w
edPK/luG9fpJ8mj3m97rr6tVpxEXBcVFXAoRkZ6RO5x3VJhIym8cXx8yrbJJ
iDiE/AbNKx7HLomJw2/al2a+PPdQTPEGDj1Ur2b9fp2KftyrlxXxHPWCHu/6
fzLnzzUK9LZ+zy/47+83D37ZoqSYLzTp/8dmsWK9oOHSwG/yMvnCpx3OH7Fx
yhFuXtj3plgsJu7V5/uTNPUs4tAjc3X7t37tcklP1MILz273zSb9eC6OmBku
9T+qQPEMO9GOQStVNX++SCOO5wX9APyG55TvN0ZHfCuYrlwn4R9wlPugm/zx
E8OThOmP5r9rq1DN4rBZHnyOTFP8UcUy4hPnrto55Wi1kH/uRqy+7aqaW096
8Lyj39O5cvPluCsFgpK76/8LmJ/Eocd47Zcdiy/FEoeePnMOKbafGUUcz9FN
h9dxfnkRxNEeiJMz38MzHynKEY8ZaxPbySOM/Ex6mu03cB875mF1HXE8d/AD
eO63aXNi1eOIQ7+p+YHWAW2ShcXB9j9U5MqIw2/gnf+N69RWtYH4bKtDx41c
y5g9zXzh3/YdxsmXkB6Za320UjRFZD/pb7Yf7cuXOy2hpMlYsZLaRcfm8t4g
32zBgsD1wZ2OKpL/ET/gJfL7TTQci4g7/2lVZrdBieTRviq79KdYhspLcNdx
CpHRPxWoHdvl/QqoMP8rGPWoXYxYrMzat/m9iXLBUS7kjzpO8FSzrhQ421iH
mQhuUH+L+rq3bX/YrTyT5OFP6AeneGi2U1b8w8z4nyLJgx98f/fbM2VJedhZ
/GX7+8gxtYKu1tvfd1JKIg49QUYX772ujCcOPbAH8eA44J373FYNwhX3jRa7
mGdSP7MtWjfp0xEZ0f6T5iFfPf8QhzzsgZ7owFFT2+WJiZ/vvLbPD6dS0oNy
oaeXqjivQEleBPmh3Y+MyLxeTFyhbfag0iF/qX+DHrQL+GPdgEWajWLq30yr
mzosTvpDdsqkv0r0088meej/NTd+xXTDZLInZmp0rfpxRZGBplWg4+8MkgeH
/eBoT9gPPRqevj97+ioShz2Qt3MarjikKon8hnoZh/XTSDmSQBx2hlz/p+W1
JYt4Z3+tna2Vq8nPJ28o6rx6Wi7RLi4693U9MipJHvaj33hh6LooQqGM5MF3
jtJIyd5XQfzAM9PRBzrUkDz6Q/QD4OleU6udd34njvcO9Owalz9x1eQ6ifcR
6vUscsz81p5lxM9kfd06yq6M9MtMEMx1aRVO+lGvyGkBh2Q6J5L94KLPM02H
zwgjefhH77Xc2MvrfpA8OPpzcLSXcyflwzmbPhNHPJx3Ph645Ugc2Q/5edsK
51wP/EEc8qKj9cfHD44mPWhfvC92Dgryc75YR/LgO5QXnnqnX0/yfZ5mWM6d
Gkt6ED+Qt//zb6Pcj3rGO1h93+MWTH6AnlUu5knR80OJUxxub99/Uvsg4rw9
u816xAjKa6m+4JC3iB4vX3hVLMytu35FeX0iPRf88zKmlYlWjwnsuVvQuKvV
9pwSkke7J930f7ZDoZT4X6fwkNc5pcQnDLk35bdnHslf3bZJq2s2iyteD/iY
wmnX+07KF25+tqq3oyHjiM+zmTPa/VGoIu4QGvzKbk428QCP/WXFUwol5GFn
1IEh4R8eFgj7lNWeG++QTxzx6dDmVey8tQXUnyAOJ75Ufr3lUQlxyOO5gJ6e
rwN/d15cS1zPavauVZZFJP9z8mvZn8sqSQ/vB/Dvbbd4JF6tEh5drNNOwbqa
9PP1gnzgnW9LXWxKaZwJ7mDcY0tv+0Jh591WF7eK68lvGAdCHrwwW/7m29Pp
NF7AeAPyKBfjB14Pxi3gd7qOtPzVMYeeC76fAZ9yx8G/fe5f4oe77PQOHlEl
0V/R987mP3n2PTPJb2crxI0afVic+Jfr/DzRVEr6YQ/kwVdFNWZkJDOOcSzk
f1q/H+qt2yR4qm1ac1lPJEB7ob4xFk9sbqZFCHuOXqizcWQp+Q18Vdt2/zZ0
KCIOPa6fflXNqiohPTJeCfHpl4IoHiAf2XNextOGBKqXx/Urq1rdqCY9iCvo
ARfP7uYpGlJB/Gbh5hOGD36TvPaqXZMLZv43zvp+Q3dDn2QB4hztCz0j8t8t
iQ6sIT2Qz1ybrq45oJrkH+jpRwdsSCI9C3oeMhj7ppb8gHpBPqjXaqsr/skS
9RXN21lxzzqG/Bwd0aPL0n6sXNhf5zpQ5f7FJoHDpzPbJ2nkEqfxVLP8KMUH
Sra7y4lD/q/x7s5uNZVCLblet9cuKyGOfg/xAB52/+Dxx08ViOuc7DbP/1oB
yXedPmLRvilFJI9+Ffof/bh7d6BaKXHoAQ/6N293SCtlUbdAP5Uh3WtJD/wJ
/5P9sjp2G1XrhIYzzpRvulxCfoY89IMLb7R1rJ1ZTzwo6Wo3zX8p1C+hXeC3
lBl1Kx2tWTygXIzroKfk7ecl1bPeUbly7XK63CguIz14f6UWH5pw+WQZ6cH7
Dv0hOOShH3qirB5f81oiR9w0SnTVqjKd9Az2/hD0cH05xS3vB3De/ptjvY5M
nvKJykV94bc1Ciqrh/WoJD8429me0Bh9gfxmk37a9s3wCpIHn1O8MLsyrErg
8cH1wvA2VWTnXl+r+Mn6dcRRrpLNxKABaTWCswHWTqPa1ZM82h18ej+j7DH7
ZIlX9f8i+yemmvTc2326QC2iWkD9UHN8Bjv7hZv/rSMO/agX9G/ebDtMeY8i
8eJNdz7MMKknPSgXeoKG3+z5p1qOOOoFP+O9gzhHu7SJumzx+FsTyfNxDvlP
XYszRfKNrP9JH3CnLLhYor+CPfMtox4kTFUm+6Hffdz3QSN92HxA/40vh/0b
WyjRb6Dcq/unab/YU0McemYEdTKMr2Pf01Udr9kp9q0he+akjRTuvdFA/kS7
QB68rjx7avW+RqFWR6WHz1qLyX5eHr/w52WbLe3C71WQnXw7gj+evst/dbws
cZ3HB+231eaT/vBxV7XPjSsjebTv+h0dHr3uVkH1BYceufTSic5WFVQuniOl
/sEuTb3KqX/D+xd6wBGfKBf2qD4+PSy7rpL8g3In/tFv9cSnnDj0oN+Af8Bh
J+YBZA4nau4wvC9A/IAbT1NVnR94R0Dx3zx/i/lGeu6a52l5ju/3jV0dd85o
n0R2EF8S0d1eHE/ymI8S7REu/LYkiuTBjWM1Xn+vjCAOO52vJ/zQXH+DOOav
YA/sx7hIJtri32ZxOD0v4M4D/M1tr4cJtbR0oofq1pKdmCeEHnCsR4Bj3oaX
h/0l/j2cd12PpfqiPWrGmt5cVJ8p0U7QD3nMt0A/5DHfAt6/r3b6wa1FZCfm
LTdaF18+b1BM+jHvhPiEH/o8j/M4nvmVxuGQhx7Ig7uHb/1rY1xMHPNdkIed
9F2Wlzp5dg8RvV9gp8wL7dY9A7JJD+bHUC9w+HOe9psbwTd+Esc6BearwSnO
R02fkfjan+SxToE4cc71XbHwdAHp59uR5kEyy8bPt/wriP45ccKPaZVUL5Rr
l3bykPrWXHrfoR8Imud0fM3QQuJ4rtNTLQdtu1NI71/ID0/uMHzj4RLi/DwS
xofgovrp77VW5JE8+gfIg687+6v/ubtKxGXaHk/RSrwkIU/jdvPEv+oL5Bm/
fnyE4vwvVC9t26sb19uU0DgEvOHCdIFDRSFx6K+x7v5PryGPjT+b/Qr9GN/y
/RW+R57+OeNuaZhEzy841ssgj3l1tAvkMV8NjvjEPDDPqVzroRn+HeKEmFeE
f1CvZGfFEzkvcsjP/Lwpvh/tFmzqM7pLsvDp+7orVydnkR7Iq3zz0nrZJZPm
qxGHQXF5rTc15LH1ju41recd/E58s6VVmuIitk602z/81nFxPc23d437Exti
80PwfuuQyV3EVcRl1px8ktwnkeQxL4dyIY95OXDIw56Sk4c7TTcPI3nqV9eO
HVanEU520vM4/ZrxofIAIbiucb5wkb4srTf1UM6fbayXK8TziO9NyNP7ImHm
5sL7KcJ2Q85n320qpXLxHgHf6vRe9mNAI/lH8fws4YyxtULMG6C/Qr3QXuiH
US9wnU4C+dM7skgeetZu0og9cecPyWN+A/rXX+rzLMWhgvxPfl5xb9gL9zLS
D3nYD3nYA475Rt5+zN/yejAvyrcjrUs65JV9W3FbCPvpPfs0SK4s5a4Q8r7l
x5//9ZSj9oL8UPWFaq/6MQ55tJfdLvlT61d/IXnwXx+nJPaMi6F2pPZdlPfS
yDWeuL927/VHfWUl9GO9D+0L/Ta3BvZ31WiUeC7w3jHVvRldMjWR7AHXOTtG
b+nVVNLvrRj1zq9RieIQ8j4z3JWGvlUkXnl0SLacJtMDDvvvnllh9mi/gkQ8
P4ztf15ngryEPPnfWnukxWo/4cFuqbtuRZVSvOE9DnnwkYs7/lMuKiGO+UbI
R2kuXWEzJp/iDdz0Q8XEszcLSA/WlWAn5B8ZqY8YalRK3OB2pzepPQpJPvKN
TMjf6dkkD76ido/n1Y2lQsy/0TpXs53gWMd3nqkWeOFYOunBOpFXU+Xnawnp
9FzAftiD+S7eP9ATsuHHEaXiXIHrg7WLNB1zqL7Qb1GwdO0X5Szi6MfVhlWG
TVDJJTvpO6+5XPCjddfnvDnaSHyW5ZC9F2uzSD849CslapjWbPnvu/RLstex
60oivEfw/NI8dPP7wq6vSeYesyzBp7FRK22cFYmj/4E89Dh3FL9SeZtD8njv
8/phP/oZyIMnn7N8/TMzQ3Ba6W3ljY2FVF/av2EuM2Zs+l9qF+hHfcHdp7Q2
EPXIIY75TF4e6y/8+wh+UysK/PbmYD4917DH7vbtSzq2BawfbuYeuVfeFj4t
EfTqpHpE3Y1xxAnqi+d3VerMK7WHYoT/rh58MkpGnvjVkX3WVT+PE0J+4P2B
d/coKFC/BPkHorIm09PyxCFP40m3oHArxV8kD97Oa9+yz9q/aVyA/hDjZ+gB
P784+Jt24zuSp37Dpfro9+dXSJ7nKJfG1RdOpJke/EB68It+GP8PP+hlpXY2
NvlK+yWgJ+iUTcmoMbkkj34PfuhcoyfT6CRD5aZ7zdrx4gbjg5PeWnTVkJeQ
R7lkj/2QyxV9mB7ID1d8FlOmJkP2o1+FHvKz5dCAW2PSyA80Pqm/dK9LoBfZ
T+OK5n1f8CeN/wtqfmf1CRJAD31PDYwsUPQJpv4H9h//F66v458lHCSKE34V
lVM5mMdG3IJX9Lq4dsWSHHovXK+4phc9m8lrPHTzey3IJHnMtzhG237uNC+H
OOZz0F54r9F6YjPHew3yV9OfOd8+X0h6MP+M5xT8ceEt04sR5cRhJ+ShH/IB
bhZvLnWQEeH5pX5rftqQK9syqb7UPxlonh7hUSg8bz7sfOL9LPInbw+4l4+B
9dkRBcIehp29XXQKiMNvkO9nbbWqfgrjsBPvZZ4jnvl6Qb+PgcPo232qKK7Q
7znneKQ/GBMtQBzSem6E1sQFs2MpfrB+inEL5LFOCj6sbavxiWfENO7l5Wld
W8ZJ/rV1KOnHezAo+cG6gecTSB48Mnrd+JeyvynOaX1t6+zJ002SSQ/tH+De
F1gnRb8NeeyXAIc8yj3/Oq1jRugPkqf9DAm6D3LGZwtM35fNS08R03scemA/
vRe2LOyhvjyTOPZ1QH6u3rbOmaVi6v/x3oE8eEBxZTfBqL/EaX5sbLcsv983
KS6xvgz/o15YHwe/5LjGcftt5k/YAz2o17x1qtOyzsQRp30sM1xLZbYnEsc4
n9eDuMK8GewBL1HLjqzc9VmQO+xG8ZKmBLbOje90Q9En717s/YPveguzl+l+
B2Iozml9Z0y3vWl+ccQh3+7MfEHvg/ES7xO7AY7BSuO/kjz1f837svA+hX5w
vE+hHxzPI/S8m+2qMmZ7jRDzqBineRbHvrIrrRNi3hUc/Q/ksd8MHPITOyhs
WPS7STAjTmPXctk6Ia1/NY9/0G+D+9w5PmrcjSbSg/l5Xh7z7bw9mD8H//vY
cKm4pJL0g8PP8CfmhSyapk5zmJhInPbbFDYaJi/7Qu9r6v+b/Qnu1jrhi7e2
DPkZ72Xod97XSu+YB5MHt7PPXWi89wNxaq9Yj7vKde+I0z6N5n164GhHixXe
OXXD2fsC+me3sy7Q7FktxDwS70/ws8+/WPkOq2f+b+b5wwev3mNeRRz+bLOg
/Lmwf63ALMPQ82f/CiHGz9Cvrpb3MNyunPSQ/5vfU5CfM7ldltr4JrIH68vQ
A3nMd0EP5KHHe9r5PR0fVAt+updbGPnVEMd3E+wHz3TLbBpkU04c6878dxbW
0/nvkcjhh+3PP05g+zOfq5pdHFoqxPcF5APcPS8/Si8kDnmDLZ51Z0pKyB7e
P5i35O2BnqY+fw1VPtZSPCMeaN9XgvqeBO8U4vRebo5PzA/Qexn72JvnlyDv
HLgs+2nWXfq+xjhH5urksmVr/YjTPq7m/UKYTyD5Zo75JciL1N8meD9/QXqo
XA31UY7Wt4nzzx3mVXiOeRWU6yi+URXwNYb8wNuD+RDaT9jMMU8Ie3BeAOME
2j92N+uxergX2YnnV7RDeESQdZM47ddaazrH6+MV4vRccxz6dSo+BxeeTaV+
CfbjvYz4wXcZ3r/gqRUeXknHS4hjnRryFSvP6WrPlxPhOeX1gD9/WeBZXllG
4w30AysX7ZgR7lZG8uDYTwt5rLOT/mvbPM4vbaD+AXGOekEPOPSgXqaTTl1/
/aSQOPTI7etxOtahhJ5r7CtAuaIBuebLHyqQnfz3LLiWrPe+yFUlxLFPA/Kn
C40dz8sqi/Ae5PWA52/bo+wzqYzGG3g/Yt875MH9kxZe3KdVQfJYD4X+7HXl
myZ7ypM87x+UG6r7WemNfwVxrLdCHvohj/qCww8G7Zz6ys0rIjvhf4O50RGD
J+ZRu6O/wvjw07NWCyeYydN8CzjsAT99OkUrZmcL3rxuws+3oP/nx5/Qs8L+
iub2toXU7uChNpp+WV6sXoiT5PbCrUeU8qle4CE6R9JSxIUUh/Az+vOd53pv
eLi9UUj7HJr7bdgDLhc6/NqSRw3Esb8CesChf3hDyrWJRnWClz5vvu6exOxH
u+N9h/024LCTX+eHfvz/Tyenq3ZdxIKHT2a96LBTluyEPfA/7Omm2vfDky8s
riDvsbnWzvNHjWBwxJrlBqXs/AOvh/Y1TJk3/HxpHdmPfS+IQ6/G8uQCjUqq
LzjkwU8u/H7b1bBCcEv/aeQlI7ZeBHm0I62HjzvjMeA/f9N3U/P+E8grbHyq
um27ItWL1wNuP12v9yJ59ryAHxRb6k19xPYpoFz0e7NkJ4V71zbQOJlvd3DY
CY79FbDH1KPct9s3WZIHNy43N94vn8nW3Zq/m3jOn985cfb75QSZCiF/Xg8c
8rwe/rwh5MGxr3LvwecuqXLs+47n/HlDcOjhy6XzOxznzwFBD39OBJw/9wH7
aT48bZySvmKMgD8Hx3Np8jT/z3HMs/Fcmn8gz9cX83I8hzyvh9ZNuHL584Nb
bNzs/ig0CfnzieA07uX0SNPPn5OCHpr/5+SlxSd/PhQc5T7YdbJxpUIhrRdD
nufwM+2LNsozv9VYJLH/ARzyqgdWpdyUK6f90iiX59L0SLMT9eU5nZvjOL/f
GPr5/R7g0MPbye/zwToL7Oe5NHlpccifb0IcgvPy/LknyIPz7S7t+YV+ntM+
4DFuty5mPxHy55d5zp9/HK4bNHyXC9v3wnPI83r4c8GQB1fJPK5gNecXfY9A
P8+hn+fQwz9f/DlWcP7cKzh/nh2cPzcNzp8nnZ43+8rOOmYnz6XVF/p5Tud5
Ob/x54vB+fO/KJc/lwouTV5aPEAPz+l8Omc/4pDn/DlK2M+fDwWXFreIf55L
0yNNnj9vjvYF5+2Xpoc/Bwp/8ud8wfnzp+DQw5dL5385ef5cMOoLbiNzxcNF
vlHivADP8V1P76uSDzft21kK+HME4JDn9SBOeHn+PEtMXZJx64LvQolzH82c
PycODj18uYhDnvP7S6GH398FDnnefsiHhtaP7yBfI2Dr2v/fHp5Lk4d+nmMe
g+fS/EP75Ln6Yt6G5/x5FuiRJo95G57z+6jhH8jzHPJ8vVAuLw/Oy0uLT2l+
kBb/eB55PZDnOeR5e6RxPNe8nyHPc2ny0uzn98fCTnBeHvp5eXBenv9uhjz+
n68vOG8/OK8f70deXhqXVl9pzxH08Bx6eC6t3aWNS/n9zxhngvPyaHdeHpyX
R7vwHPbx41iUy3Po58erkOe5NDthD68f/uT1SBtv8/uiIQ/Oxwl/LgbxII1L
66/4+Qi0rzQO/XycSOP8eSLYA/08l9Yf0nkNzm/wP+83ae1C52E4eXC+faU9
17SvmBuHoL48h/38+ITW7zgOeV4Pv58E8uC8vDQ7af2X00PrxRync+vcuE4a
59eRMe7i153BaR2E08OfK8f4UxqXph/yGyv2Cjro5Aj5fCM8x/Oe98bi4F6N
EipPGufX+4xXv1Xfs0+J5HkOeb5cfp8e5KVxafZL04945u3n91tCv7TxNsYV
POf37SB++P1R4JDn9fD7giBP+4u4eSE8Lzzn1+kQJ3yeBHDI83EojVO9uHjj
1xnBKR8Fp4dfV4U8rXty8tSfcPLS6kXnZTj/4HnhuTR5xAsfP6gvz1FfPq4g
z3PI83r4fWiQB+fjHPbzHP7hOezhOezhOcrl7eT3v8FOcF4P+Z+Tl8al1Uta
u0jj0vRLk6d44OThT15eGsd4hufS+jfI8/XF+Jbn/Lke6JEmj+9Q3h7I81xa
fyutffH9y+vhzynATmlcmp3g/DgH7cVz/rw5xj/8eV5waeMu/hw05Pnz7xhH
8ed2wflz9+DQw4/zpXE+LwrmdSHPcz7/AOznz8eB43nhy5XGpdUX8rw/US7P
+bwQ0AN5vlz+PCPqC3t4DnlejzR7EOe8PeC8PJ9/A/6UxqGHt0daudL0oH15
eXBeP/Tw/pHGpdWXz8eFdQo+3xE42pfn0t6/9B7kOOzh3/v8PitwyPPrLLCH
59LiR5r9lD+K08OfS4Uefp8qxjOwkx//SKsvjTc4/0hrF2l+gN94zucFgh5p
8iiX59L8w+dtg35pHPrvNI2wE4t/07nsC7+vvtdq914APnDAwEvfHNh61tb/
jev/0rnsHJ/c3oqq6cS1SzwKVVvk+wUPkj3y+M8HST0ot2pUfp/PjwKJl9xs
jDvzieXpBUe7PN5fdvb+xHiyv9318Hz3OyyfMPha1zb3/E+zdbSQ+Uecm8RC
gXmCVg9Ta7Z+Af7gtek1z45snh/c78WM4JjnbD3ltG+qlYxMpDBd59oqh3i2
Xg9uad3Y+l04y98LPfECY4Xq92z9DvKoV0awR4WXoJJ4WYb8qxEt8sqCv487
N2jsZLZOBP1t9Aoan7TI8wxec+6FueYjlocWXGvKlcykKrYeB/1ol12rJ0/9
pPmTuEfk7/SYFvl14ef1cf4/ElvkWwYXpi63VtvF1vHRjgEXHYcNP6Ig4Yc+
vQvaVb9i64awE/Z0/SCck3M9nXj7uAUXlzrISMTby+9afce3qpOo18CB//yX
ZbP8ruANWwV17cpZ3lTwnn8y5tXLsvwp0J/Uo9PAJevYdzQ4zQMMjhil6VJE
cSic39904Q+WRxQ8UGW/yt4QeQk96Neifjgv8tlcSfVNOOu0z12O7YeCHjyP
/vae54Y8KCBeo26YaVnIvuvBYefuU6/uP59aS7zXkLNzhiiw73rYQ/PA2zdP
3SsvIwI3dA3b2i6X5cmEHrwf17sr70uuFhMPyOtdu/Moy+cJHhmecCfdn+Xt
BH92yVUwaxrL9wiueqRT4MnOLJ8k7LlQ/e7vB4cyCQ57Plt8HxDiU0Z66Bx3
cte2PY9XENeq1Lik/rdSop/0LL7aJu8ly5NJ/YPrzt9jElm+RPCPs0w+qo9n
eRfBw2+oHtrgxfI0gqMfMOvt/95ZyPyGcUKBfWs/n1eK5J9/m1ae8ChheUHB
87KPqHSfy8aB739ofBCLWV5E1ye5M3QLSoXg22Nig189YvkPweG3L0FXvz+Y
mS+cJ+4aJBZXEp8xKfiUycJs4m1TXit+n8XyGYLT/pB5f5eHPCsg/Yirvu37
xc/yrhKmDOr5WCyuI/l9g5519HTNIa62JSzNZDDLRw1O63rmCh1rHQuJw069
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
eq/a1vvjifP5jsD33T35ZNDheOFZ9/CRdmNFxPk8M7RefW3v7Qx1dt4d/WLp
bMdnvdrkUv4TyFsmDEixc8oRyo09GdD5DFvv5e9TpnWVVSaT2i6KF+a0ujvU
91cacT7PEnhgz8CxTX/SBEuez62SncvWCfm8WKR/v7bh5Z2Vgq3ZvhdHtoom
zufxQ/uGrln7ZsiGAsGJw/aZZ3azdST63jl3fNBL25/EoSf88vsfZe8iJOaN
3EZ1WprVLYo4xld6ow7rBQWFkT2Ul8BH53SfIcx+lPvN58/R4k5xtC4H/ZNa
ib7/GB1PnM+DhPknw7oh3TTbNAjeJ5/Uf9ohmTjlJ2k/6NPLESIql8+/BP2m
a+9vfKNeJkg7mHRi7rgk4nz+NMxLXdg9OLTfkiJBTWZerdylbOLw2/A7pRfV
lO5QnMN++X4haknjvSXm59Be0PNsRKSHV49aQdXNI9oZ39OIwx6DgQciN6XE
S86T6bwqMMxLJI5yLbPKFHTr02jejj9HAy5f3P60R5GY4hlx3l88t3xVnVjY
78WVsUfMM+m5QL/n8dCgoGHQX5IHP2X/zu9GVRrJ4/1ysb/xwLoR2SQP/jBA
MGOmIdvXgPfO1J7tt1YmZrD9INx5K9KvtUalj6+iaKKsY0ZBOdtvRfdJHnK4
caouieoLO/sfchJNP5FAHPaMXdT0pMQhip5fyhPeXC7ixChskqbMkQphUGR8
t9dDwkke/bn5+Peup9eGEYf/h2pXr/ZpsZ+L3oNty7VKbX4Qh/zv+ZWLO+z6
zOZZm/1gl9dq2MKKCAG/vn3/5LFfhaOjidN5hMnvmoa9CSZ7wAe+6+G3XT+I
zZcjz3bz+wh8/q+YyMaPYuHQXR+7qK5PFPDr9o829v3mG/SDzR/DztNvHg+Z
HUv2wP/FIxS7jj4eJ+DX7XFuEfqN1rjlBueUCgXCHwb2OSXE0S6Qh57zNyy+
yU3NF640F2e8/Mv2kfHnJcHvTrbrsn1+trBwRuaxpjFMD/r59H5KEyc65FO5
dN/0ufhAlYclFG/8OVzID67XX6+5uFYY5XjuhcyaApLnz+dSHHZOrRZeZ/WC
fJxyt5dFl6uE+fr/ZBSWVhJHvexaJe5VsmbrhLAf9QVvN2Gre8TDAuLQs3f3
lMdtt5XSexB8+PthB8JsC4nDzvDHMxbrnEsXLnsbYndIvoE43neoF9r97e3D
I13L/grXhHYUHOqZQ5w/V4h4m56x6uunMZnkB8iL3ukU789Ol5if2z3L+Pby
8hKh3kTfL6MHNxHn86Rh/FUXo/CmqUe1sM4koufHqWwel78XG+PZEcJ2hTJ6
pcLXy2uO+7yqZeuunH6Ua2ucfl1DR3Iet+uDvTPntCmSOI81p9PYtc7llcLP
KzW8np9uIs6f58V3Q/vcnDddFZRFWnNrBGMWlwj4fdbHQxe8mtSd1ZfP8wb9
B3u30zqjUCfs6zfIfG+nWuJ8Hjboudh+4zPbHeVkD+rl7zPLot/0euHNoM5h
Hd1LiPPn5aFfJnbvothKsVDkP8f736JK4ugfnq9JX2F8tIw4f04f9pQM2zky
YUWDcH5t/9Tr+WXE+fP+sGeIroGFnmalMOpodP84j2pqL/5cPHj22Z5Jq57V
CEfHWt3OHFJBeuh86+wjSwysy0mejx/Mz6m6Vb+03SUr+tWqeOj8XzXE+TxR
+P6Tc+je069CLLzY9NUlIKKJOK8f7d5zWMq8Jw0NQsckGXfLGsZ5/6NcU99e
fTvuYOMIyFe1Hej7Yge7hx3lbvpkaP+2vE5i3nFJm5w71TsaharuYZb7rjQQ
5/0P/SYKtzL/xsiKTnmfTb53q4I4374oVzXoSu9O1+VFm/Mzwjd1qiCO98s1
X7v5SoZlpAc8+rmhWmxtqcS++/33Xta1fldN8rDT4G7B3A1D60ge/OReo1Mv
Qpg9sDPjlEd+bEUl1Rfldmt1s43V9XKJ/ft0by/Gk0b/Vmn+ZfeVgwfvudJl
VUUicYwbN87ODOrQnd2fDv7KVjn9zb57xKHHr+GRw8iMNMFem485qh1ridO9
TifNl3qYFRHn7+Om7xdd3y6v2kVTvNF3ZWnAzvM6UVQu+OITmzvedoql9XPY
WRd79NyCNd7EIV867IRANTqCyoU9GRFzJltdZ/d3Q174eEFnzz0/BQHq39IW
ryggzud5pvXbkJAhtz/4CWYEPSvc7VRCzynaV6++KWLOjULiaN98tXsHVusU
0vPO5+uAvGul1UzLajZ+Bo8alr3o+C0l0eKeG8MXL8kjzt+LDf0zV8/ebDZX
XnSuT8DvVRsZ5/NpoH9LeFhtFm0uJ5qgr3u6YXMJO//aLL9ghY397eJC4ii3
9wt3haiqPOL8uAv9bfg0i0Wlvgqi/fftnK79936h8xPNenbmvvuZYFQkcd4X
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
bw/8/wC7FtMt
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJwl1nuQzlUcx/GD7Frr0rpEbrWJpiKDlOtqZktauy6LZmvUTKZGCrnfBkOT
ma5KKUJRchmVXFLIusQiWaW2iYyKZbI2l6jdtZbtdcYfn3l/ft/z+Z5zfuf5
Pb/nSR36QvaoqiGEzVSNPql+ncsxMSmEUQkhdK8VwpnkEJ7ju/Fra4bwldAR
/II28Icxy3ibKiFkYir9aJ4+2BrbUitaL5cvfwyv1QjhCeNdzLnCemxYjVvJ
cmEVviJTIH9c/g/alhhCsfxBY9kyP+BbMkdlThrvZ5J77KEv7lRLldmGb8gc
wUKZJsZ+UR+Ezegw3x9X4DL6mC7J/Wyta9b6ly/gK/kUZzJVNo2/YJPT+J58
Y/WX+XT+U/3v0Dw6p3ef3jL18/x+/nL08awc/FlcI/c5fUZTaQq9TUXmH2q8
R1xL7wG95Xxza81R78X/IzOXf5h/T898WkKLaREtoIt6f9J7Neb5Q3wF/6q+
Wc7qAm52Pu1lJ+JKZyoWeqnfSvn8TdiRSuNniQVy3/I78A7XZ/jWePsNzix6
PInFdJzaGPsTb8P2lMffiLXl9sY6/mqu8/xhLLOHYXwBXorPnbO6iPXoa/Ua
mEy5fHNMom/4ptiCfuNvwU5UzrfDjebqwFfGZ9v1Br4Wnnazec7kojOZYe1N
xqvzJ5ztlngW/OD4jMRzcF771TryaXqL5e+z9xqyZ/n7+SS+iG8key6O+7zW
yfYxz05r3S1TU6aD+nL1DPXZcvvic893U89Vz+K7Y13z9MA9xjOsm4fb5dfz
m/CK67l8OQ6Re9D8/7mfTOyhNwtvxibUmDJcd8U+mGIfJbLJtUOYYI7xNI5O
2edu9fP2MMb1U/QkjdEzTu8onEzZ/GPRy87EevYzEkeoT8fRNJ6fFvtoJD8C
F+MHtIQedz0Ah+Aq2s7n4iTK5HPwLzxFRRTi91Ktn7XGOqt8tc44mjp5Tsbg
LJnfZdJlxrueKdMUJ6mPjeevftVZlfFZ/ERjD+mdFHupJT8c18t8KdNaJs8c
u+gQtTG2AlthOp3le2Kpc0uQ34pllMRv03uZT+Zz8S65jfJ34hXXJd5La2XK
+boyu+Nni9/JbMQcuYV8W6zi88g2PgTfNLZUfREuoDX8+1hhnoZxXZyPq9UX
4ru0kl+MT5trC98Oq9EjfF2sQ0P5ZOwa35myM53ZbEryfOWoTTCW5nymYAZd
jc8SZlJlfN6wtufqAb2l8rX4NP4SfyC+T/jOfKZ6If+8fH2+d7x3e27AH3Mm
82SqWmeqOadQvt6DMl3Uh+lpYezZ+C70SIyg4fF9Y4/n9O61377xOxnfL+bM
4RON7eP/pj3GS5xhQ3O8rm861Y+/P5RCWfKn9O6RTZRN0DvQuvGHqY76Lv6a
sUZ8ftyn8cHmqoYpvksdYtb8JfKPqs+wz8n0mvtIxWk0QH06DsKBlE0vxX3F
74P+KnwwX3++0lrN4ncDT5ujkI7TaWdyUj0tPs/GKtz7uthr3RbqR+Pe+Ab8
93x/6yVaZwD2jc+rOXrji9Y6IdNTpp/rseoNsQLLqbqey/FM5Nq5rzXWWmet
A1jkeqt6qfFi+7lXNsF1E3M9E98Nalfib4N6YfzNVf9Q/aOE63PG34wd5hmp
3jJ+ltiABqkPi/8j+MJwPdOUX6q+TP1/ByYoDg==
            "]], 
           Polygon3DBox[CompressedData["
1:eJw13HW8dUX1BvB93vfcc8+Nl+7u7gbpkk4RKRVFBVQQxA5AAbFbf3ahoiiK
iCDdqXR3d3fze753jX/M58w6M7v3nlnreZ41i77v4F0OmtZ13fcHXdfP7wfy
u3mv63aO8epo1/08vyfH/lPKD1P/5Fjas8HLqe860XXPpP96sZ+OveWw676c
bTaNvVnK62m7ZLzrnkjbFmlbdEbX/TT1k7Kvv6T8OPX702fJ9H009U3T55HY
q8Re2X+pP5GyQuoPpn2TtP8x9vnZ9s+xF4796ZzP29P+Yuxdcj5bpb51O77z
eCX9N87vRimvpv5SyvKpr+UaUj8u2/0u5fcpf0h5Nv+9LW1Ppr5V9v+J7H/Z
2PfH3jn7vy/ti8VeLuW1Qd2vjXM+f0z7gul/ca73gdS3S32xGXX8tdP3sfy3
bf47OPt7OPWNU18k7Z/N/bo729+bcmH6Xpsymv5vpc9Ow7r+lWKvmPJU6j9M
+Vb6fj3tc6Z9kO3XSNtwpOveGXss9h6xR2K/I/YROd6e2vP/0jnesdnuKylf
Tflayp/Sb6Y8939N77oz0ufd2WaW2KfGvjzX8se056/u5Ninp32vGPm7+2fs
y8Zr/47nuPtMdt2RsfdiZ7s9cr8uTZ+92/m9K/bTOf8jc/6P59ibD+t+e3/W
TXmuvS/q2ndI/6Py+71eXfOX+rW9+/mF2F9L/eM53qWp/yttO6b/z/LfL2N/
M/bc2f/r+d0+/bdJealfz2e59j5tn/4fHav3y73dI+c/PfZW2f5DsSdzvz7j
PY/9zpTPtnfk7NTP7NW786n02zf196c+LccbZvudY38k/2+Q/S0f+0OxP5z2
VXO8ffK7e+w9Ut5tm9y3nXP8Xu7Pztl+rvT/WNoOTtuS6f9d15Lyk5T/S1kk
7V/J77ez/62y/7ljfyT2F2JvGvuJbLNn2/cCqT+Z8u7Y+3o/U9/ddcfeNGWn
fp2n890z9TdyLk+lz3tjvy/2QqlPZv/vj72f7y32IPYusT/qO8nxHs1/O8V+
V9rnS323/G4Te1v3LPXHJ+re7Z36/KmPZPvtXF+2Xz/bH5xrXibv0w5pn3ei
juN4/0j5Rep/TPuxaX849+f59F+wXf/n0rZ0+i8c++jYn4y9TOyjs9/PeFYp
x6T+s37tyz6/7Rjp/6nUv5K2zbK/w/P70dgfT9swx1poWOPBcW18+aZ3LO2H
xB7T3o7n/m+Z7b/jOcfeLu0TaV827afE/m3sNXM+X0/74bG/mPKN1P8wUuPs
Sfl+/p37Pd9YfQ/e5c2zv2eyzbHtXVsq9R/n/x8Zez3/Qd039+9TaZ95WM/B
8/h07JmG9Y14X7w3vp1ns4/vpP7l1JdPfeUc7/TYv4m9RuwvZfvDYn8s9qgP
fayux3W9Pecza+wPxz4i7cul/zHps3W6HdTeT2PIL9L+816NLW/4bvM+b2d8
7Nf4tG3qqxkDjZfZ3+P2l/8XzPe1X+wF0nZP2nbL8VaMfVrax/Lfu/TNffpG
jjdn7Buzvw/mv8fSflH67z5Z1/PXXu3DvpYeq7lFH30PTFk0bQ+k/0I53odi
Lxz7XuNxzv+yXM9N2f+GsSd9K2mfK+2fyn9nZKzYM/asjp3t58v2Z+W/Cfc1
579Ojr97/l/D95T/njP3pf+jsZ9LeXvqL2X/G6ftmbStlf6fy+8raXsh5fJs
u3X6PJ/6panvkPYPx14kx7vdHJLzeVv+76V9/dhPjVY//S+Pvfawrs/8aR59
12TNT0u07d+W9h3TPjDB573bLft7bljX+nT2tXr675v2efQ3DsTeLPZT2f/N
3qvYW8R+JvYdsXeN/elhzRere1+yvyNSPyrl6ymHd/VcPd9L075e+u7CL3Av
Unb1bWd/8+V4d2V/78j+No/9dNpuib1T7H3G6ll/Ifv6Tba/JOX6ru7hDGNT
2mdJ++E5zgJ5Ho/kur6W9rnz302D2q/9z59yd+p7pf/sqU+m7Jb6Sin/zvGG
sXcdq+tyfc+m3DmoOdhcbP7cNcfePX0mptUxHfs9KTOn/skc8+fDmi9nS30F
73rO7+HYC2b7NY0nsd+R/jOl/+fS51f8m/y3WRt750r9wH6NlcbMvfr1/tya
+mdyfXPMqPfZ+/2jtK2S/v3R8o/4ELtkf9/L7296Ned9I/WfpPwt9b8bL3yj
2f4Pqf8g9ZWz/a9yfb+P/X1jYbb/dewPxv6A8XtY++BbfLdf+75kUO+qd/Zq
PqL7kuO/I2V66m8O6lvfjZ1zO35Yz8NzeSHP83fDekceiD33ZI1DxqMfpxzt
fPl3aX9H6nOk75w530PTdmT+3yT9t439Ruy3vNe5H18Yq/nSvLnkjJqf9m3z
/UoT5RM5f9cxV+rbp/2ttD+U7ZdK/6vyO8IXzH9XpH60Pl3Nt6+bO/PfRNo2
iP2CuXms/DF+2Y45n71jzxH7htjzZn+P8uPa9zmR7R+PPV/slcwXE/V9vxj7
yvSfM/23MA7FXivtT2b/m6T9zl59A76Fjdv4cXH6zZ7+G8V+slffpG9zQ+9s
r95Z3+YFGY/m6dUxHXvqW025q73T3nHv+nXZ31zZ3y6xx2PPSHkn3y1ltmk1
xhnrns45H8x/yfm9lvrnc459zzblGs8kZZa0r2puT9uDOebssd8We3yixmxj
9xfSNk+O9/ZB3R/jxRP5b/PYC8ReO/Zjo7Wd7WdNWa9f36hv9fr0mzvbzxT7
A+a32DNmVFwiPnlP81F8M1v0ymc5sG3v2lyjb983aiw3pvt2355zvK5f3zB7
i9g39GuM0H+r2Df3q7+5YKuU+7PvB1N2MDem3GS88sw9j/S/sF/33LPxvr2Z
emcOHKsxY7GYS3Q1lryQ/qflWtbMeW0wUWOCscT5GCv2bNfvfDybw1Pelfru
KV8cKx+br72JOcq7nX2smH2slPK2iXqmxipjlme9Wf67vl9jkP1vGvvaft0f
7b63Q3o1R5grNk/7Nf3a3vl6/z37XspOqW85UfOwMdpYvX3O58xcz/Xegdgb
mVP79c56dzeJfVW/vuFtYn9urHwEvsFnU18n5T9pWyf7O3SsfH6+P5+Ib8Sv
5F9+tfk875io2Gi0nc/ekzUOGg/FVua4I/s1hried0403zr9P88XSPlGr2JG
seNOaX+qX/Ge+GH+sYot1k/7YWN1j91rMa/Y1xxpruST8k2NTy+n/2vt+jZv
86fr921vnH1e0K9vnG2ON4d7p7xbfFq+7aPxcx4dL5/h5l7NAeaCLdr8eGd7
v8yR5kpztrnbHGlumak9jy/GXqcrf/jNHHvLsfJFjCnGls94htMqphXbPpv9
XeQ7zvF/Oawx29j9WOzHxisGFAvOnH2+N+0HZJulplWMJ9Z7YLL8WP7sien7
cOyTsv3Fsa+L/Z+U01P3SWi/OuXM2HPF3i/7+2/sM2LPG/uDsa+MfVbsBWLv
H/uq2GfHXjT2gbEfnKw4VDz6t7RdkfLv1OdI+/uGFZOKTXNq3d6xr419Yexl
+ayxb3dOsdeM/fnYt8b+x/Qp96j7WOyTYi+Z+oopn4j9WI53do53WvrsG/vO
tF+Z+lpp/1zsO2KfG3vO2P9I/e6Ua2JvEfsrab8t9jmxF4n92diPZn9nZX//
nV79H5qsuFv8/ffY96Rcl/oO6f/V9L839g2xN4p9ZOzH0//c9L9+erXfl/Yb
U98w7d+EF6T9vLTfMr3s+9N+a+p7p/07sZ9K+4Vpvyv//TNtT8e+Mxd/T+wH
Yz8T+67Y98V+aLxidrE7jOEgc1naLx4tv/yUtL8U+/G0PxX7idhPxj4/7bdN
r+O97H2P/XTsf6X9ldiXx34u9mmxX439n9gviYdivxn7utgPxP5Ftn8r9vWx
e/3yx7vMAR+PfX/aX4j9Rtqvjf2G+5n+z8W+P+fzcOxH0v567GvS/hb8IvYX
sp9P5GU8KOWj/YqzxFvH9CrW/9igfDFx7GT29+FBxf/aZsSexxgW+1Bj2kT5
IzsZO9v4AkOAJcBrDhmror5qysfGas7wbfvGzSW3t7nEnHJbm1PY52Yfs+Va
z89xbuR7pZzXL//tt6mfk/rqOZ/VxgqPgEusk/MZNQbG/mfsdWP/fFC+Fsxn
lfS/KPfgW6mvlvqsM+o4juc8zrPvlFP5k+mzQPqcDZOJfa1jmrey/7PauZi/
nk+5OPZfYq+V+rf5mvzLlJ/16vjO9ztpnyf7OzH2BbFPiL147PWyv2t6NYeY
S1yn670h5aqU0wd1bOfwZ7HwoOJbce7sw9rO9vZp387X9u7bWmk/blD+/q9j
zx/777Evi/0PvnHstcfK9v+2Of60sYpVPpT2RXM9E7H365UPwheZeazwHBgR
rGiWsfLf+R6Lp/8B+X1XrzAYmMuMsfKv4T9LpH222AfE/lyOt+Fk4TYfae/i
IOczx1jhP1/M/xulff/8v3+vMBzn1DfH9gpbWWyifGj3233nW8OtnNsxzZ/+
U+zzYv+pX37CX8Q4sU+LvWzs3lhhQaeI1yYqPhJ//8r7FfsXDX/4TosX+C9X
t2ezLl9yrHyxs9K+ftrOb/ETTPOCQcXzP23ns9pEHdfxvTOnp/6vQWEHv0o5
dVB+nnv9gxaPLJXt/9gr7Fn8skzsP/cKOxYPifHF/mIksdJF+fa3yTBxWL/w
GjGx2NicZe7aP2XBaYUBwAL4dHy7QbbbPfvbwJiabZeBEWa736X8s1d4ifdn
ubGy/T9Lvp8v5/dAz6tf+It9PJL6S81f3Cb2Xf2KQfiDYnqxuRj9I2OFYcAy
xMywkSP4ceamfuFZMBHYiJhD7AGzhF3CLGGXuzZ/2zPz7OCNp7bn536LscXE
YjKxmZhebD9vtnkf/yj2bbG/2tV47riOv15XmNDW2cct/YoR+KMwgDtajC2W
/wPMqas5wFwAc4O9fYKPmbYV0udf7l/+nzn367mJwovgRiumvkTaf90rbE78
hof4euzDY88CQx+rd9tYsvhYjWPGMzEkDBs+5v0/uo0ve/ARY3+yV5iYWBB2
DEMW03qfj/P8jHGDwm/36tWYCC+Gr5ofzBPL5ny+Nyjf0/OddVjjlrHmojbm
iVOn4lX3aFjX6Xp/28bPVbK/E3oVv8PbVo19Yq9ic/ggvFCs7p3ybh2f7c/o
FQYJi1w9/51jfDcvTRYmenyvxiRYqfgeN+OY7rXtbG+MnuI0BrX98f3iJ/6c
8q08rwNSfsxfyLz4ka7+M4fjc5ZufAV8fn7nk7bZYt+WefSi/Pcf8UrsV/O+
PJttvh/7hJR+v+Js77p3fkN9U26Bz/BH03/htN8ae57Yd43WN+Zbe65f/MiC
sc8Sr/GZ034WjCL26znOG9l+aH6KPWpeTPuLxtFs/2zsbdL39JR/pX3gG0z/
8bT/JvYr2f6m0YqPxIdfTH3+GeUj8hX5qHzVG2M/FHtJ55X7vUz6HD1aHAYu
4wL4V/Z9S/5bFD5qfuSW5L+bR4szEkuIKbZO/VRzDlg19svZ/vzYF3aFIb7C
Nx3Wvbw12y6e/S0Gw0r7MzCl1CdTTk59XIw5WuPXQjmX5/P/npMVQ4mldsh+
Fp9ReAy89ZX23z/zXa7clX/Fz3o99q88+5Q3Un8t//8+9R+mvDq9/tP2QupX
Nr/p+Nhrp1zFhzOndN0UiM3/6ud4f+7KP7u+4dnwbpyfWO7i9P9l2l/Mtq+N
FweDm8PR4Wbg4182//aLIzwj5d/w3tivj1dMKDZ0P8VqV5gjU78d/pPrH+nX
uTnH6amPZH9/bfUbmp/p2lzjtH7hSGJRMemOw4ohxbb/7Vds+bf893+uP/dh
gXZ/cUc4JLErjhPX+UzK24f1PlyW/gv2PdR6dg+kPNee4fz9sv0/b+pX88lT
vyflGv5kzueqrvYxh28113xH6vM5V/GE55r6fbmW0TzfFdPnRc8OBgsTS3mk
qz73j5aPzde+zLOYrPftorSvCmeLPcug7Mn2vj43UvfHfeKX+75Oj32Obz71
p9L+na72yY8/Ifs7JvYT+X9esdGw3m3f1rSc35mxh+3b7MU+b1j7mhkONFn4
+QXt+N5/3+up7ViLTRbmsETsS6cXFjF7/r889rltH+YZ882RKU+OVLvzHbZv
8s7s79XYa+b/lbK/59PnB12NUc+kvox9pL6I5zJa9+/B2A+3b36pdj+NAUsP
ChPALZ7a3r8bxHCtbensf8/h1GOfikHFoi/k/w2m1fvh+7815fm0P5tyy7Ce
30upL5z2e3L86/Lf3e1bX3ayvmvf9z3t/XK+96X9Ts849dtGarw2bl8yWnwB
f4XfsnDu95KpP9bVO7ZUvzAf2BLMCxZ0T/r18/4vE3s6Pqjdj9vbPbtyWO/p
3dn3UjmftfLfK8ZfY8Cgvr/r2vlPa9u734vGvne0fBzY15398n1u4zO29t5E
vX+Xxn65vZOv5Ho+01W8NxX3DYqvuSP9N8q20wb1bRuHxHE/y3+fjn1vi09/
1fCPe7KfOScr9t489nYp106v/dr/Z7uKGa9Lv327in/Fwd/L9u+LfXeLf/81
Uni+eF/c/+Vh7c9+xfa/jX10V3gNfOS42F+J/UjDb2AIsASYA+zhJ7EP9T61
ePS7sd8T+4Z0mnmyYv2dYu+WctP0wj4WTH3TlJtT/3r679xVjC/Wvzzb7dhV
/A8H+Bafp6sYX6x/7LD2Z7+whCvTf6+u4nFxuX767+mZp/41PmFXGAOs4e70
P6wrPAguBDOBnZzv/jcsZh7PP+W81D+c9vm6wnRgO4uK8fLs/pay2LD4oryW
3SlpvyXtn+LTxL4i9s2xHx0pfg+eAFfgn+zXFR4BT4Cbw8/pQzYblj6EHuKh
fmkoHo+9erPpQy4blO/NB6cn+UzK3F1hMLCYfWKnyxTmA/uB4cByYEKwoXvz
jq4f++rYL6f+AT5QVxgVrOpQMUDsi2JfH/v9w7of7gus6kPDen6eIyzrzFzf
Bl3hMXCZjxjPY18S+4bxwtRga5fxT2LvETvVKYwJ1gTTgm3BmGBNx41MfV5T
+BEc6eNpXzr2BbFfmih/gf/zt5TRQeldNm7+FU0K/I+/xG/aa7JiQrEhPQ0M
+Yz8XpH7d3nKv8VQY6VVONv8ZjwYq3b94M0/EFvEPjn2Utn+AGNm7JP6FV+f
PKh9sZceFmYBuziXP5z6Xwel3zD/LxH7lNjn9ur90U7vQ2tBX7PMsM5JDCl2
dA7ixyt7tb9V0/7TlHf79nOfFsr5eti/68q3uRrOlP9/1hVeBDcy3hlb77XN
sMZj88ECbf413pt/ZmrzuzhXvLt586ndF/eHpuPMfp3/la2+8rAwFzHLse38
xNni7e0bBiEGdz2ua3n+Wrb/b6/mmxXM3f3icvALeIZLzFupPySG7hfG/kSv
+FbY+/Et3v9rv/APmDMsGiYPi/5Pv7iv11Ou6BcHxvb/OsPipKe46djrDov/
czzHxTfDuGHdV/YL2xfnifem5Z26ul+cAu4Ah4BruH1Yc625YfnJwo3EJmIU
GM1pLR7DR+JEaMb4h/zE7YflDy3QfJsVs/0LfKH0fzjl+X7N1482/4uPdNew
/Kk52vxk/lmozbXLTVbMLd4wZ4rF+Qv8qYXa/LRYfl/rao7i05snzBeHdIUp
8nfO7Mof58/P5XnFnqX58Ae17/GiNv4fNix+89L2vcOEYDkwHVjRR4fFD8HM
YeeHDQo/0jaStkNSlk/75dn+xvHijfHHO/RKywPDXqaNz8YvGBH8CucOO4Jn
G2vOzLk9kv0/NlHxsTj51YnCs7aO/cF+4VPmhH26wovNFScNK/a6Ktu/lu3/
GvtHXcUQ8NqP53z3adtPN74M6tocuz+s787394euYg3fne/v5ylvTi8OD3eH
w8Pt+W59v+65uVq8Ye7+XsqpsPr8t0pXMY3YBr7m+O/NtotM1Py7XBtPje8n
ps9SXWH6fxup8Wn7du9eH6059p1d8Q3GbBj9Iq4tfUdyvUd5f2L/1bFin5x9
7hr7HSnfSNt/8/+2qW9mDhmp+dR8fQVdHTwzv5vE3pgPQQPX5l5z8O5dzT/L
Nn/BeP+6MbJXepJZcj0v8BljbxV79oniROZt85H5BYcyZ5sfzL/mF/6zd8q7
tW22Wy3bL5+yjbEr179eq7+U639P+syevrN2xW+Yo83Vhk58xIHtfpzT5rdn
Yn8w9h2x55io+c/8+hfz0mRxOHM1f8B8CT99X6/0cfRjb41UPL4Sn2Ck7NVS
f1n/0eKzaD/uzf9zZX/3Dkv/snTzV/lTvkXviLGen8Jf+URXnAVu4ONd/ceX
wf/iV3EauA16Gvz+stnfg83/42+8P+X7w9IpHNGVluXB1P8v/x3cFUeCK1k/
28+U7VfO9o+O1ja2vSnts04WpgJbuUVsMlmcAG7gzX5xkb9P+5fT/lDa55ms
63S9fCC+0HHNv9RHX3oSegF8+8hE+Z9HdXWOtBU0GLQY76SJGKnjOr4YQazw
6/T5YlecCG7k+vx+yPXkXl2Q8//nsO6X+8ZRo1ugJZg3ZUVxz0i9G2J8sf6r
sb+b+jPindGyxfe/8H2nfmjD095j/kz7foP6tvH0b8Z+dqS+ZT453x/OAG8w
pjw/vXSC9II4F5pEcbh43Jhh7qZrhK0bI2kpPzGouVe9N6wYT6z3bIuBP5n2
vdv50Gd+Mv/9pSuMAFawB4ylvQ/Pp22j2HP3Ss/zcOyNY4/C5mI/0uIP75p7
5t497/s13qZ9toniKC5p8+8iw8IhHOvErrCKQ9r5GK8Iaz0P39NPfAOpnzws
fAWW9mIbD9bkb8Semb5iUOPDFtpHixPE/d3Y/PcLx2useDlt6+V575X+8/fq
Gl0rjhhXTBOAy99uUGPDcnyS1HdKuTn726hfmjU2/dU1xshB6ceW6VU7vRx9
28qxN+mXPst4tULb15qTdX9Wir1j7DViPzms++s+j+d9e3FYx94l9tqTdT62
37qNTzsMavu3t2v6Yfrv35Xtft+b9sVzPbfFXn9Y179u2954+Rr/PvZmbTyF
ecO+Yd6w7x+k/QNdPT/jGRzLuz57m3PfnX7r9ErjR+v3Vvr/Nm291NfN9u/N
74GxP2z8HJR+aM12PO/TwxOFPZn7ZjL3pv2Gru4XDeHZ44V1wUIHuR//zf5v
6wof/R9eCg87JWWhQc3HvjX46BvN/4DH2maRQW0Pa4WdjswofPEK43u/8Fr4
4t1d4Uti/L/zmbvyX+BzZ44Xdgpr7M+o87uxK/wXHne5+aJfWPD0GaXPcz3z
waIm6/oujH1t+4+mhtaE5oTWZrf8t4rxLOWdxpNsv3avnpFn5Xmb75Zs78x6
KdPa+G+8Xif2IPZIyrqDwqevzLFOSxkbFH4Mb+ajTQwKX9PunGGG9+UY473C
QGAh8GH47EmGv9S3Tbm63S8aSfquRT3/fukd8Utbef9SLk79kpHCGjZPOc/Y
2/yF81MfnywMYsuu9AAwBHgwPFdstvBk8Xj4vA17xTnThzneuv3SV9Eg0CLQ
Ts4zUc/HuwD/hm8fnvZ1Y1+W401M1rxkflo8ZZ1+6XW3b+2TkxWfimfPouuf
rPhW/H527NHJ0izY39UN79i+X1qJNbrSOJ8zUtiEGPfckfI/tes3J39gUPkQ
O8Z+ZbT4LHoU/tSA1mGktBywg3Pg2YPyVelEX2t4y/rt/o1N1nW7fj6cPvyB
6e3+0NvJX5CvsFq/9GU4Ktopmi7c1ReGhQ8be/ux58i2s/VKb0Z3Rs9mf8u0
8f3+9J859iptvqVXW7DZ5vtNY4/16p30bp7vG+wV5gJ72Sz/DXs1Z5g7vKPe
1eWz/UPwrWGdg2PTztGY8e/pZWjPbh0U14Zzo599eljfwtb5f9XJ8r/MN9vE
Xm2y5tdN2v2Wr4OTwq3iWHFV+BV8zt39wghpiGiJaJJo104YlB4UZgO7ualf
Wl4+Bg0QjRwtHE0c7dwj6bNwr+43vavvhX7aGLHooDhJ+TVyYHCVxnzfsWtw
LYe2mEYsA++4Y1j44EqDwqfFcLBsGKzY7tJhjSXaxW+rDQqLhEmuMihMFba6
/KDwU/t7ubWJN2H4fIgXUxZM/XjveVeYDGzG/LlR+x68/8bDF5tvo//T4+Wb
8lHvmSg8Hva+xqDi0ZtjPxV7uUHxRVcNC0uF1cJPaRxpgb1D3iXftHd3env3
vHPevX57X7xj3jXvIF/Tf9qMWZu18dBcbk73Lnqnvdv8i4eGhWHDrt0/2Db/
3fd2Rvv+nJfzg/nClp3vHe164OX4rydjLzsofHvD/M7ZK8wR9uib9e3C/06P
fdd48UK+Md/an0cqduDeyHX4ZP5bNfWTU+837RZ9FimP3KIPtnhGfDU97b8f
Ka0YjAvWtV+LJ05o8QWtGexu0PYPU4O9T7TnKQYTy4npxGbiJfZ/WvxGa0XP
ZswwdoiLxccwub+PVJ6UfKlxsdqwNE/wxdGR0kIZH43lF7bx1C/bGH8BbmJY
sd65bXw1J4gNxYjmCvHkZm2uGGtaLljo6u3+wvRgf9Pb9cM35Zvdmhu627D2
a/9iSmMxTtK5acNVeke9q6e0+z2e/W1B75ztdx8WHuPbgeuv7Pyy/Yzc8A3M
y5OF8b+V9jdbHzkEju0c5BZs3fSy9M/yN4xZxi74BT2++0UrJtdDftsWTW9K
f0wvDdOH7ctx+NJoccS4YpqMhweVkyE3Qxs+Y/3WHyfA18Mp4BaOHK18DnpP
gHtvtPTgWza9K/2wfA05AcY0YxldozHMWHZ443/l2E3l2k2rfeCgYaUwU7l7
OHBcuJwzuWc4QlzhfwalR8ch4hKnNL+jlRMpN/KNQfGxMCxYFg7RfzBqWDUM
W24fjBvvjn+HfU/lQPZLr0K3Aq+iFZFrKJ8QBg4Ll/PhHuCIcEXGd9wkjgzf
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt1nmQj3UcB/Bn7VpLzmTcrTstdt3HInaGUIZa1zhCplFGGCM6XNWURhO6
phk1IxqTEWHtIueIRFaudZT7Jq1di8U6e31n++M93+/n/bzf78/n+/ye3/P7
1R01IX18iSiKpkNJuFMqinrFRVGHmCjqBCPio2hMQhQlulYNlhHFlo2iz3B9
1DmxUXQUMstEUbcnomiXfVP8fL5q5aLoAl1FOUkyL8tuzlsa95b6HfzbMId2
LO4pvvX8v9Jdo6sN2fYFuOv61lLfo+1k4Ol87axF6pW883hv0BTBJXM0kv8I
9xgi2obq+vzH5FW0/xa9gi+WfoCc3tAH4tSjSkdRJfsn4Zj8dL420Mu+oaxm
UMhbE3ebvhDuwEV9s2li+GJDFuxTf0jbRb/DzrFN/zy+ubihuP7QD+ap++IP
0sfzTdSjljlaypxl3p7q16EJbgitJcqSt0HeJb5yfFm4ZFgEZdTrfSZ3aPbT
3DTfz3x/2ZeVt53md6hENxI/Al6FX+h3802wX8GzErbjDuCS9DnLn8ifw7uL
JuJPsTSHxeFWqyfhV/Fdoc/hOwSF+PbOtccZMvlfoJkcngM47PpOPTKsrRxs
K82akOtaJ+ffim8QV/yZXtBjP74d3Ta6JXSN1al01XHTcBNgBr67/k3gnJnr
8hbynqRdDQ/1ewSTXXuaZhSuRPGjEm3AZ+v5Lq6teq96M91VuvdwrXFtYA/+
OF0dvUfKH8Y8Rd9ynvvBCcXfp9U063kv8h7AncOdgvP/n6MR/ozrNfhP4vbh
ysMM9Wx5L8E4mcNwqIg8WiPzD32XBZ36nEZXYWk4g95H5RXRLHRtM66q+zJF
Tn+YKuRZ8+bia6lT1O3D8yBvHdzgi1Mv5V1LM0vvqXSfWD+Cj+FrGBDus7VC
+H5DK5nf863D/4CvaI4WuLG40biFQYtrDAPoj+GPw2CaYeZLcPPX0y0O2Q75
Ck0FM6wzz0bnuYyLg0znXA1ZcJb3MV1HvuF8g6Ao3D893refCQnhs6ZrxXtd
TiU9s8O7Av+n+q78B7IewiPYyHNI3ibrivBugRLmG20tK7eqrGrQVl4Bfxd5
jenz5SXjWtM9lH87fM64yrxjXJ8evtfq+7y1rUv4NuG3wI+uDcWJj1rj8+SW
VjSVl+zaQfxvsC2cFU7Q1HG/Tlo7qbvRzaabIWsm1NAzBdc2vvgdGL47RfrO
wA/iKyk/Dm7juoR3tuu5fDvoK+u7zrolzAd78WvDfeRNs38tZPLW5Euk7az/
Gbqz8CKuJF1fujF0D8JzjTvmvv4Nx2GceU6ELwbdc3RdoA9vFbqNnr8Y+90+
kyYkw2kGO0eerLbmbgLjcIm4eFwGzarwjJhhICTIHUZTxjpI3Z7uhhnSZKbo
cxfXlf9f++WQAc+rU+nu0vWge0PeNwnF92qgrP6QDjPVDfEZYT6+bFhlhgW4
S+Y9D6f1rSIrDT4Iv2nh+2btqu5hTVQ3gM4y8sM72Zm/w1eVMRe3w/lb0lbF
zTfHaChwbbvcHvY9oVd4FsL3naaFuZpBMvyjrufz6E1/MzyTuDfNnCXztNmu
wAW+6vLr0HWlu0zXim48XQN8dRkH5B+Cna7Xpese3uV0u8w9iS5PxhzXr8nL
h1z1Gj1y7Y/QHZExUFZvyLLPhGdkdHDWL6wjeQ/y5MB5XFq4f3xJ5qgHufSp
+uTot8H+J2it7kaXG/6X0KRCQXzx70J4jza2v1iq+Bmvb+Y+tEW096AfLjX8
9ssrD+WgozoZP8e6QL0ofC56FJjpc3mFznIrQJ0uOyn87kJL6BfuUXgX2k/m
3w/Twn8K591uPcU30VpBPTT8P6D9NHwv6dLDuw4XW6r4P0cJ+THhfwV8Rfcl
VDJ7Et0Q3C11Z7obvC/j7uP28e6FfN7ltM1p7obfYrgPLdX/AQuqR/U=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwV0k+IzHEYx/FnZmd2xiypzcplFxuzTVp/yl5I2vwrByv5c3ATN62DUByE
0hYHB9dVnDitYhdLbGK1fzIHWWljlNk/QinUht31+tW8m+f7eT7fz/P8Zn4r
j5zY15mOiBWoRcOiiNdJQZxLRZQzEe11EQX6VvpUPmIWO+iL6bULIvbwbcNx
/dlcxB96E/+E83I5jajw70789ArPMudxY0bxUl6O/pneSB+ilVGhn8cm9WY8
zkY845mR08KfVx+WXcQX9w7RM/QP9ILzE3feJzNkrKan6bt4r9r1gv4B/lX0
eXt20Pdinr6fvhE31fd576IH6z3rGVk+0ezcpv9VZl5GEVNySjJ2ImXXgzKu
MG/hZ4uRmogBxbeFEVn+j+qlMrr1bmCQ95+M7e6347feL1ziWyfruvqYuUdx
G0X7tMgqufPd/QEM462cbkyYV8VJ9z/ZpyqjxL+G/wffNCbxhre/4Nl5y3jA
m+Hppb/wPWlWFa/MH8RZeTX2H/dd7zwm4x2G+B/K+SkjTT+tn03eGXPbcIvW
J+cO7mGD/VNyxvhyer0yHiX/s5wlep08p3BRRi75bWQ027/B+SlfD/rQr9fE
f5m3C9f062hz/MPqv7QZjJoxgnPmdel3JO87fS2tFc/t/h9vsGjY
            "]]}, Annotation[#, "Charting`Private`Tag$2700#1"]& ]]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJxF3Ae0rVV1BeCbe7yenCKCBZCmKIoKqFQborGgoggqdjoI0qv0Xh+9d+m9
PXpREFEiCCpFsKA0a4yJiSkmlrT53bUcGePtcfc6+z9/23uvteac67zlt9zl
YzvPzszM7P+8mZn8m3l4OjNz/XBm5ri5mZmHJjMze41nZvYZzMwcFfu+2AfF
PiD2fmkHp39u2jnpn5rxRzJ+Vvpnp12Qdol+xi/K39Mz/nDGbxrNzGyfCy4S
e5fYq2b8jRn/YuxbYm8ae9vY+8a+OfY3c/w1OX7v2LfHvif2JbH3j31b7I37
+29I2zr91dPe5P4yfmufb+vY26Rtlv6Z7sf50s5K/7Rx3e/JOf67k/rL9hyn
pH96xs9P/7y0M9L/Utpl6V+edn76F6Stk/7nc+xj+f4xsfeKfVjs78Q+Nvap
sc/0jtI/Ku3k9E/M+Lczflzbx7te+m9Oe0v6O2b8jkld773uPfb3JnW9K2Jf
mXbRuN6r93upa8zV85iPC9POSf+8vt+zMvbopOwr8uzXpl2S/oWeKePnpl3c
tvOfneMfz/H3531fnWP3iX1Tv2/vc6/YN8Y+In8Pi32klv6OGd85/YPSvzvj
X+z1s7s2rvW0r/lO2zP9V6a9MP3PZM3dk7V3QOwF1lvagelv1+vh82mbj+s6
rndE2uFp9+X+rsr9HZjrfSXX2yPH7JnPD4l9b+xLY19l/mL/YFLz6XnPif39
Sa0H83tu7Cdi7xZ7j9iHxv7apK6/i7Ue+57Y28fecVDPuGPP53HpH+ue0t9v
3PeX47+e418Vexp74zzf1/J8n469eeyPpW2Q/ifSPpP+bjn+ukmNfzb2HrFv
mNTnxjf1/ubqL/vTaZ/Tz/Hr5+/H0zZMf7m0SfqfzfXuzfVeH/vlsXfJd6/P
+f4m9ttiHxD7ztgfi/2p2Dt4x+nvnXZg+vun7TOu8zjfS10v/W17fr2DbcZl
+/7OOd+XJ3U/nm/P2AtjH9rv5/jY98c+PPYJg/Iv3+zxwzN/h6Ydlv7Fued1
cp2P2IcZvzD222IP852XZ/yMfPbhubonz3pBxt+e8efHXoY/in1e7PXs3Rx7
Sey3xJ7N+BIZf1naIP2jc71rsnZeHfu/0/9j2kv5hhz/jhy/SI55ReyTYq8Y
+6GMz/IVsdeKfXzs6/P9pfLZMekfknZV7GVjfz/9H6Ytz9/kHtafqzVurZ8V
+0NztSasjVNyvjflfL/L8WN7wRpPf8u0Y3O+8zK+ZsaPjX1d7CNjnxV79Zzj
0Jzr6Xz2jYzdl/ZU+kdl/NUZ/9vYz8T+SdrX0v962o/TfyTt1vS/6h7TPzzH
n5njV8v5Ds75Fsv1/2O2fDRf/aO0s9M/J+3J9P837en0n037n/TPmdY78S4W
pp2f/pvFj4wvba/Ffmvs5+V5l4x9YuyVYv8843/O8X+Vz36d/t8LQukfkfFX
ZXyt3M8huZ+jx/WuvfNvZWwQ+59i/z5tYizHvCfH/nvskfOLT+kflXaktcZH
5tqnWYPj8rf88Qn5zoN9/hPt39gPxP6X3NOT+e6nc71v53onWXMZP0mMGJc/
57+OzvHfyvELzKHxjpe/987z/S36fhd4r/xh2jHuM+OPmt+MPzAtf7G3/c9n
Ofe4jve9v23/afzw2N+I/Y/mMN/fypq0FtLOTf+DfL94GXvzYT2P/WVevL+X
x94p9gl8QPr/ls+mYk+Of2OO/+fYz4v90xz/rfT/Je35njfHvzvH/2vsofcX
+61ieey/jj2X9qv0/y7tBd5l/p6cdlLaCWmn5vyr5vzvzXdOzHdfkmP+K5//
Z9qi6b8o7Q/pn5J2c659eo5fPcevm+NPzvGnxV4t9vtinxT7jNhrxP5A7FP4
79jnxH5/7FNjL57z/ZX3J8cY15x6F97Jg9OKz+Zrq57fw3v+t+j58PwP5Luv
jb1gWmve2l+x1yPb3rGH7A3PbC1ak97Fz0a1F+3JX4xqjzl+rd6vv+j9+pqc
/5hp7cl7Y98zW3tV07eH7WVz8O3Zuif39p9pT6X/eNp/jKrpv45PyvHPxv5m
7HfkegvaP9j/K2T86Gn5CL7AZ8bmej9ZA9YCn8F3vC3fPzrf/23sJ2KvHfuo
2M/yqXI3ezjHP21OYm8X+6exnxNzY+8a+xexL4n9ydjvj3197ItjbxX7ktjX
uV7si2PvHPtnsf+Vz8n1fpD2b6OKW+LXcmm7pr9+7nfD9D+R9tH0/3lUvpbP
/V36/5T2vfRfzwflfL+KfX/st8hTcq3nYj8Y+82xj4j9D7Efi/322EdOKh6L
vx9N+2T6l+azLTP24ZxvYc73hxz/49m6hmuJCWKDPWFvfDWfXWj9xP5i7Lv5
xNiS7LPT/0raBeYr43tOynb8fnysd9/51uXW0Kjy3UvT/1LanenflnaW9ZHv
75Hv3xL7TOsp9u5tGz/DGk1/BX7BPkx7lXeQzzZP/4i0q9O/IW279BczZ/n+
8nO1f+3jV6b/pYxvlv5BaRf19e0HMeH2UfkMvoOP4Cu+3M+3Cz/Q6/8WsWS2
Yg9//8xsxYAT25/zN2KsWMun8z0+Mybe8C9ipFj537F/OVs+n+9fJZ//ZrZi
yBvS/37G707/Lmso/T91vFo5YydMK+aIPe/M94/J9x+LfbH10vHPuf6h49Gv
OyY9N1v37N7fleN+a2+nrTNXMZDvc4/u9Y+jio2u6druwdyZQ/f2VK5xEV+c
+3nO/pfjy5tjPxP7Y8Na89b65cPK2dg+v3VaOaXc8urYX58WBoKFrox9+7Ry
dLn6FbFvi31t7B1ibxj7lml9z/fl6tekf3XGd0r/svRvnhbGgrU+HvuOaeXD
e3Z+Ln/dt/PjjTu/lBOKbQd3zimnlFtulP6Xp4VhYJmPGot9lZw69gaxb5pW
vg4vfbrzfzFOrNsk9jemFVPF1huGhU0XdP64Zcc/MVKsvFbOM62/bLH2umHF
QLkmTCs2ykHlogtj3z+tGC6Wbxb7O9PCuLDuprHvi31Z44drYL5xYVxYd9uM
Pz4tDAfLfT72I9PCfLDfp2I/GnubYWFKWPLG4f9jTJ8/Nq0cRC6ytbFpYWSY
7qbY34v9EzEw9hdiPzstjAPrfCL2V6aFUWCVq2LfHfvC2FvEvjj2NbHXy99N
Ym+c9sFh5UfymQtjP9n4aI+szd3SrhxXviNfsiatTZgT9vxQvvuDaeH5o+Ej
GCH9H8GkGb8j409l/CKYIvb7Yl87LQwJS24f+4fTwliw1q2xfzQtDAaL7RD7
yWlhNFjtttg/jv3D2OfHvj32T6Z1z+79zthPTwvjwXqfjP3Vnq9rB3VP7g0u
ho8PkX+Zx4zfkL8L064eF39xcfrXp101LgwPy3+EL5kWZoadb4n9xLTmxfzA
2jenf0HGN0//IntpWvkm/OSe3fu1fT9Xp12R/vV9fTFULD2g36c5NtcHNf7l
I/iKa/r+xNin+3w3DirGirXXt32d1vgNPyOmiq1yKrnVK2LvFvuJUflGPvLx
9A/NPZ+Re39Txg/ki9I+l/6F+exKuVXsjWKvG/vyaWES2OQF1pS9E/vz8l35
dvoLOp5sm3bMqGKUWLVUvr93vv+u/N1wrvI3edw70zaYK7wH972Yz89335v+
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
ndHMXdO1aOlX9vxbr/Tn/wMayGsV
            "]]}, 
          Annotation[#, 
           "Charting`Private`Tag$2700#2"]& ]]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl011MT3EYB/CfVKqNLfO6rgjzMtO/jZLMZBPCRU01FuPWvFy4QCYvuTDM
MJv3MTbGxio3MVo1dWFWktVoFPM+MXWh5OVz5uLZ53m+v3PO75z//5xJm7YV
bh0WQhhQNQkhxFibFMJdjkwMoYqJrGad/CHHmus5ig1sl3/lDHMvZ/IbO+Tf
Ocv8g/3qhayP71RafAht5jf6p+zhFzVVHtzUX2Q5d4iZ/MXJ1pqZam5iMWOO
LWImC6zncIM5lxu52XFdnm0Le4fbQ38s6rmf71nBI9E9O7/DOePjQuhmGl9F
9+9ar9Uj6/XmLv1L1aEWJofQyXz2cSmreM6xNzndfIsZvMOz8tuMmWt4wXyd
08w3eNFczfO8zCnyKzxpPqFO6iujnmei60V7uad0x53Xn4py82le4lXWcr71
Fv1zVWdu4z0+4wMusN6uv68/wKPcy8Pcxx3Wc/0eg+ZF/Ml57OVcbrce42fz
HCaMCKGEparCWiGLVLzfezV/e4Zy+Sr9kH45l6k8ddC5/bKP9u1Rja7Zzd3y
JvkH/SfVKh9gufyxfEif4PwWeTz3yFvlcfpd1g7JK9XO6HnkK/znTe4nn41c
yjbvyEo2mwv4hMXslOdF34F5MVtZFr1b8rUsVSXquHe5KPqeUrwf1tbox9mv
wTzbnhP1E6JnMmeb0/U5TOVoNUa9c41EZrvXJC5hCt/Kk5kXvZtcxywOyrO5
PvofWcY/smv2zlDVCf+/73+XK4rX
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0s8r5HEcBvAPwg65+JGUtCNSJGKPasfVCrtCYci4oDA52YuLHOaEFBcu
Kxdpk8vWnnZz9AeQFHGQX4kSUvKSw9PreeY7zbybJpqY/DGRFkJIyXR6CD/l
S2YI5dkh/NG3pc7+bP/W/0rcbrEbMrxXBuxG1kh9TgjVHOYYExxmnAkOcZRJ
JjnJCRnXR9jNTrazja1s5Tf2coh9HGQP4+yXKTcMvD+TDbcl7TK9VNbsLrtK
r5BVu9Ou1Ftk2160V/RfsmMv2+t6SjbtOXtOn5UtO2XPvH+fXsTvdh6b7E+M
SI5E3bjvN7uNhHDAex7yiUd85D8e8j+PuMtTnsmenuUz7pjLB+bxnK+eH/OZ
Jwxev+CVXEqtW24Yc9s1m+0CN7XbX/V8vVA67Jj94j1LUmGX2PP6gkTt4uyP
/8cbAEVDmw==
         "]]}, {}, {}, {}, {}, {}, {
        GrayLevel[0.2], 
        Line3DBox[{978, 977, 2784, 976, 3064, 1983, 961, 958, 2767, 959, 2779,
          972, 2780, 962, 2769, 963, 3063, 1980, 967, 2773, 968, 2884, 1233, 
         2882, 1234, 2885, 1237, 2889, 1241, 2106, 1224, 2879, 1225, 2880, 
         1219, 2878, 1220, 1221}], 
        Line3DBox[{983, 979, 2785, 980, 1984, 971, 2776, 947, 1978, 948, 2761,
          949, 2777, 950, 1979, 951, 2762, 952, 1982, 2783, 975, 1023, 2001, 
         2801, 1024, 2805, 996, 997, 2003, 2803, 1022, 1021, 2002, 2802, 990, 
         1987, 989, 2836, 1094, 2834, 1095, 2040, 1096, 2835, 1097, 2039, 
         1098, 1099}], 
        Line3DBox[{984, 957, 2766, 955, 2765, 956, 2768, 960, 2781, 973, 1981,
          974, 2782, 964, 2770, 965, 2772, 2771, 966, 2888, 1240, 2887, 1235, 
         2883, 1236, 2886, 1238, 1004, 1990, 2796, 1001, 2794, 1002, 2795, 
         1003, 1239}], 
        Line3DBox[{988, 986, 2788, 987, 1986, 981, 2786, 982, 2787, 985, 1985,
          953, 2763, 954, 2764, 945, 1977, 946, 2778, 969, 2775, 2774, 970, 
         1025, 2004, 2804, 994, 2791, 995, 998, 1989, 2792, 999, 2793, 1000, 
         991, 1988, 2789, 992, 2790, 993, 2797, 1007, 1005, 1991, 1006}], 
        Line3DBox[{1058, 1037, 2008, 1036, 2809, 1035, 2034, 1089, 2829, 1088,
          2033, 1087, 2828, 1086, 2032, 1041, 2810, 1039, 2010, 1040, 2811, 
         1014, 1995, 1009, 2798, 1992, 1008, 1993, 1010, 1028, 2806, 2005, 
         1027, 1029, 2820, 2024, 1068, 2822, 1074, 2029, 1075, 2823, 1076, 
         2030, 1078, 2824, 1077, 2027, 1079, 2825, 1070, 1069}], 
        Line3DBox[{1061, 1062, 1060, 3065, 2021, 1056, 2018, 1057, 2817, 1054,
          2017, 1055, 2818, 1044, 2012, 1043, 2011, 1042, 2812, 1045, 2015, 
         1048, 2814, 1047, 2014, 1046, 2813, 1020, 1999, 1998, 1013, 1012, 
         2799, 1994, 1011, 1026, 2833, 2038, 1093, 2831, 1092, 2037, 1085, 
         2031, 1084, 2827, 1081, 2028, 1073, 2821, 1072, 2026, 1071, 1080}], 
        Line3DBox[{1082, 1083, 2826, 1067, 2023, 1066, 2025, 1064, 2819, 1063,
          2022, 1065, 2036, 1091, 2832, 1090, 2035, 2830, 1019, 1018, 2000, 
         1015, 1996, 2800, 1016, 1997, 1017, 2007, 1033, 2808, 1034, 2013, 
         1030, 2807, 1031, 2006, 1032, 2009, 1038, 2816, 1053, 2019, 1059, 
         2020, 1052, 2815, 1050, 2016, 1049, 1051}], 
        Line3DBox[{1140, 2057, 1137, 1134, 2853, 1135, 3068, 2055, 1136, 1148,
          2856, 1142, 3070, 2059, 1100, 1101, 2837, 1102, 2841, 2043, 1106, 
         1107, 2840, 2839, 1108, 2068, 1158, 2866, 1183, 2867, 1184, 2075, 
         1185, 2868, 1174, 2864, 1175, 1178}], 
        Line3DBox[{1156, 1154, 2067, 2859, 1155, 1157, 2072, 1168, 2073, 1171,
          2101, 2877, 1217, 1218, 2102, 1197, 2080, 2870, 1196, 1195, 2083, 
         2084, 1200, 2117, 1261, 2894, 1260, 2116, 1259, 2123, 1267, 2124, 
         1253, 2893, 1254, 2113, 1255, 2112, 1256, 2130, 3073, 1282, 1283, 
         1284}], 
        Line3DBox[{1169, 1163, 2069, 2860, 1161, 1159, 2096, 1215, 2099, 1198,
          2081, 2871, 1189, 1187, 2078, 1193, 2093, 3071, 1210, 1208, 2089, 
         2090, 1206, 2895, 1262, 2120, 1264, 2118, 1248, 2109, 1251, 2892, 
         1244, 2107, 1242, 2133, 1287, 2904, 1288, 2134, 1273, 2126, 1275, 
         1277}], 
        Line3DBox[{1177, 1176, 2869, 1186, 2076, 1182, 2865, 1131, 2852, 1126,
          2051, 2849, 1127, 1128, 2052, 2850, 1110, 1109, 2060, 2854, 1146, 
         1145, 2061, 2855, 1147, 2857, 1149, 1133, 2054, 3067, 1132, 1139, 
         2056, 3069, 1138, 2058, 1141, 1232}], 
        Line3DBox[{1179, 1167, 2862, 1165, 2071, 1166, 2098, 3072, 1214, 1212,
          2095, 2876, 1213, 1192, 2077, 1191, 2088, 2874, 1205, 1202, 2085, 
         1201, 2087, 2873, 1204, 2086, 1203, 2122, 1266, 2897, 1252, 2110, 
         1247, 2890, 1246, 2115, 1258, 2114, 1257, 2903, 1286, 2131, 1285, 
         2132, 1269, 1268}], 
        Line3DBox[{1180, 1173, 2863, 1172, 2074, 1125, 2848, 1120, 2048, 2845,
          1121, 1129, 2053, 2851, 1130, 1115, 2046, 2843, 1116, 1114, 2045, 
         3066, 1113, 1144, 2062, 1150, 2065, 2858, 1152, 2066, 1153, 2901, 
         1280, 2128, 1279, 2900, 1229, 2104, 1228, 1227}], 
        Line3DBox[{1181, 1124, 2847, 1123, 2050, 1119, 2047, 2844, 1118, 1117,
          2049, 2846, 1122, 1105, 2042, 1103, 2041, 2838, 1104, 1111, 2044, 
         2842, 1112, 1143, 2063, 2064, 1151, 2898, 1270, 2129, 1281, 2902, 
         1278, 2127, 1231, 2881, 1230, 2105, 1226, 2103, 1223, 1222}], 
        Line3DBox[{1276, 1271, 2125, 1272, 2899, 1274, 2135, 1290, 2136, 1289,
          2905, 1243, 2108, 1245, 2111, 1250, 2891, 1249, 2119, 1265, 2121, 
         1263, 2896, 1207, 2092, 2091, 1209, 1211, 2875, 2094, 1194, 2079, 
         1188, 1190, 2872, 2082, 1199, 2100, 1216, 2097, 1160, 1162, 2861, 
         2070, 1164, 1170}], 
        Line3DBox[{1344, 1342, 2953, 1343, 2956, 1347, 2957, 1345, 2954, 1346,
          2955, 1337, 2948, 1335, 2947, 2946, 1336, 2952, 1341, 2951, 1338, 
         2949, 1339, 2950, 1340, 2966, 1357, 2967, 1355, 2965, 1356, 1361}], 
        Line3DBox[{1363, 1362, 2976, 1378, 2979, 1380, 2980, 1381, 3025, 1432,
          3027, 1433, 3029, 1434, 3028, 1326, 2936, 2937, 1325, 2938, 1321, 
         2932, 1320, 2933, 1322, 2943, 1330, 2940, 1329, 2942, 1333, 1332}], 
        Line3DBox[{1365, 1364, 2969, 1366, 2978, 1379, 2977, 1377, 2975, 1376,
          2974, 1375, 3026, 1431, 3024, 1324, 2934, 2935, 1323, 2939, 1318, 
         2930, 1317, 2931, 1319, 2944, 1334, 2945, 1331, 2941, 1328, 1327}], 
        Line3DBox[{1374, 1369, 2971, 1370, 2996, 1402, 2995, 1397, 2992, 1398,
          2994, 1401, 3006, 1407, 3005, 3004, 1406, 3001, 1390, 2986, 1384, 
         2982, 1382, 2981, 1383, 2990, 1396, 2991, 1395, 2988, 1393, 1394}], 
        Line3DBox[{1392, 1391, 2989, 1386, 2983, 1385, 2984, 1387, 2987, 1389,
          2985, 1388, 2999, 1404, 3000, 1405, 3002, 3003, 1400, 2993, 1399, 
         2998, 1403, 2997, 1371, 2972, 1368, 2970, 1367, 2973, 1372, 1373}], 
        Line3DBox[{1413, 1412, 3009, 1411, 3010, 1414, 3011, 1415, 3016, 1421,
          3017, 1422, 3019, 1420, 3014, 1306, 2920, 2921, 1305, 2919, 1304, 
         2922, 1307, 2923, 1308, 2958, 1348, 2959, 1349, 2961, 1352, 1360}], 
        Line3DBox[{1417, 1416, 3012, 1409, 3007, 1408, 3008, 1410, 3020, 1423,
          3018, 1419, 3013, 1418, 3015, 1311, 2925, 2926, 1310, 2924, 1309, 
         2964, 1354, 2963, 1353, 2962, 1351, 2960, 1350, 2968, 1358, 1359}], 
        Line3DBox[{1425, 1424, 3021, 1426, 3023, 1429, 3037, 1442, 3039, 1443,
          3040, 1438, 3032, 1435, 3030, 1300, 2912, 2913, 1299, 2911, 1298, 
         2914, 1301, 2915, 1296, 2909, 1295, 2910, 1297, 2928, 1314, 1313}], 
        Line3DBox[{1430, 1428, 3022, 1427, 3035, 1440, 3036, 1441, 3038, 1437,
          3031, 1436, 3034, 1439, 3033, 1303, 2917, 2918, 1302, 2916, 1292, 
         2906, 1291, 2907, 1293, 2908, 1294, 2927, 1312, 2929, 1315, 1316}]}, {
        GrayLevel[0.2], 
        Line3DBox[{1459, 3076, 1461, 1535, 1997, 1534, 1999, 3323, 1531, 1530,
          1995, 3101, 1526, 3099, 1528, 1492, 1987, 3088, 1494, 3090, 1496, 
         3092, 1498, 1500}], 
        Line3DBox[{1471, 1472, 3080, 1469, 3079, 1470, 3309, 1985, 1468, 1448,
          3302, 1978, 1447, 1606, 3337, 2030, 1605, 2028, 1601, 2025, 1600, 
         1603}], 
        Line3DBox[{1475, 1476, 3084, 1481, 3083, 1480, 2055, 1666, 3144, 1679,
          3142, 1678, 2061, 1643, 2045, 1644, 3133, 1634, 2041, 1635, 2088, 
         1703, 2079, 2078, 1704, 2102, 1726, 1727}], 
        Line3DBox[{1478, 1477, 2057, 1677, 3141, 1662, 3135, 1660, 2054, 1661,
          3138, 1667, 2062, 1645, 3131, 1642, 2044, 1641, 2085, 1712, 3147, 
         1713, 2094, 2093, 1705, 2080, 1706, 1722}], 
        Line3DBox[{1479, 1473, 3081, 1474, 3082, 1466, 1983, 1467, 3078, 1465,
          3077, 1464, 2059, 1680, 3143, 1681, 2060, 1648, 2046, 1636, 2042, 
         1637, 2077, 1702, 3146, 1701, 2082, 2081, 1707, 2101, 1720, 1721}], 
        Line3DBox[{1485, 1484, 3085, 1453, 3075, 1451, 3074, 1452, 3306, 1981,
          1444, 1445, 3301, 1977, 1446, 1450, 3303, 1979, 1449, 2029, 1607, 
         2031, 1595, 2022, 1594, 1602}], 
        Line3DBox[{1488, 1489, 3310, 1986, 1486, 1487, 3086, 1483, 3308, 1984,
          1482, 1598, 3336, 2027, 1604, 2026, 1596, 1597, 3120, 2023, 1593, 
         1592}], 
        Line3DBox[{1510, 1509, 3095, 1511, 3096, 1517, 3097, 1508, 3315, 1507,
          3314, 1989, 1504, 1907, 3328, 1539, 3324, 2001, 1538, 2005, 1541, 
         1910, 3339, 2038, 1624, 2035, 1623, 1630}], 
        Line3DBox[{1515, 1991, 1499, 1497, 3091, 1495, 3089, 1493, 3087, 1905,
          3325, 2002, 1527, 1525, 3100, 1520, 3320, 1992, 1519, 1998, 1533, 
         1532, 3322, 1996, 1460, 1458}], 
        Line3DBox[{1518, 1516, 3319, 1502, 3312, 1501, 3311, 1988, 1491, 1490,
          3102, 1909, 3326, 2003, 1529, 1522, 3098, 1993, 1521, 1524, 3321, 
         1994, 1523, 2000, 1536, 1537, 3129, 1629}], 
        Line3DBox[{1542, 3103, 1543, 1548, 2013, 3332, 1566, 1567, 2015, 3334,
          1569, 1611, 2032, 3123, 1608, 3121, 1609, 3125, 1613, 1612, 2039, 
         1631}], 
        Line3DBox[{1549, 1546, 2007, 3330, 1547, 1565, 2014, 3333, 1568, 1558,
          2010, 3107, 1559, 3122, 1610, 3124, 1615, 1614, 2040, 3130, 1632, 
         1633}], 
        Line3DBox[{1550, 3104, 1551, 1555, 2009, 3105, 1556, 1560, 2012, 3109,
          1561, 3108, 1562, 1620, 2034, 3128, 1621, 1622}], 
        Line3DBox[{1553, 2008, 1552, 1585, 3116, 1582, 3114, 2017, 1581, 1587,
          3335, 2019, 1574, 1575, 3111, 1577}], 
        Line3DBox[{1557, 3106, 1554, 1544, 2006, 3329, 1545, 1563, 2011, 3331,
          1564, 1616, 2033, 3126, 1617, 3127, 1618, 1619}], 
        Line3DBox[{1578, 3112, 1573, 1572, 2020, 3117, 1588, 3118, 1589, 1583,
          2018, 3115, 1584, 1586}], 
        Line3DBox[{1579, 3113, 1580, 1570, 2016, 3110, 1571, 1576, 2021, 3119,
          1590, 1591}], 
        Line3DBox[{1627, 1625, 2036, 1626, 2037, 1628, 3338, 1599, 2024, 1462,
          1982, 3307, 1463, 1540, 2004, 3327, 1906, 3313, 1503, 3093, 1505, 
         3094, 1506, 1514, 1990, 3318, 1908, 3316, 1512, 3317, 1513, 1751}], 
        Line3DBox[{1668, 1671, 3139, 1672, 2056, 1663, 3136, 1659, 3134, 1658,
          2065, 1682, 2063, 1647, 3132, 1646, 2087, 1715, 2091, 2089, 1708, 
         2083, 1710, 1724, 3149, 1725}], 
        Line3DBox[{1673, 3140, 1674, 1776, 2116, 1777, 2118, 2119, 1780, 3162,
          1768, 2110, 1767, 3366, 1792, 2127, 1791, 3364, 1740, 2104, 1739, 
         1743}], 
        Line3DBox[{1676, 1675, 2117, 3361, 1779, 1778, 2120, 2121, 1781, 2122,
          1782, 3163, 1924, 2129, 1794, 3365, 1793, 2128, 1746, 3151, 1745, 
         1916}], 
        Line3DBox[{1688, 1687, 2072, 1692, 2096, 2097, 1718, 1719, 3345, 2098,
          1650, 2047, 1649, 2048, 1651, 2051, 1638, 3340, 1639, 2068, 1689, 
         3352, 1917, 3350, 1747, 3353, 1749, 3357, 1920, 2106, 1754, 3154, 
         1752, 3152, 1753, 3155, 1757, 1758}], 
        Line3DBox[{1694, 1693, 2073, 1695, 2099, 2100, 1717, 2095, 1653, 2049,
          1652, 2053, 1657, 2052, 1640, 2043, 1454, 1455, 3305, 1980, 1456, 
         3304, 1457, 3356, 1919, 3355, 1918, 3351, 1748, 3354, 1750, 3158, 
         1755, 3153, 1756, 3156, 1759, 1760}], 
        Line3DBox[{1723, 1711, 2084, 1709, 2090, 2092, 1716, 3148, 1714, 2086,
          1684, 2064, 1683, 3145, 1912, 2066, 1665, 3137, 1664, 3342, 1911, 
         2058, 1670, 1669}], 
        Line3DBox[{1729, 1728, 3346, 1913, 3348, 1734, 3347, 1733, 3159, 1761,
          3157, 1700, 2075, 1699, 3344, 1698, 2076, 1697, 3343, 1696, 2074, 
         1656, 3341, 1654, 2050, 1655, 2071, 1691, 2070, 2069, 1685, 2067, 
         1686, 1690}], 
        Line3DBox[{1731, 1730, 2132, 1801, 3165, 1802, 2135, 2134, 1798, 1771,
          3360, 2112, 1769, 1770}], 
        Line3DBox[{1744, 1735, 2103, 1736, 3150, 1737, 2114, 1764, 3160, 1762,
          2108, 2107, 1763, 1787, 3362, 2124, 1783, 1784}], 
        Line3DBox[{1774, 3161, 1775, 1773, 2113, 1772, 2133, 3368, 1925, 2136,
          1800, 3367, 1799, 2131, 1732, 1914}], 
        Line3DBox[{1786, 1785, 2123, 1766, 2109, 3359, 1922, 2111, 1765, 3358,
          1921, 2115, 1742, 3349, 1741, 2105, 1738, 1915}], 
        Line3DBox[{1797, 1796, 2130, 3164, 1795, 1790, 2126, 3363, 1789, 2125,
          1788, 1923}], 
        Line3DBox[{1815, 1936, 3188, 1807, 3170, 1806, 3169, 1927, 3175, 1809,
          3174, 1808, 3171, 1928, 3173, 3172, 1929, 3290, 1973, 3292, 1975, 
         3300, 1904, 3299, 1903, 3297, 1897, 3283, 1895, 3281, 1894, 1968}], 
        Line3DBox[{1817, 1816, 3189, 1814, 3187, 1805, 3168, 1804, 3167, 1803,
          3166, 1926, 3176, 1930, 3178, 3177, 1931, 3293, 1976, 3294, 1900, 
         3291, 1974, 3298, 1902, 3296, 1901, 3295, 1896, 3282, 1969, 1970}], 
        Line3DBox[{1824, 1941, 3201, 1943, 3205, 1827, 3204, 1819, 3191, 1818,
          3190, 1937, 3199, 1822, 3195, 3194, 1939, 3284, 1971, 3286, 1867, 
         3241, 1952, 3242, 1953, 3244, 1954, 3245, 1863, 3237, 1862, 1949}], 
        Line3DBox[{1826, 1944, 3202, 1825, 3200, 1942, 3203, 1821, 3193, 1820,
          3192, 1938, 3198, 1823, 3197, 3196, 1940, 3288, 1972, 3289, 1899, 
         3287, 1898, 3285, 1870, 3247, 1869, 3246, 1868, 3243, 1861, 1948}], 
        Line3DBox[{1837, 1838, 3214, 1835, 3213, 1836, 3217, 1840, 3216, 1839,
          3215, 1831, 3208, 1832, 3210, 3209, 1830, 3207, 1828, 3206, 1829, 
         3212, 1833, 3211, 1834, 3232, 1853, 3231, 1850, 3230, 1851, 1852}], 
        Line3DBox[{1855, 1854, 3233, 1843, 3220, 1945, 3222, 1946, 3223, 1947,
          3226, 1813, 3184, 1934, 3186, 3185, 1935, 3273, 1888, 3269, 1965, 
         3278, 1967, 3280, 1879, 3261, 1878, 3260, 1960, 3268, 1963, 1964}], 
        Line3DBox[{1856, 1844, 3221, 1842, 3219, 1841, 3218, 1812, 3183, 1811,
          3182, 1810, 3179, 1932, 3181, 3180, 1933, 3270, 1966, 3279, 1893, 
         3277, 1892, 3276, 1887, 3267, 1886, 3266, 1885, 3265, 1961, 1962}], 
        Line3DBox[{1857, 1858, 3235, 1860, 3236, 1859, 3234, 1848, 3228, 1849,
          3229, 1847, 3227, 1845, 3225, 3224, 1846, 3272, 1889, 3271, 1890, 
         3274, 1891, 3275, 1880, 3262, 1881, 3263, 1884, 3264, 1882, 1883}], 
        Line3DBox[{1866, 1865, 3240, 1864, 3238, 1950, 3239, 1951, 3254, 1959,
          3255, 1875, 3253, 1958, 3259, 3258, 1877, 3257, 1876, 3256, 1873, 
         3250, 1956, 3251, 1872, 3249, 1871, 3248, 1955, 3252, 1874, 1957}]}, {
        GrayLevel[0.2], 
        Line3DBox[{2191, 2190, 2788, 2192, 3310, 2178, 3080, 2151, 2766, 2152,
          3085, 2180, 3081, 2179, 2784, 2183, 3084, 2182, 2853, 2326, 3141, 
         2329, 3139, 2328, 3069, 3342, 2332, 3151, 2385, 2384, 2900, 3364, 
         2379, 2378, 2881, 3349, 2377, 3150, 2376, 2382, 2903, 3367, 2432, 
         3165, 2423, 2422, 2899, 3363, 2426, 2427}], 
        Line3DBox[{2233, 2166, 3076, 3041, 2800, 3322, 2745, 2221, 2799, 3321,
          2744, 3047, 2806, 2227, 2801, 3324, 2746, 2229, 2804, 3327, 2747, 
         2398, 2888, 3356, 2400, 2391, 2884, 3352, 2392, 2349, 2866, 2347, 
         2865, 3343, 2348, 2341, 2863, 2342}], 
        Line3DBox[{2239, 2232, 3103, 2231, 2808, 2238, 3330, 2237, 2813, 2225,
          3323, 2220, 2798, 3320, 2742, 3098, 2743, 2230, 2805, 3328, 2228, 
         2203, 2791, 3313, 2204, 2399, 2887, 3355, 2390, 2386, 2882, 3350, 
         2387, 2350, 2867, 3344, 2346, 2345, 2869, 2353}], 
        Line3DBox[{2257, 2256, 2752, 3065, 3119, 2268, 3115, 2269, 3116, 2242,
          2809, 2749, 3128, 2296, 3127, 2294, 3125, 2293, 2835, 2756, 3130, 
         2198, 3092, 3091, 2199, 2218, 2797, 3319, 2214, 3095, 2211, 2210, 
         2795, 3317, 2216, 3156, 2403, 3155, 2373, 2366, 2878, 3346, 2364, 
         2365}], 
        Line3DBox[{2258, 2254, 3110, 2255, 3118, 2270, 2817, 2267, 3114, 2248,
          3108, 2247, 2829, 2295, 3126, 2287, 3121, 2288, 3124, 2292, 2834, 
         2197, 3090, 3089, 2195, 2194, 2790, 3312, 2200, 3096, 2213, 2212, 
         2794, 3316, 2215, 3153, 2401, 3152, 2372, 2369, 2880, 3348, 2370, 
         2375}], 
        Line3DBox[{2260, 2240, 3104, 2241, 3106, 2234, 2807, 2748, 3332, 2252,
          2814, 2253, 3333, 2246, 2811, 2224, 3101, 3100, 2223, 3046, 2803, 
         3326, 2205, 3044, 2792, 3314, 2206, 3093, 2207, 2388, 2883, 3351, 
         2389, 2395, 2885, 3353, 2396, 3157, 2404, 2351, 2868, 2352}], 
        Line3DBox[{2263, 2264, 3112, 2262, 3111, 2261, 2816, 2243, 3105, 2236,
          3329, 2235, 2812, 2750, 3334, 2245, 2810, 2244, 3107, 2222, 3099, 
         3045, 2802, 3325, 2226, 3102, 2202, 2201, 2793, 3315, 2208, 3094, 
         2209, 2397, 2886, 3354, 2394, 2393, 2889, 3357, 2405, 3159, 2406, 
         2343, 2864, 2344}], 
        Line3DBox[{2266, 2265, 3113, 2259, 2815, 2751, 3117, 2272, 3335, 2271,
          2818, 2251, 3109, 2250, 3331, 2249, 2828, 2291, 3123, 2290, 3122, 
         2289, 2836, 2196, 3088, 3087, 2193, 3043, 2789, 3311, 2740, 3097, 
         2219, 2217, 2796, 3318, 2741, 3158, 2402, 3154, 2371, 2367, 2879, 
         3347, 2368, 2374}], 
        Line3DBox[{2275, 2273, 2819, 2274, 2827, 2282, 2823, 2168, 2777, 2736,
          3303, 2141, 2778, 2160, 2770, 2158, 2769, 2159, 2841, 2308, 2850, 
         2320, 2851, 3055, 2846, 2314, 2876, 2355, 3146, 2354, 2872, 2871, 
         2357, 2877, 3061, 2361}], 
        Line3DBox[{2277, 2278, 2826, 2753, 3120, 2276, 2821, 2280, 2824, 2283,
          3337, 2139, 2761, 2140, 2764, 2734, 3301, 2137, 2782, 2171, 2780, 
         2172, 2837, 2304, 3143, 3057, 2854, 3052, 2843, 2312, 3133, 3049, 
         2838, 2305, 2874, 2359, 3147, 2358, 2875, 3071, 3060, 2870, 2356, 
         2362, 3149, 2363}], 
        Line3DBox[{2298, 2299, 2832, 2300, 2831, 3338, 2286, 2281, 2822, 2142,
          2762, 2144, 2775, 2162, 2772, 2163, 3063, 3305, 2737, 2165, 2840, 
         2306, 2849, 3054, 2845, 3053, 2844, 2313, 3072, 3345, 2757, 3059, 
         2861, 2860, 3058, 2859, 2338, 2339}], 
        Line3DBox[{2302, 3129, 2303, 2297, 2830, 3048, 2833, 3339, 2301, 2279,
          2820, 2173, 2783, 3307, 2145, 2143, 2774, 2161, 2771, 3304, 2157, 
         2156, 2773, 2164, 2839, 3340, 2307, 2319, 2852, 2317, 2848, 3341, 
         2318, 2315, 2847, 2316, 2862, 2340}], 
        Line3DBox[{2416, 2417, 3161, 2413, 2893, 2758, 3362, 2412, 2892, 2411,
          3359, 2891, 2407, 2408, 3162, 2897, 2421, 2425, 3163, 2898, 2424, 
         2337, 3145, 2858, 2321, 3134, 2322, 3138, 2327, 2857, 2336, 3144, 
         2335, 2856, 2176, 3078, 2154, 2767, 2147, 3074, 2148, 2768, 2155, 
         3309, 2189, 2787, 2187, 3308, 2185, 2785, 2184, 2754}], 
        Line3DBox[{2420, 2331, 3140, 2330, 2894, 2759, 3361, 2419, 2895, 2896,
          2418, 2360, 3148, 2873, 2311, 3132, 2309, 2842, 3050, 3131, 2310, 
         3066, 3051, 2855, 2333, 3142, 2334, 3070, 2174, 3077, 2170, 2779, 
         2169, 3306, 2738, 2781, 2146, 2763, 2138, 3302, 2735, 2776, 2167, 
         3336, 2285, 2825, 2284, 2755}], 
        Line3DBox[{2431, 2430, 3062, 3073, 3164, 2415, 3360, 2414, 2904, 2760,
          3368, 2905, 2433, 2409, 3160, 2410, 3358, 2890, 2380, 2381, 3366, 
         2902, 2428, 2429, 3365, 2901, 2383, 2325, 3137, 3136, 2323, 3067, 
         3056, 3135, 2324, 3068, 2181, 3083, 2175, 3064, 3042, 3082, 2153, 
         3075, 2150, 2765, 2149, 3079, 2177, 2786, 2186, 3086, 2188, 2739}], 
        Line3DBox[{2522, 2523, 3206, 2526, 2951, 2548, 3271, 2691, 3013, 3269,
          2692, 2694, 3019, 3279, 2704, 2703, 3034, 3294, 2725, 2724, 3032, 
         3292, 2709, 2708, 3029, 3289, 2717, 2716, 3026, 3286, 2616, 2615, 
         2999, 3256, 2661, 2642, 2986, 2643}], 
        Line3DBox[{2524, 2525, 3207, 2527, 2952, 2549, 3272, 2695, 3015, 3273,
          2690, 2689, 3014, 3270, 2693, 2702, 3033, 3293, 2727, 2723, 3030, 
         3290, 2711, 2710, 3028, 3288, 2722, 2715, 3024, 3284, 2626, 2625, 
         3000, 3257, 2662, 2663, 3001, 2664}], 
        Line3DBox[{2531, 2533, 3210, 2535, 2947, 2537, 3225, 2478, 2926, 3186,
          2468, 2466, 2921, 3181, 2471, 2462, 2918, 3178, 2452, 2450, 2913, 
         3173, 2456, 2492, 2937, 3197, 2505, 2496, 2935, 3195, 2498, 2500, 
         3003, 3259, 2667, 2669, 3005, 2671}], 
        Line3DBox[{2543, 2544, 3231, 2591, 2967, 2595, 3263, 2673, 3007, 3260,
          2674, 2677, 3010, 3266, 2685, 2684, 3035, 3295, 2728, 2714, 3023, 
         3283, 2634, 2633, 2979, 3246, 2628, 2627, 2978, 3245, 2599, 2598, 
         2983, 3248, 2639, 2648, 2991, 2651}], 
        Line3DBox[{2546, 2547, 3232, 2592, 2966, 2594, 3262, 2675, 3008, 3261,
          2676, 2678, 3011, 3267, 2687, 2686, 3036, 3296, 2729, 2730, 3037, 
         3297, 2618, 2617, 2980, 3247, 2630, 2629, 2977, 3244, 2601, 2600, 
         2984, 3249, 2640, 2649, 2990, 2650}], 
        Line3DBox[{2551, 2550, 3212, 2539, 2949, 2540, 3274, 2696, 3018, 3278,
          2705, 2699, 3017, 3277, 2700, 2701, 3031, 3291, 2726, 2731, 3040, 
         3300, 2721, 2719, 3027, 3287, 2624, 2623, 2974, 3241, 2614, 2613, 
         2985, 3250, 2641, 2637, 2982, 2638}], 
        Line3DBox[{2552, 2542, 3211, 2541, 2950, 2545, 3275, 2697, 3020, 3280,
          2706, 2698, 3016, 3276, 2680, 2679, 3038, 3298, 2732, 2733, 3039, 
         3299, 2720, 2718, 3025, 3285, 2622, 2621, 2975, 3242, 2620, 2619, 
         2987, 3251, 2644, 2635, 2981, 2636}], 
        Line3DBox[{2553, 2554, 3213, 2557, 2956, 2569, 3236, 2579, 2960, 3220,
          2580, 2576, 2959, 3219, 2577, 2481, 2927, 3187, 2441, 2440, 2910, 
         3170, 2446, 2510, 2940, 3200, 2511, 2519, 2945, 3205, 2516, 2515, 
         2970, 3238, 2606, 2611, 2996, 2659}], 
        Line3DBox[{2558, 2559, 3217, 2570, 2957, 2572, 3234, 2583, 2962, 3222,
          2582, 2574, 2958, 3218, 2575, 2442, 2908, 3168, 2443, 2444, 2909, 
         3169, 2445, 2513, 2943, 3203, 2520, 2521, 2944, 3204, 2518, 2517, 
         2972, 3239, 2610, 2609, 2995, 2658}], 
        Line3DBox[{2560, 2561, 3214, 2555, 2953, 2556, 3235, 2596, 2968, 3233,
          2597, 2581, 2961, 3221, 2578, 2482, 2929, 3189, 2480, 2479, 2928, 
         3188, 2454, 2453, 2942, 3202, 2509, 2508, 2941, 3201, 2512, 2514, 
         2973, 3240, 2612, 2607, 2971, 2608}], 
        Line3DBox[{2566, 2529, 3208, 2528, 2948, 2538, 3227, 2476, 2924, 3184,
          2475, 2463, 2919, 3179, 2464, 2460, 2916, 3176, 2459, 2447, 2911, 
         3171, 2448, 2489, 2938, 3198, 2506, 2507, 2939, 3199, 2503, 2502, 
         2993, 3253, 2656, 2665, 3006, 2672}], 
        Line3DBox[{2571, 2563, 3215, 2562, 2955, 2568, 3229, 2587, 2964, 3226,
          2586, 2472, 2922, 3182, 2473, 2434, 2906, 3166, 2435, 2438, 2914, 
         3174, 2457, 2490, 2932, 3192, 2484, 2483, 2930, 3190, 2487, 2501, 
         2998, 3255, 2655, 2654, 2994, 2657}], 
        Line3DBox[{2573, 2565, 3216, 2564, 2954, 2567, 3228, 2584, 2963, 3223,
          2585, 2474, 2923, 3183, 2469, 2436, 2907, 3167, 2437, 2439, 2915, 
         3175, 2458, 2493, 2933, 3193, 2486, 2485, 2931, 3191, 2488, 2494, 
         2997, 3254, 2660, 2652, 2992, 2653}], 
        Line3DBox[{2593, 2589, 3230, 2588, 2965, 2590, 3264, 2681, 3012, 3268,
          2688, 2682, 3009, 3265, 2683, 2712, 3022, 3282, 2713, 2707, 3021, 
         3281, 2632, 2631, 2976, 3243, 2605, 2604, 2969, 3237, 2603, 2602, 
         2989, 3252, 2646, 2645, 2988, 2647}], 
        Line3DBox[{2670, 3004, 2668, 2666, 3258, 3002, 2499, 2497, 3194, 2934,
          2495, 2504, 3196, 2936, 2491, 2455, 3172, 2912, 2449, 2451, 3177, 
         2917, 2461, 2470, 3180, 2920, 2465, 2467, 3185, 2925, 2477, 3224, 
         2536, 2946, 2534, 3209, 2532, 2530}]}}}, 
     VertexNormals -> CompressedData["
1:eJzsvHk01WHbNmxICqE0iUIiRIYkUa5IyJCEEqVUJCpKijQQpVRUKFNK5jHz
zJl5nrdp2+zZnpUGMn/7Wd/79/e+z/c893vf77vu/c9e61i/de3rnI7zOPZa
e8td8jrlysfDw6O0joeHn/ue/wrTXvB4FOqbLxUIr+VAifFhizKlOpA83ZHG
v2McpMQkDm8wYcNDlsz4wdvV0Hg9PI0eMQoGqT/REykOKCg1ac2a1cBdjSoZ
iX11IBxjNVQmxIETJrittndH4VTpix8ZjQBhWX+1FYO+w5+ZRr+zhQBufSrH
05xqQHy1c4PRdg6EjTmzo56NQqnYsuuVcSJQRpe2X/1Gg+w9neu9KobhRn+E
9c/GYfgYFXVkuY4GRvfikm8PE4FUbi+5jTgMQWMnk35psEAZ/1b399AwfP08
qdSzbxB+xc//SNhFh6n5yfNP5EjAFo+QMN1NAkOTX4FfdtLhxeqaR+LKg+CS
wZHUjqyG6Ad8r+6fZkOkt/CfyTEc+NxYui2aUwGr4oOUAn0Z8KDEQjNoBxnu
yYyfv3ukAB7YBZslhTKg0+RA1A5VMlDPCR6uiG9CdlcM9m0ks2GfULTBO9tR
0HGcJG2eqkeP3QpsH55gwNNb1hb7eclAXtZofamGRS235pxrVJkwzXs5K5Y8
Cr6lahrFl3uRanZ2+uZqOugrOcUfjSTBZhFK4/40LNKRQymXU5mgOuC4Kubc
MJTafd30XJ4MkbK+1Xy3GSA35RIHsRUwcG+GuEWTDNZf5l4JhTBgeq33vIVW
AdzVc3J6YU2D3tfp0YdIVAiyHcbt+ZkC7zVVpHVXk+EnYXqDkAUDcqQiPO1o
9Wh04gPn+C4aPDt0mvylggqKUY1y2Ye+IZmYtsOGFAZoVlXpKLaRoFj5Vuf6
3fFQz9l69bkBDW7L7t1q0k+F3fPZMo6/S8B8z1RIJIYBH6eGhJtrSGAkV5on
NFYIKYLyr3eHsWDnM+MPPmYEUMQVbPJbioI7q8aOHXrIAow7Qb73CAH2d0QI
aTnmQ7fxRRnhegZoP7Ktts0nAYdSEss/XImma3R8V99kwHt2yqjqVjJsTcX0
Z4dVo/bfvxqfx5CgYuqbtE4FHbLEwz2Vzvei+dTjO7FraVC1IdKl7zMVxCbC
/HvVGtFV9d5U65s4dG7biJ/XDTZ4dLwj15fVIMuNNsgpHoPa+BG5q4UDPl0f
71ANm5FWc925T/o4tK3tLnzTY0PEclCugmQTEprsPWZn2owaVcOcHrZyYA1p
uwc7GoN4T85cMaytQfkXdeK3e7FhcY/HG+WrOPRLV/mM/a4WlCnL6/jj+xT4
8iZidWVakLHqjvjXX6vBs8Wo+8NtNogq3Gv/4oFD938wom7cB+Cxuh77/MB3
6Cf1i1XZtaBLR2Mess62oHiCwe1ILt51dqHH1h0g79Nmi6lbOJTMG8UreosN
8Zht9X4fq2HN+3jS551YZBLr39Mvx4RnIu6xwduwaPWBpzl/djQhXq3kgeOH
2NBXcJ7nijYOTXdeO4iVHEbSviU1W6/hQDj+CLvIgAnBfz/80oweRIeLt6Rg
CifAOCvbhI/NAGflmn0Nvr1IUkn2Q27KGLTtGWdlZ7Kgx+ad77fLGOQSn63l
tX0Mulx1Je13ssCpG6UTHo2ghv5PR/bKTsDkh+Trat4MINwRD1Z7RIDcLVNi
vhwqMMLA4f09AnxuBAO+qVEIyBeuseLOkfff5zELu7BIfzForZ/bMPyiv71q
zZ0XBzELj7GPWKR9KGy879woqHfdDLEnsoFCjvqUGt2Euq3q+NY0DCNWZkCa
ZT0N+lJygnO5PMNf6tPixOWl3y1OGU5cXhqtCGOVVgwjNC75cJc6A2LfBO+s
PUYCN/eDL+9PdiHq96Yv2aWT4EF2D7qqQoErAldCG3ZhEOVSY8xtiUnokTqm
97iCAjcWFw8WFWGQQ9sgaTUwoHjmu5d8Hglyb9r272FXoUO3tFSoGDK4MH5L
6fPQQG9n5ts7KhgI2qRQ/iF3Emw46XXa5lRYJeDvZ7+uG1r8z6ZNvWXA9oHO
AM/XJFB7TvDwvNwIxvu/dty6wAKj/Ru/a6kTQL0xJzWEW3elV9ONc8+58XeW
+4j740BhYnbxu0kJ7KHYjPa8Z8OCOG/fxDMcSBibJHsW5UCgBVH8hh8L9l06
uvfvYQJc1CrvliMVog3uWq6znizQ9tE0jtMhQPf19Ieqh8qRGPklJl+ZO7+p
z7M9xAiwxygwKtCoCVE+pmtS3NmwrehKo8hZHAxrH3iduQjowhhvLlaSDSEa
cqfUhXCweI/9qSO6FfFn9ganzjMhh2HThNonoM0xd3VyXTeqm09mHC9kwsMk
zsvkt3jQuzQg2PO8B+U//2qd8pMFo2eO94uSx6BJw+u34VgHMr//KaabGxfR
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
2J94vHzPaAga0ofamQwOup19Wt2nloMyIpTvH9/G3Qv1J/e9e/cNFVT76vVJ
cVDQwpM9lvdHQDbB/FJCbSO6JerHf5bAQea0hD/++4bgjGjvpXFiKbI44TzV
bs319T0UEd60EXiYnHohobkarXq5zfKG5hRywvZiDP/je/KAA+FRK5Uo2GPg
RbLZFHqgKnitRAkDU/fqCyU8CtEySceXMMVBVVWv8ccMhmDNYvSDzk/5SHM+
6hTHk4OKJILjMmtGQDJ3qTvrYSGyrMHPmFhPoRfvbLNl1TDcuWg9l6aUh6hr
FzYIZdBgz44c1dG4YVjWyhZIFySh7xtVOo6TJ+FBcErcs6EhOLLRw/ejHhl5
uDKf7FuhwDY/56D7M8OwdpdIt80sBWVKplu8l5mEo5tuvfWc5vqqTPYL+gYK
suHPvvf8IBX0rgX9PCg5Cq/HteIjXCmIcv31Ic0EGvjAxXb1nBGwiwimiVYR
UdCI4srMWwpggj9KSdiOwBuV+AV7MyoKw6heeyJJB5uvRw9vEBkB0W8fdZZN
iahQ3G1D3JtJ8DPcu7QqZAiiWo9f1Cgio/GvviqtnnSotLTfoeI8As+St506
WUJAqrsbiAGP2Uh/Zpd6ZcwYxB2NfbT8vB6Vi7wyrzBhobk1uYdocniIO1Rw
F0W0IqMOLYJ9Mgv1ZlUkxL/Ewyd1huD52UrE+qUEBZFsdDwmzuKcNQ60OyxC
XymVIJMb11bwxWzka8w7f6OTy9uKfaEFzcVoVuUhO7CEja6uW9W7tmsM3Pb6
o09BxeiV7xcZtVsc5GwllihRPwLjl0cnG75+RaUhhSbMPxwEBWZdgUeHQLk4
Qe8LfyY64rnSn3p6Cp38FVm4Rotbx6jTy7mnUpBFl6iMmyobdXnyaBwzGwP2
FY0B8fftaMnaK+OU5iRItVhVHzbAworUnzVxv0nocPs4WcVsEmZvOH7ZcQgL
yx78OvewJFQVXo7beoAEjsNMw89SWOhLWD/UPjyJ+P1OBSjnkkElbLy2TmgU
+GnG20UYVOTxGq9mq0kDw70/w2e5vHH57fvDuUeJKH7txXnvPQwoCDsu5r59
FH492ms4HTyBIiq0R0CQARspVcyWR1j4KcTbdLlzHElnHLLz0p8Ek/eteC1z
LCg3NzpFU0hIQ+j9mdn3DKBHRNwrfD4K6/lTb34uw6HCjk06hqkUOLszbLsN
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
QYj/dODj8FEGkv36R2vTByJQ16/v/92JgfRtoymKn+lI+8G9q+pBRLjpL/FE
sR0DdK0dD2zz6ci5rWZpqp0MmnkX+DLKceC97t44LZmCBDOjjfkfUOCZa8D3
jxXj4GR4+JtBNBnZmYUV6VSQoOTkswNnUsaB3vVU0tSKitpF8ncuaWKhJO5t
8iveAZA8Ls9zKZ6FGMen9qKAcdC/ssV9uXsAMq/aBOYlMlErXXLDgYoxyDNf
TLi6HQPMMbPFdWtY6CGM9Qi1jMHpkp9Er90YUHQeK//Cx0LXFnqy5vPGYPKd
7eUdMhjQI3z+4iTEQo9KNnRM7B2G6mcJXYDrhyxn6VSKBRv99FLNusccgam1
dXXjyf2wnHrNMILr20NWZkVUDSkw7BJp8OLXMCDRF9Ocr1SU1/Jz1aEbRKAx
9jrweg5DR+fuFTtFOmrzeHH3zkMCGHTFrmrhDMPu0NvfNHLpqC/oTdSMHx7S
egMKvg0OAUvASi/fg4G69B+7JX6ehM7/9x3x/I/X/wzv+k/i/6vn/I/noPu/
iP9n4/r/e/5/Ng//KPwfnYd/tXj/2fi/yrz8s+//nz3nv6sP/3f37T+aH/6z
5/x38+S/Cl/9s+L6R9/n/5S4/tX685+dz38Uv/0b/zf+b/zf+P/t+H+Xvv1H
6+F/NP//o/Pwb/xfK8//ajrnXw3/R/uj/1v1/7/x/2/8H70X/tX6/J+Vh3/P
0b/xf+P/+vj/Lt37z9Kr/2r6/7/r/H/WOf/ovP2f0m//6vvxn13H/9W8/c/u
/1/N//8u3fVf9X3/LF/56Ut1F8uqDtQsTxQbiXDANyg6ttJjFC669SQfcK6B
xm7xzG4ZDsi5Zh5qvD8KOneOi+T3DUOdzw//nnoauG9mVUj1E0F4kKftvM4g
JPfOOj3bTYfT3t5PidIk+BhwPsz3awU46FasIvgxwN4uou67JBnmCxKOBlgW
wKO7v2T+hDFA6KeEdMhuMhj136xN+lGPkl4MXyfbMGDrjbCjTxdJoBUTFV5+
oxddcca3qNbS4YzZEjoWToJHKg46Z5RIkDYke1JkFx2GjZ/q/dkxCMxOX+tJ
0jBMRL/IXtFiwY5AifNdHcNwOslOtQPDAEXyxhtTNST4fkHo11hNIbw5s96+
04AG5t+Sxp/2U8ESzPZd7y+BZ0/Pd7g/ZMGmg1V3mUcIoFLHRxw/kg/2+XZ5
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
dLAs9bav+dYP15hF7peqGEioqO+DVCgZmPknaRlYXLgq9MWWgv/z72T9d5+b
/Z967/K/u55/1HPs/+r3dP5dnvf+V53/3yWf/6jr+kfl4b+Ko39WPv/ZuPur
vZfxz+ar/9T4X62u/mr78o+ut7/a+/J/x/+O/x3/O/7Pjv+zde9fTQf+o9b/
nxr/q/T3fxcd8u8S/2fr7X8Xv/M/pSf/Wb7p7/jf8b/j/zr+/H9Nz/yz+O2v
qif/XXTgX21f/ip987+6j/9svfTvohP+VfX8j1rn/+7zOM/lyae9iHDMe5sK
TUIAueOHmQLnWojWzvid2U0BfFlH8I46FpjyH2d64vqBOFg4s8S2Cl7eW9Cr
Y8mHERcbUa4SCeL8l32pcWxE81wyGoVaBLBL6WDnp3t9KG/bqfzf62iw4Xtk
+pE7HDiU53hKwrYAxpoX6xQ3soBaqnKw05oCtOAa7SILIkhROL5n7floQ+ii
xxMhg6Cx6mIbZ1MTWM5MHHWu5aPd0j3Br6iD0CEvtNAy7B1slVAfl3hIQwfT
w7VPuFNAmhrTvtKdCu/Fex2qjBnofd1k91MKFYwP+iQiLxJ0k9esXP9zGKVX
vN77WJIG1al+BxfF0EH63O4Vy98PIINlXyoOeJHB/Jnx5lMibEg3jrys20JB
9ycHIsZpDFjao7bqp+Ew3Dgn22z0mobu/E5bVL6RDTtsA6bs/dpBZAXx3DMZ
OmqoIsEOwSCoM1SCL6fTIeBzuWiVCR/ZLlw2p7cABz0q4fG3ruNgmegGmW2f
WWj5dJlw9dZB6GcYv6mPJoOBxdN1Gt4s5KxXdDu2BA+baQqPbV5SQfuEwIAt
zkOBwGWPqvQBdZcRe2fOIGyqDPJu2NgOH9TOBqW/I0NB+YY7bge5UF8/djTo
Lg3yHm0flzlLBaWce4Q3XhTYERupvV1vAE68Cd6dc5ECybmXtt85zYLCeJ+f
F7QFaHce6fOjchxUu932X3UGu67ymFWv9pcgkdZjivlnh8Cbdv5maBwf3Ros
33uYgoeioAbjoFs4OBmisJtM5qFb+zQjO1O7oaBSXkspsh8+43sDUnz5iLR9
v+yB4yPwodqgcKATD99L9HaaBHOQ1ewFfMtaHPxoczquqsmG/X6XOnDKVBjg
dw0P/KpDDOrWoBh7DvhEnDRBv6gwJRNttxH7+1E7ncwQ7PM/91v+uK+Gg4ri
+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
vZEQyMWjLmqbi3v78ZRj0/n34VL4D0L9o8s=
      "]], {
    DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 1}, DisplayFunction :> 
     Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]]}, PlotRange -> {{-3, 2}, {-3, 2}, {-3, 2}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{"k", " ", "x"}], "+", "y"}], "\[LongEqual]", 
         RowBox[{"-", "2"}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"2", " ", "x"}], "-", 
           RowBox[{"2", " ", "y"}]}], "\[LongEqual]", "4"}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.757417997208959*^9, {3.757418079186434*^9, 3.757418129536173*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"1ba3487c-3991-4bd4-a58b-eec3f14e8960"]
}, Open  ]]
},
WindowSize->{759, 833},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1637, 40, 105, "Input",ExpressionUUID->"53996416-b7aa-491a-99c5-e70e2113f315"],
Cell[2220, 64, 254545, 4243, 424, "Output",ExpressionUUID->"0e77ff25-9caf-458f-9130-ec82af83ef37"],
Cell[256768, 4309, 371, 10, 55, "Output",ExpressionUUID->"16757dfe-a355-4b64-b162-100e8110af75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257176, 4324, 608, 15, 55, "Input",ExpressionUUID->"490bd331-42ea-43df-b821-858b8d3c18f6"],
Cell[257787, 4341, 268, 4, 32, "Output",ExpressionUUID->"808af526-8d98-4947-b3c0-ab9449eb7158"]
}, Open  ]],
Cell[258070, 4348, 4176, 129, 121, "Text",ExpressionUUID->"006ce9ab-296c-4e61-9291-0719f5261d79"],
Cell[CellGroupData[{
Cell[262271, 4481, 491, 13, 84, "Input",ExpressionUUID->"33c4add3-7412-4f35-8600-2ded349fbcda"],
Cell[262765, 4496, 780, 22, 62, "Output",ExpressionUUID->"6657a037-292b-43b5-96d5-ebadf124c2e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263582, 4523, 542, 16, 28, "Input",ExpressionUUID->"f6466e9c-8114-4aef-8cdf-eacfc344dbb2"],
Cell[264127, 4541, 329, 8, 32, "Output",ExpressionUUID->"96205366-390a-4b6d-baff-6b342dd08667"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264493, 4554, 1049, 29, 86, "Input",ExpressionUUID->"3c634a36-ed45-4e7b-84d5-5a49e211ea3a"],
Cell[265545, 4585, 207879, 3502, 430, "Output",ExpressionUUID->"1ba3487c-3991-4bd4-a58b-eec3f14e8960"]
}, Open  ]]
}
]
*)

