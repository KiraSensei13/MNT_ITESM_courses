=======
# Load the dataset.csv
dataset = read.csv("Dataset.csv")
# The new dataset must have:
# * Only relevant variables (Not repeated data accross columns)
# column | meaning
# -------+--------
#      2 | Variable
#      4 | Measure
#      6 | Country
#      8 | Year
#      9 | Value
columnsOfInterest = c(2,4,6,8,9)
mydataset         = dataset[, columnsOfInterest]
# * Only the counts related to "All causes of death"
# levels(mydataset$Variable) #print the available values in column "Variable"
interestIndex = mydataset$Variable == "All causes of death"
mydataset     = mydataset[interestIndex, ]
# * And the measure must be "Number of total deaths"
# levels(mydataset$Measure) #print the available values in column "Measure"
interestIndex = mydataset$Measure == "Number of total deaths"
mydataset     = mydataset[interestIndex, ]
# * All years and all countries must be included
# * Save the new database in another csv file called "filteredDatabase.csv"
# TIP: Use matrix and submatrix notation to get the desired values and the write.csv function
write.csv(mydataset, file = "filteredDatabase.csv", row.names = FALSE, na = "")
#     remove row names, omit NAs
#*** PART 2 *************************************************************
# Select another cause of death and measure to get a second dataset.
# Filters to select the number of males deaths due to VIH-AIDS
mydataset     = dataset[, columnsOfInterest]
interestIndex = mydataset$Variable == "HIV-AIDS"
mydataset     = mydataset[interestIndex, ]
interestIndex = mydataset$Measure == "Number of male deaths"
mydataset     = mydataset[interestIndex, ]
mydataset$Year
# With this new data set:
# * Plot the boxplot of these deaths in the first year reported and compare it with the last year
#   (both boxplots in the same plot)
FirstYear     = min(mydataset$Year, na.rm = TRUE)
LastYear      = max(mydataset$Year, na.rm = TRUE)
interestIndex = mydataset$Year == FirstYear | mydataset$Year == LastYear
mydataset     = mydataset[interestIndex, ]
boxplot(Value ~ Year, data = mydataset) #standard boxplot
boxplot(Value ~ Year, data = filteredDataset, outline = FALSE) #boxplot w/no outliners
>>>>>>> Stashed changes
#************************************************************************
#* AUTHOR(S) :
#*     Bruno González Soria          (A01169284)
#*     Antonio Osamu Katagiri Tanaka (A01212611)
#*
#* FILENAME :
#*     Homework2.R
#*
#* DESCRIPTION :
#*     Computación aplicada (Ene 19 Gpo 1)
#*     Homework 2
#*
#* NOTES :
#*     - https://www.zoology.ubc.ca/~schluter/R/fit-model/
#*
#* START DATE :
#*     XX Feb 2019
#************************************************************************
#install.packages('e1071', dependencies=TRUE)
#install.packages('caret', dependencies=TRUE)
#*** PART 1 *************************************************************
<<<<<<< Updated upstream
# Do a regression analysis to the “pima” dataset from the “faraway”
# library
library(faraway)
library(caret)
data(pima)
# * Analyze the database and select only the observations with no missing
#   data
# complete.cases() returns a logical vector with the value TRUE for rows
# that are complete, and FALSE for rows that have some NA values
completeData = complete.cases(pima)
# remove rows with incomplete data
mydata = pima[completeData, ]
#Let's take a look to the data ...
str(mydata)
pairs(mydata)
cor(mydata)
summary(mydata)
# * Use the R function to fit a model.
# * Dependent variable : Test -> test is a categorical variable ...
# Create the regression model.
#names(mydata)
#------------------------------------------------------------------------
#LINEAR ANALYSIS
# lmFitModel <- lm(test ~ pregnant + glucose + diastolic + triceps + insulin + bmi + diabetes + age, data = mydata)
# summary(lmFitModel)
# lmFitModel
#Let's remove triceps, insulin, and age as they do not have a significant impact on the model
lmFitModel <- lm(test ~ pregnant + glucose + diastolic + bmi + diabetes, data = mydata)
summary(lmFitModel)
lmFitModel
#------------------------------------------------------------------------
#POLYNOMIAL ANALYSIS
gp6Model = lm(
test ~
(pregnant + glucose + diastolic + bmi + diabetes)    +
I((pregnant + glucose + diastolic + bmi + diabetes)^2) +
I((pregnant + glucose + diastolic + bmi + diabetes)^3) +
I((pregnant + glucose + diastolic + bmi + diabetes)^4) +
I((pregnant + glucose + diastolic + bmi + diabetes)^5) +
I((pregnant + glucose + diastolic + bmi + diabetes)^6),
data = mydata)
summary(gp6Model)
gp6Model
#------------------------------------------------------------------------
#ANOVA ANALYSIS
# aovFitModel <- aov(test ~ pregnant + glucose + diastolic + triceps + insulin + bmi + diabetes + age, data = mydata)
# summary(aovFitModel)
# aovFitModel
#Let's remove diastolic, triceps, and insulin as they do not have a significant impact on the model
aovFitModel <- aov(test ~ pregnant + glucose + bmi + diabetes + age, data = mydata)
summary(aovFitModel)
aovFitModel
#------------------------------------------------------------------------
# * How many correct predictions did the fitted model get? How many wrong?
#get test predictions using the LINEAR ANALYSIS
#We assume that: all values less than 0.5 correspond to the first category,
#0.5 or bigger correspond to the second category
lm_predictions = ifelse(predict(lmFitModel, mydata) > 0.5, "1", "0" )
#compare the actual data agains the predictions
correct_lm_predictions = mydata$test == lm_predictions
#count how many of the predictions are right vs wrong
#FALSE:WRONG TRUE:RIGHT
summary(correct_lm_predictions)
# * Confusion matrix
confusionMatrix(as.factor(lm_predictions), as.factor(mydata$test), positive = NULL, dnn = c("Prediction", "Reference"))
#get test predictions using the POLYNOMIAL ANALYSIS
#We assume that: all values less than 0.5 correspond to the first category,
#0.5 or bigger correspond to the second category
gp6_predictions = ifelse(predict(gp6Model, mydata) > 0.5, "1", "0" )
#compare the actual data agains the predictions
correct_gp6_predictions = mydata$test == gp6_predictions
#count how many of the predictions are right vs wrong
#FALSE:WRONG TRUE:RIGHT
summary(correct_gp6_predictions)
# * Confusion matrix
confusionMatrix(as.factor(gp6_predictions), as.factor(mydata$test), positive = NULL, dnn = c("Prediction", "Reference"))
#get test predictions using the ANOVA ANALYSIS
#We assume that: all values less than 0.5 correspond to the first category,
#0.5 or bigger correspond to the second category
aov_predictions = ifelse(predict(aovFitModel, mydata) > 0.5, "1", "0" )
#compare the actual data agains the predictions
correct_aov_predictions = mydata$test == aov_predictions
#count how many of the predictions are right vs wrong
#FALSE:WRONG TRUE:RIGHT
summary(correct_aov_predictions)
# * Confusion matrix
confusionMatrix(as.factor(aov_predictions), as.factor(mydata$test), positive = NULL, dnn = c("Prediction", "Reference"))
# Which regression did you use?
# * ANCOVA, ANOVA, simple regression, logistic regression
# * Justify your answer
=======
# Load the dataset.csv
dataset = read.csv("Dataset.csv")
# The new dataset must have:
# * Only relevant variables (Not repeated data accross columns)
# column | meaning
# -------+--------
#      2 | Variable
#      4 | Measure
#      6 | Country
#      8 | Year
#      9 | Value
columnsOfInterest = c(2,4,6,8,9)
mydataset         = dataset[, columnsOfInterest]
# * Only the counts related to "All causes of death"
# levels(mydataset$Variable) #print the available values in column "Variable"
interestIndex = mydataset$Variable == "All causes of death"
mydataset     = mydataset[interestIndex, ]
# * And the measure must be "Number of total deaths"
# levels(mydataset$Measure) #print the available values in column "Measure"
interestIndex = mydataset$Measure == "Number of total deaths"
mydataset     = mydataset[interestIndex, ]
# * All years and all countries must be included
# * Save the new database in another csv file called "filteredDatabase.csv"
# TIP: Use matrix and submatrix notation to get the desired values and the write.csv function
write.csv(mydataset, file = "filteredDatabase.csv", row.names = FALSE, na = "")
#     remove row names, omit NAs
#*** PART 2 *************************************************************
# Select another cause of death and measure to get a second dataset.
# Filters to select the number of males deaths due to VIH-AIDS
mydataset     = dataset[, columnsOfInterest]
interestIndex = mydataset$Variable == "HIV-AIDS"
mydataset     = mydataset[interestIndex, ]
interestIndex = mydataset$Measure == "Number of male deaths"
mydataset     = mydataset[interestIndex, ]
mydataset$Year
# With this new data set:
# * Plot the boxplot of these deaths in the first year reported and compare it with the last year
#   (both boxplots in the same plot)
FirstYear     = min(mydataset$Year, na.rm = TRUE)
LastYear      = max(mydataset$Year, na.rm = TRUE)
interestIndex = mydataset$Year == FirstYear | mydataset$Year == LastYear
mydataset     = mydataset[interestIndex, ]
boxplot(Value ~ Year, data = mydataset) #standard boxplot
boxplot(Value ~ Year, data = mydataset, outline = FALSE) #boxplot w/no outliners
summary(mydataset)
#************************************************************************
#* AUTHOR(S) :
#*     Bruno González Soria (A01169284)
#*     Antonio Osamu Katagiri Tanaka (A01212611)
#*
#* FILENAME :
#*     Homework1.R
#*
#* DESCRIPTION :
#*     Computación aplicada (Ene 19 Gpo 1)
#*     Homework 1
#*
#* NOTES :
#*     - Upload the .R file with all your code in the Assignment tab in
#*       Bb Assignment - R Homework
#*     - 1 per pair. Both names in a comment at the beginning of the .R
#*       file
#*     - DO NOT upload the csv file
#*
#* START DATE :
#*     25 Jan 2019
#************************************************************************
#*** PART 1 *************************************************************
# Load the dataset.csv
dataset = read.csv("Dataset.csv")
# The new dataset must have:
# * Only relevant variables (Not repeated data accross columns)
# column | meaning
# -------+--------
#      2 | Variable
#      4 | Measure
#      6 | Country
#      8 | Year
#      9 | Value
columnsOfInterest = c(2,4,6,8,9)
mydataset         = dataset[, columnsOfInterest]
# * Only the counts related to "All causes of death"
# levels(mydataset$Variable) #print the available values in column "Variable"
interestIndex = mydataset$Variable == "All causes of death"
mydataset     = mydataset[interestIndex, ]
# * And the measure must be "Number of total deaths"
# levels(mydataset$Measure) #print the available values in column "Measure"
interestIndex = mydataset$Measure == "Number of total deaths"
mydataset     = mydataset[interestIndex, ]
# * All years and all countries must be included
# * Save the new database in another csv file called "filteredDatabase.csv"
# TIP: Use matrix and submatrix notation to get the desired values and the write.csv function
write.csv(mydataset, file = "filteredDatabase.csv", row.names = FALSE, na = "")
#     remove row names, omit NAs
summary(mydataset)
#*** PART 2 *************************************************************
# Select another cause of death and measure to get a second dataset.
# Filters to select the number of males deaths due to VIH-AIDS
mydataset     = dataset[, columnsOfInterest]
interestIndex = mydataset$Variable == "HIV-AIDS"
mydataset     = mydataset[interestIndex, ]
interestIndex = mydataset$Measure == "Number of male deaths"
mydataset     = mydataset[interestIndex, ]
# With this new data set:
# * Plot the boxplot of these deaths in the first year reported and compare it with the last year
#   (both boxplots in the same plot)
FirstYear     = min(mydataset$Year, na.rm = TRUE)
LastYear      = max(mydataset$Year, na.rm = TRUE)
interestIndex = mydataset$Year == FirstYear | mydataset$Year == LastYear
mydataset     = mydataset[interestIndex, ]
boxplot(Value ~ Year, data = mydataset) #standard boxplot
boxplot(Value ~ Year, data = mydataset, outline = FALSE) #boxplot w/no outliners
summary(mydataset)
boxplot(Value ~ Year, data = mydataset, xlab = "HOLAAAA") #standard boxplot
boxplot(Value ~ Year, data = mydataset, xlab = "Year", ylab = "number of males deaths due to VIH-AIDS") #standard boxplot
boxplot(
Value ~ Year,
data = mydataset,
xlab = "Year",
ylab = "number of male deaths due to VIH-AIDS"
)
#************************************************************************
#* AUTHOR(S) :
#*     Bruno González Soria (A01169284)
#*     Antonio Osamu Katagiri Tanaka (A01212611)
#*
#* FILENAME :
#*     Homework1.R
#*
#* DESCRIPTION :
#*     Computación aplicada (Ene 19 Gpo 1)
#*     Homework 1
#*
#* NOTES :
#*     - Upload the .R file with all your code in the Assignment tab in
#*       Bb Assignment - R Homework
#*     - 1 per pair. Both names in a comment at the beginning of the .R
#*       file
#*     - DO NOT upload the csv file
#*
#* START DATE :
#*     25 Jan 2019
#************************************************************************
#*** PART 1 *************************************************************
# Load the dataset.csv
dataset = read.csv("Dataset.csv")
# The new dataset must have:
# * Only relevant variables (Not repeated data accross columns)
# column | meaning
# -------+--------
#      2 | Variable
#      4 | Measure
#      6 | Country
#      8 | Year
#      9 | Value
columnsOfInterest = c(2,4,6,8,9)
mydataset         = dataset[, columnsOfInterest]
# * Only the counts related to "All causes of death"
# levels(mydataset$Variable) #print the available values in column "Variable"
interestIndex = mydataset$Variable == "All causes of death"
mydataset     = mydataset[interestIndex, ]
# * And the measure must be "Number of total deaths"
# levels(mydataset$Measure) #print the available values in column "Measure"
interestIndex = mydataset$Measure == "Number of total deaths"
mydataset     = mydataset[interestIndex, ]
# * All years and all countries must be included
# * Save the new database in another csv file called "filteredDatabase.csv"
# TIP: Use matrix and submatrix notation to get the desired values and the write.csv function
write.csv(mydataset, file = "filteredDatabase.csv", row.names = FALSE, na = "")
#     remove row names, omit NAs
#*** PART 2 *************************************************************
# Select another cause of death and measure to get a second dataset.
# Filters to select the number of male deaths due to VIH-AIDS
mydataset     = dataset[, columnsOfInterest]
interestIndex = mydataset$Variable == "HIV-AIDS"
mydataset     = mydataset[interestIndex, ]
interestIndex = mydataset$Measure == "Number of male deaths"
mydataset     = mydataset[interestIndex, ]
# With this new data set:
# * Plot the boxplot of these deaths in the first year reported and compare it with the last year
#   (both boxplots in the same plot)
FirstYear     = min(mydataset$Year, na.rm = TRUE)
LastYear      = max(mydataset$Year, na.rm = TRUE)
interestIndex = mydataset$Year == FirstYear | mydataset$Year == LastYear
mydataset     = mydataset[interestIndex, ]
#standard boxplot
boxplot(
Value ~ Year,
data = mydataset,
xlab = "Year",
ylab = "number of male deaths due to VIH-AIDS"
)
#boxplot w/no outliners
boxplot(
Value ~ Year,
data = mydataset,
xlab = "Year",
ylab = "number of male deaths due to VIH-AIDS",
outline = FALSE
)
#************************************************************************
#* AUTHOR(S) :
#*     Bruno González Soria (A01169284)
#*     Antonio Osamu Katagiri Tanaka (A01212611)
#*
#* FILENAME :
#*     Homework1.R
#*
#* DESCRIPTION :
#*     Computación aplicada (Ene 19 Gpo 1)
#*     Homework 1
#*
#* NOTES :
#*     - Upload the .R file with all your code in the Assignment tab in
#*       Bb Assignment - R Homework
#*     - 1 per pair. Both names in a comment at the beginning of the .R
#*       file
#*     - DO NOT upload the csv file
#*
#* START DATE :
#*     25 Jan 2019
#************************************************************************
#*** PART 1 *************************************************************
# Load the dataset.csv
dataset = read.csv("Dataset.csv")
# The new dataset must have:
# * Only relevant variables (Not repeated data accross columns)
# column | meaning
# -------+--------
#      2 | Variable
#      4 | Measure
#      6 | Country
#      8 | Year
#      9 | Value
columnsOfInterest = c(2,4,6,8,9)
mydataset         = dataset[, columnsOfInterest]
# * Only the counts related to "All causes of death"
# levels(mydataset$Variable) #print the available values in column "Variable"
interestIndex = mydataset$Variable == "All causes of death"
mydataset     = mydataset[interestIndex, ]
# * And the measure must be "Number of total deaths"
# levels(mydataset$Measure) #print the available values in column "Measure"
interestIndex = mydataset$Measure == "Number of total deaths"
mydataset     = mydataset[interestIndex, ]
# * All years and all countries must be included
# * Save the new database in another csv file called "filteredDatabase.csv"
# TIP: Use matrix and submatrix notation to get the desired values and the write.csv function
write.csv(mydataset, file = "filteredDatabase.csv", row.names = FALSE, na = "")
#     remove row names, omit NAs
#*** PART 2 *************************************************************
# Select another cause of death and measure to get a second dataset.
# Filters to select the number of male deaths due to VIH-AIDS
mydataset     = dataset[, columnsOfInterest]
interestIndex = mydataset$Variable == "HIV-AIDS"
mydataset     = mydataset[interestIndex, ]
interestIndex = mydataset$Measure == "Number of male deaths"
mydataset     = mydataset[interestIndex, ]
# With this new data set:
# * Plot the boxplot of these deaths in the first year reported and compare it with the last year
#   (both boxplots in the same plot)
FirstYear     = min(mydataset$Year, na.rm = TRUE)
LastYear      = max(mydataset$Year, na.rm = TRUE)
interestIndex = mydataset$Year == FirstYear | mydataset$Year == LastYear
mydataset     = mydataset[interestIndex, ]
#standard boxplot
boxplot(
Value ~ Year,
data = mydataset,
xlab = "Year",
ylab = "number of male deaths due to VIH-AIDS"
)
#boxplot w/no outliners
boxplot(
Value ~ Year,
data = mydataset,
xlab = "Year",
ylab = "number of male deaths due to VIH-AIDS",
outline = FALSE
)
#************************************************************************
#* AUTHOR(S) :
#*     Bruno González Soria          (A01169284)
#*     Antonio Osamu Katagiri Tanaka (A01212611)
#*
#* FILENAME :
#*     Homework1.R
#*
#* DESCRIPTION :
#*     Computación aplicada (Ene 19 Gpo 1)
#*     Homework 1
#*
#* NOTES :
#*     - Upload the .R file with all your code in the Assignment tab in
#*       Bb Assignment - R Homework
#*     - 1 per pair. Both names in a comment at the beginning of the .R
#*       file
#*     - DO NOT upload the csv file
#*
#* START DATE :
#*     25 Jan 2019
#************************************************************************
#*** PART 1 *************************************************************
# Load the dataset.csv
dataset = read.csv("Dataset.csv")
# The new dataset must have:
# * Only relevant variables (Not repeated data accross columns)
# column | meaning
# -------+--------
#      2 | Variable
#      4 | Measure
#      6 | Country
#      8 | Year
#      9 | Value
columnsOfInterest = c(2,4,6,8,9)
mydataset         = dataset[, columnsOfInterest]
# * Only the counts related to "All causes of death"
# levels(mydataset$Variable) #print the available values in column "Variable"
interestIndex = mydataset$Variable == "All causes of death"
mydataset     = mydataset[interestIndex, ]
# * And the measure must be "Number of total deaths"
# levels(mydataset$Measure) #print the available values in column "Measure"
interestIndex = mydataset$Measure == "Number of total deaths"
mydataset     = mydataset[interestIndex, ]
# * All years and all countries must be included
# * Save the new database in another csv file called "filteredDatabase.csv"
# TIP: Use matrix and submatrix notation to get the desired values and the write.csv function
write.csv(mydataset, file = "filteredDatabase.csv", row.names = FALSE, na = "")
#     remove row names, omit NAs
#*** PART 2 *************************************************************
# Select another cause of death and measure to get a second dataset.
# Filters to select the number of male deaths due to VIH-AIDS
mydataset     = dataset[, columnsOfInterest]
interestIndex = mydataset$Variable == "HIV-AIDS"
mydataset     = mydataset[interestIndex, ]
interestIndex = mydataset$Measure == "Number of male deaths"
mydataset     = mydataset[interestIndex, ]
# With this new data set:
# * Plot the boxplot of these deaths in the first year reported and compare it with the last year
#   (both boxplots in the same plot)
FirstYear     = min(mydataset$Year, na.rm = TRUE) # get the 1st year, remove NAs
LastYear      = max(mydataset$Year, na.rm = TRUE) # get the last year, remove NAs
# Apply filter
interestIndex = mydataset$Year == FirstYear | mydataset$Year == LastYear
mydataset     = mydataset[interestIndex, ]
#boxplot w/no outliners
boxplot(
Value ~ Year,
data = mydataset,
xlab = "Year",
ylab = "number of male deaths due to VIH-AIDS",
outline = FALSE
)
>>>>>>> Stashed changes
