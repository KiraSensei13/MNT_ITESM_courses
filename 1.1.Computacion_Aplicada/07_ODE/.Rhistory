f.x.y <- expression(ln(x))
f.x.y
f.x.y <- expression(log(x))
f.x.y
f.x.y <- expression((-2*(x^3)) + (12*(x^2)) - (20*x) + 8.5)
f.x.y
f.x.y <- expression(log(x))
h <- 0.25
yi <- 1
x = 0.001
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yreal <- eval(y)
y1 <- eval(f.x.y)
y.temp <- yi
yi <- yi + h*y1
x <- x + h
y2 <- eval(f.x.y)
yi <- y.temp  + (y1 + y2)*h*0.5
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.01)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
f.x.y <- expression(log(x))
y <- expression(1/x)
h=0.25
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yreal <- eval(y)
y1 <- eval(f.x.y)
y.temp <- yi
yi <- yi + h*y1
x <- x + h
y2 <- eval(f.x.y)
yi <- y.temp  + (y1 + y2)*h*0.5
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.01)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
y <- expression(1/x)
yreal <- eval(y)
f.x.y <- expression(log(x))
y <- expression(1/x)
h=0.25
# ODES
{
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yi <- yi + h*eval(f.x.y)
x <- x + h
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.05)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
}
f.x.y <- expression(log(x))
y <- expression(1/x)
h=0.25
# ODES
{
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yi <- yi + h*eval(f.x.y)
x <- x + h
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.05)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
}
f.x.y <- expression(log(x))
y <- expression(1/x)
h=0.25
# Euler
{
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yreal <- eval(y)
y1 <- eval(f.x.y)
y.temp <- yi
yi <- yi + h*y1
x <- x + h
y2 <- eval(f.x.y)
yi <- y.temp  + (y1 + y2)*h*0.5
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.01)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
}
f.x.y <- expression(1/x)
y <- expression(log(x))
h=0.25
# ODES
{
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yi <- yi + h*eval(f.x.y)
x <- x + h
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.05)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
}
f.x.y <- expression(log(x))
y <- expression(-x + x log(x))
h=0.25
# ODES
{
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yi <- yi + h*eval(f.x.y)
x <- x + h
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.05)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
}
y <- expression(-x + x*log(x))
# ODES
{
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yi <- yi + h*eval(f.x.y)
x <- x + h
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.05)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
}
# Euler
{
yi <- 1
x <- 0
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(4/h)){
yreal <- eval(y)
y1 <- eval(f.x.y)
y.temp <- yi
yi <- yi + h*y1
x <- x + h
y2 <- eval(f.x.y)
yi <- y.temp  + (y1 + y2)*h*0.5
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,4,0.01)
yreal <- eval(y)
plot(x,yreal ,
ylim = c(min(c(aproximaciones[,2],yreal)),
max(c(aproximaciones[,2],yreal))),
type = "l", col = "red")
points(seq(0,4,h),aproximaciones[,2], col = "blue", pch = 17)
}
### ODEs
## Euler method
f.x.y <- expression(log(x))
y <- expression(-x + x*log(x))
upperBound = 10
h <- 0.5
{
yi <- 1
x <- 0.001
aproximaciones <- c("x" = x, "Approx" = yi)
for(i in 1:(upperBound/h)){
yi <- yi + h*eval(f.x.y)
x <- x + h
aproximaciones <- rbind(aproximaciones, c(x, yi))
}
print(aproximaciones)
x <- seq(0,upperBound,h)
yreal <- eval(y)
plot(x,yreal)
points(aproximaciones[,1],aproximaciones[,2], col = "blue", pch = 17)
}
